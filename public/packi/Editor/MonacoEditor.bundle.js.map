{"version":3,"sources":["webpack://wizzi.editor/./src/components/widgets/ResizeDetector.tsx","webpack://wizzi.editor/./src/components/Editor/themes/monaco.tsx","webpack://wizzi.editor/./src/components/Editor/themes/monaco-overrides.tsx","webpack://wizzi.editor/./src/components/Editor/MonacoEditor.tsx","webpack://wizzi.editor/./src/components/Editor/languages/ittf.language.tsx","webpack://wizzi.editor/./src/components/Editor/themes/ittf.light.theme.tsx","webpack://wizzi.editor/./src/components/Editor/themes/ittf.dark.theme.tsx","webpack://wizzi.editor/./src/features/prettier/prettierCode.tsx","webpack://wizzi.editor/./src/components/Editor/themes/colors-dark.tsx","webpack://wizzi.editor/./src/components/Editor/themes/colors-light.tsx"],"names":["ResizeDetector","props","onResize","React","horiz","this","_horizontal","current","verti","_vertical","contentWindow","addEventListener","_handleResize","removeEventListener","className","css","styles","container","ref","phantom","horizontal","vertical","children","StyleSheet","display","flex","flexDirection","minWidth","minHeight","position","left","top","pointerEvents","opacity","height","width","c","color","substr","theme","ui","syntax","base","inherit","rules","token","foreground","text","invalid","fontStyle","variable","constant","comment","number","regexp","annotation","tag","string","property","keyword","operator","predefined","colors","background","indent","inactive","active","light","lightColors","dark","darkColors","String","raw","s","SimpleEditorModelResolverService","_","resource","monaco","find","model","uri","toString","global","MonacoEnvironment","getWorkerUrl","moduleId","label","id","tokenizer","root","include","whitespace","next","includeValue","mix","cases","ittfCommand","nodeName","nodeValue","mixValue","scriptLine","scriptMultiLine","documentFormattingProvider","async","path","code","parser","plugins","getFileLanguage","Promise","all","prettier","default","config","format","prettierCode","getValue","range","getFullModelRange","editorStates","Map","codeEditorService","StaticServices","findModel","MonacoEditorComp","value","isDisposed","pushEditOperations","endsWith","scheme","undefined","updateOptions","tabSize","insertSpaces","focus","console","log","__filename","_initializeFile","_editor","setModel","editorState","get","restoreViewState","_event","getModel","files","selectedFile","contents","updateFiles","type","debounce","layout","leading","trailing","delete","dispose","oldPath","newPath","selection","set","removePath","filePath","autoFocus","onSelectFile","readOnly","rest","openCodeEditor","options","editor","replace","setSelection","revealLine","startLineNumber","getControl","getTheme","_node","_disposables","push","onDidChangeModelContent","_handleEditFile","_openFile","file","prevProps","prevState","saveViewState","executeEdits","forEach","dis","dangerouslySetInnerHTML","__html","overrides","classnames","lineNumbers","wordWrap","scrollBeyondLastLine","minimap","enabled","fontFamily","fontLigatures","MonacoEditor","withThemeName"],"mappings":"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","file":"Editor/MonacoEditor.bundle.js","sourcesContent":["/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ResizeDetector.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\n\ntype Props = { \n    onResize: () => void;\n    children: React.ReactNode;\n};\n\nexport default class ResizeDetector extends React.Component<Props> {\n        componentDidMount() {\n            const horiz = this._horizontal.current;\n            const verti = this._vertical.current;\n            horiz?.contentWindow?.addEventListener?.('resize', this._handleResize);\n            verti?.contentWindow?.addEventListener?.('resize', this._handleResize);\n        }\n        componentWillUnmount() {\n            const horiz = this._horizontal.current;\n            const verti = this._vertical.current;\n            horiz?.contentWindow?.removeEventListener?.('resize', this._handleResize);\n            verti?.contentWindow?.removeEventListener?.('resize', this._handleResize);\n        }\n        _handleResize = () => \n            this.props.onResize();\n        _horizontal = React.createRef<HTMLIFrameElement>();\n        _vertical = React.createRef<HTMLIFrameElement>();\n        \n        /**\n            * pointer-events: none is not working properly on EDGE, so we render 2 iframes to detect resize instead of one iframe covering the entire editor\n        */\n        render() {\n            return  (\n                <div\n                 className={css(styles.container)}>\n                    {}<iframe\n                     ref={this._horizontal} className={css(styles.phantom, styles.horizontal)} />\n                    <iframe\n                     ref={this._vertical} className={css(styles.phantom, styles.vertical)} />\n                    {this.props.children}\n                </div>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex', \n        flex: 1, \n        flexDirection: 'column', \n        minWidth: 0, \n        minHeight: 0, \n        position: 'relative'\n     }, \n    phantom: {\n        display: 'block', \n        position: 'absolute', \n        left: 0, \n        top: 0, \n        pointerEvents: 'none', \n        opacity: 0\n     }, \n    horizontal: {\n        height: 1, \n        width: '100%'\n     }, \n    vertical: {\n        height: '100%', \n        width: 1\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\Editor\\themes\\monaco.tsx.ittf\n*/\nimport * as darkColors from './colors-dark';\nimport * as lightColors from './colors-light';\nconst c = (color: string) => \n\n    color.substr(1)\n;\nconst theme = ({\n    ui, \n    syntax\n }: { \n    ui: lightColors.UIColors;\n    syntax: lightColors.SyntaxColors;\n}, base: 'vs' | 'vs-dark') => \n\n    ({\n        base, \n        inherit: true, \n        rules: [\n            {\n                token: '', \n                foreground: c(syntax.text)\n             }, \n            {\n                token: 'invalid', \n                foreground: c(syntax.invalid)\n             }, \n            {\n                token: 'emphasis', \n                fontStyle: 'italic'\n             }, \n            {\n                token: 'strong', \n                fontStyle: 'bold'\n             }, \n            {\n                token: 'variable', \n                foreground: c(syntax.variable)\n             }, \n            {\n                token: 'variable.predefined', \n                foreground: c(syntax.variable)\n             }, \n            {\n                token: 'constant', \n                foreground: c(syntax.constant)\n             }, \n            {\n                token: 'comment', \n                foreground: c(syntax.comment), \n                fontStyle: 'italic'\n             }, \n            {\n                token: 'number', \n                foreground: c(syntax.number)\n             }, \n            {\n                token: 'number.hex', \n                foreground: c(syntax.number)\n             }, \n            {\n                token: 'regexp', \n                foreground: c(syntax.regexp)\n             }, \n            {\n                token: 'annotation', \n                foreground: c(syntax.annotation)\n             }, \n            {\n                token: 'type', \n                foreground: c(syntax.annotation)\n             }, \n            {\n                token: 'delimiter', \n                foreground: c(syntax.text)\n             }, \n            {\n                token: 'delimiter.html', \n                foreground: c(syntax.text)\n             }, \n            {\n                token: 'delimiter.xml', \n                foreground: c(syntax.text)\n             }, \n            {\n                token: 'tag', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'tag.id.jade', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'tag.class.jade', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'meta.scss', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'metatag', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'metatag.content.html', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'metatag.html', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'metatag.xml', \n                foreground: c(syntax.tag)\n             }, \n            {\n                token: 'metatag.php', \n                fontStyle: 'bold'\n             }, \n            {\n                token: 'key', \n                foreground: c(syntax.property)\n             }, \n            {\n                token: 'string.key.json', \n                foreground: c(syntax.property)\n             }, \n            {\n                token: 'string.value.json', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'attribute.name', \n                foreground: c(syntax.constant)\n             }, \n            {\n                token: 'attribute.value', \n                foreground: c(syntax.property)\n             }, \n            {\n                token: 'attribute.value.number', \n                foreground: c(syntax.number)\n             }, \n            {\n                token: 'attribute.value.unit', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'attribute.value.html', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'attribute.value.xml', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'string', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'string.html', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'string.sql', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'string.yaml', \n                foreground: c(syntax.string)\n             }, \n            {\n                token: 'keyword', \n                foreground: c(syntax.keyword)\n             }, \n            {\n                token: 'keyword.json', \n                foreground: c(syntax.keyword)\n             }, \n            {\n                token: 'keyword.flow', \n                foreground: c(syntax.keyword)\n             }, \n            {\n                token: 'keyword.flow.scss', \n                foreground: c(syntax.keyword)\n             }, \n            {\n                token: 'operator.scss', \n                foreground: c(syntax.operator)\n             }, \n            {\n                token: 'operator.sql', \n                foreground: c(syntax.operator)\n             }, \n            {\n                token: 'operator.swift', \n                foreground: c(syntax.operator)\n             }, \n            {\n                token: 'predefined.sql', \n                foreground: c(syntax.predefined)\n             }\n        ], \n        colors: {\n            'editor.background': ui.background, \n            'editor.foreground': ui.text, \n            'editorIndentGuide.background': ui.indent.inactive, \n            'editorIndentGuide.activeBackground': ui.indent.active, \n            'editorOverviewRuler.border': ui.background\n         }\n     })\n;\nexport const light = theme(lightColors, 'vs');\nexport const dark = theme(darkColors, 'vs-dark');\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\Editor\\themes\\monaco-overrides.tsx.ittf\n*/\nimport {c, s} from '../../ThemeProvider';\nimport * as darkColors from './colors-dark';\nimport * as lightColors from './colors-light';\nimport {light, dark} from './monaco';\nconst css = String.raw;\nexport default css`\n  /* Common overrides */\n  .packi-monaco-editor .monaco-editor .line-numbers {\n    color: currentColor;\n    opacity: 0.5;\n  }\n\n  /* Context menu overrides */\n  .packi-monaco-editor .context-view.monaco-menu-container {\n    font-family: 'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    background-color: transparent;\n    box-shadow: none;\n    border: none;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar {\n    padding: 4px;\n    border-radius: 3px;\n    border-style: solid;\n    box-shadow: ${s('popover')} !important;\n    background-color: ${c('content')} !important;\n    color: ${c('text')} !important;\n    border-color: transparent !important;\n  }\n\n  .packi-monaco-editor.theme-light .monaco-menu .monaco-action-bar {\n    border-width: 0;\n  }\n\n  .packi-monaco-editor.theme-dark .monaco-menu .monaco-action-bar {\n    border-width: 1px;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label,\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label:focus {\n    font-size: 14px;\n    line-height: 1;\n    color: inherit;\n    border: 0;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item,\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item:focus {\n    color: inherit !important;\n    text-shadow: none !important;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.disabled .action-menu-item {\n    pointer-events: none;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.focused:not(.disabled),\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item:hover:not(.disabled) {\n    border-radius: 2px;\n    background-color: ${c('primary')} !important;\n    color: white !important;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item {\n    background-color: transparent !important;\n    color: inherit !important;\n  }\n\n  .packi-monaco-editor\n    .monaco-menu\n    .monaco-action-bar\n    .action-item\n    .action-menu-item:focus:not(.disabled)\n    .action-label,\n  .packi-monaco-editor\n    .monaco-menu\n    .monaco-action-bar\n    .action-item:hover:not(.disabled)\n    .action-label {\n    color: inherit;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding {\n    color: inherit;\n    font-size: 85%;\n    font-family: 'SF Mono', Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\n    line-height: 18px;\n    opacity: 0.5;\n    margin-left: 8px;\n  }\n\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding,\n  .packi-monaco-editor .monaco-menu .monaco-action-bar .action-label:not(.separator) {\n    padding: 8px 12px;\n  }\n\n  .packi-monaco-editor .monaco-action-bar .action-label.separator {\n    border-bottom-color: currentColor;\n    opacity: 0.1;\n  }\n\n  /* Light theme overrides */\n  .packi-monaco-editor.theme-light .JsxText {\n    color: ${light.colors['editor.foreground']};\n  }\n\n  .packi-monaco-editor.theme-light .JsxSelfClosingElement,\n  .packi-monaco-editor.theme-light .JsxOpeningElement,\n  .packi-monaco-editor.theme-light .JsxClosingElement,\n  .packi-monaco-editor.theme-light .tagName-of-JsxOpeningElement,\n  .packi-monaco-editor.theme-light .tagName-of-JsxClosingElement,\n  .packi-monaco-editor.theme-light .tagName-of-JsxSelfClosingElement {\n    color: ${lightColors.syntax.property};\n  }\n\n  .packi-monaco-editor.theme-light .name-of-JsxAttribute {\n    color: ${lightColors.syntax.number};\n  }\n\n  .packi-monaco-editor.theme-light .name-of-PropertyAssignment {\n    color: ${lightColors.syntax.string};\n  }\n\n  .packi-monaco-editor.theme-light .name-of-PropertyAccessExpression {\n    color: ${lightColors.syntax.constant};\n  }\n\n  /* Dark theme overrides */\n  .packi-monaco-editor.theme-dark .JsxText {\n    color: ${dark.colors['editor.foreground']};\n  }\n\n  .packi-monaco-editor.theme-dark .JsxSelfClosingElement,\n  .packi-monaco-editor.theme-dark .JsxOpeningElement,\n  .packi-monaco-editor.theme-dark .JsxClosingElement,\n  .packi-monaco-editor.theme-dark .tagName-of-JsxOpeningElement,\n  .packi-monaco-editor.theme-dark .tagName-of-JsxClosingElement,\n  .packi-monaco-editor.theme-dark .tagName-of-JsxSelfClosingElement {\n    color: ${darkColors.syntax.property};\n  }\n\n  .packi-monaco-editor.theme-dark .name-of-JsxAttribute {\n    color: ${darkColors.syntax.number};\n  }\n\n  .packi-monaco-editor.theme-dark .name-of-PropertyAssignment {\n    color: ${darkColors.syntax.string};\n  }\n\n  .packi-monaco-editor.theme-dark .name-of-PropertyAccessExpression {\n    color: ${darkColors.syntax.constant};\n  }\n\n  .packi-monaco-vim-statusbar {\n    font-family: ${'var(--font-monospace)'};\n    font-size: 12px;\n    padding: 0 16px;\n    height: 24px;\n    line-height: 24px;\n    border-top: 1px solid ${c('border')};\n  }\n\n  .packi-monaco-vim-statusbar input {\n    font-family: ${'var(--font-monospace)'};\n    height: 100%;\n    outline: 0;\n    border: 0;\n    background: transparent;\n  }\n`;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\Editor\\MonacoEditor.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport classnames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.main';\nimport {SimpleEditorModelResolverService} from 'monaco-editor/esm/vs/editor/standalone/browser/simpleServices';\nimport {StaticServices} from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices';\nimport * as React from 'react';\nimport {Annotation} from '../../features/annotations/index';\nimport {getFileLanguage, getRelativePath, getAbsolutePath} from '../../features/file/index';\nimport {prettierCode} from '../../features/prettier/index';\nimport {withThemeName, ThemeName} from '../../features/preferences/index';\nimport ResizeDetector from '../widgets/ResizeDetector';\nimport {EditorProps} from './EditorProps';\nimport {light, dark} from './themes/monaco';\nimport ittfLang from './languages/ittf.language';\nimport ittfDarkTheme from './themes/ittf.dark.theme';\nimport ittfLightTheme from './themes/ittf.light.theme';\nimport overrides from './themes/monaco-overrides';\n\n\n/**\n    * \n    * Monkeypatch to make 'Find All References' work across multiple files\n    * https://github.com/Microsoft/monaco-editor/issues/779#issuecomment-374258435\n    * \n*/\n\n// @ts-ignore\nSimpleEditorModelResolverService.prototype.findModel = function(_: any, resource: any) { \n    return monaco.editor.getModels().find(model => \n        \n            model.uri.toString() === resource.toString()\n        );\n}\n;\n\n\n// @ts-ignore\nglobal.MonacoEnvironment = { getWorkerUrl(moduleId: string, label: string) { switch (label) { case 'json': { return '/public/packi/json.worker.bundle.js'; } case 'html': { return '/public/packi/html.worker.bundle.js'; } case 'css': case 'scss': case 'less': { return '/public/packi/css.worker.bundle.js'; } case 'typescript': case 'javascript': { return '/public/packi/ts.worker.bundle.js'; } default: { return '/public/packi/editor.worker.bundle.js'; } } }   }; \nmonaco.languages.register({\n    id: 'ittf'\n })\nmonaco.languages.setMonarchTokensProvider('ittf', ittfLang);\nmonaco.editor.defineTheme('ittfLight', ittfLightTheme);\nmonaco.editor.defineTheme('ittfDark', ittfDarkTheme);\nmonaco.editor.defineTheme('light', light);\nmonaco.editor.defineTheme('dark', dark);\n\n/**\n    * \n    * Use prettier to format code.\n    * This will replace the default formatter.\n    * \n*/\nconst documentFormattingProvider: monaco.languages.DocumentFormattingEditProvider = {\n    async provideDocumentFormattingEdits(model) {\n        const text = await prettierCode(model.uri.path, model.getValue());\n        return [\n                {\n                    range: model.getFullModelRange(), \n                    text\n                 }\n            ];\n    }\n    \n };\nmonaco.languages.registerDocumentFormattingEditProvider('javascript', documentFormattingProvider);\nmonaco.languages.registerDocumentFormattingEditProvider('typescript', documentFormattingProvider);\nmonaco.languages.registerDocumentFormattingEditProvider('markdown', documentFormattingProvider);\nexport type MonacoEditorProps = EditorProps & { \n    theme: ThemeName;\n};\ntype State = { \n};\n\n// Store editor states such as cursor position, selection and scroll position for each model\nconst editorStates = new Map();\n\n// Store details about typings we have requested and loaded\nconst requestedTypings = new Map();\nconst extraLibs = new Map();\nconst codeEditorService = StaticServices.codeEditorService.get();\nconst findModel = (path: string) => \n\n    monaco.editor.getModels().find(model => \n    \n        model.uri.path === (`/${path}`)\n    )\n;\nclass MonacoEditorComp extends React.Component<MonacoEditorProps, State> {\n    static defaultProps: Partial<MonacoEditorProps> = {\n        lineNumbers: 'on', \n        wordWrap: 'on', \n        scrollBeyondLastLine: false, \n        minimap: {\n            enabled: false\n         }, \n        fontFamily: 'var(--font-monospace)', \n        fontLigatures: true\n    }\n    ;\n    state: State = {};\n    static removePath(path: string) {\n        // Remove editor states\n        editorStates.delete(path);\n        \n        // Remove associated models\n        const model = findModel(path);\n        model?.dispose?.();\n    }\n    static renamePath(oldPath: string, newPath: string) {\n        const selection = editorStates.get(oldPath);\n        editorStates.delete(oldPath);\n        editorStates.set(newPath, selection);\n        this.removePath(oldPath);\n    }\n    getTheme(theme: string, filePath: string) {\n        if (filePath.endsWith('.ittf')) {\n            return theme == 'ligth' ? 'ittfLight' : 'ittfDark';\n        }\n        else {\n            return theme;\n        }\n    }\n    componentDidMount() {\n        const {\n            files, \n            selectedFile, \n            autoFocus, \n            updateFiles, \n            onSelectFile, \n            readOnly, \n            ...rest\n         } = this.props;\n        \n        // The methods provided by the service are on it's prototype\n        \n        // So spreading this object doesn't work, we must mutate it\n        codeEditorService.openCodeEditor = async ({\n            resource, \n            options\n         }: any, editor: monaco.editor.IStandaloneCodeEditor) => {\n        \n            // Remove the leading slash added by the Uri\n            this.props.onSelectFile(resource.path.replace(/^\\//, ''));\n            editor.setSelection(options.selection);\n            editor.revealLine(options.selection.startLineNumber);\n            return {\n                    getControl: () => \n                    \n                        editor\n                    \n                 };\n        }\n        ;\n        const options = {\n            ...rest, \n            theme: this.getTheme(rest.theme, selectedFile), \n            readOnly: readOnly\n         };\n        const editor = monaco.editor.create(this._node.current as HTMLDivElement, options, codeEditorService);\n        this._editor = editor;\n        this._disposables = [\n            editor\n        ];\n        this._disposables.push(editor.onDidChangeModelContent(this._handleEditFile));\n        this._openFile(selectedFile, files[selectedFile]?.contents  as string, autoFocus)\n        for (const path in files) {\n            const file = files[path];\n            if (file.type === 'CODE') {\n                this._initializeFile(path, file.contents);\n            }\n            // Load all the files so the editor can provide proper intellisense\n        }\n    }\n    componentDidUpdate(prevProps: MonacoEditorProps, prevState: State) {\n        const {\n            selectedFile, \n            files, \n            autoFocus, \n            theme, \n            updateFiles, \n            onSelectFile, \n            ...rest\n         } = this.props;\n        const options = {\n            ...rest, \n            theme: this.getTheme(theme, selectedFile)\n         };\n        if (this._editor) {\n            this._editor.updateOptions(options);\n            const model = this._editor.getModel();\n            const value: string = files[selectedFile]?.contents as any;\n            if (selectedFile !== prevProps.selectedFile) {\n                // Save the editor state for the previous file so we can restore it when it's re-opened\n                editorStates.set(prevProps.selectedFile, this._editor.saveViewState());\n                this._openFile(selectedFile, value, autoFocus);\n            }\n            else {\n                if (model && value !== model.getValue()) {\n                    // @ts-ignore\n                    this._editor.executeEdits(null, [\n                        {\n                            range: model.getFullModelRange(), \n                            text: value\n                         }\n                    ])\n                }\n            }\n        }\n        if (theme !== prevProps.theme || selectedFile !== prevProps.selectedFile) {\n            monaco.editor.setTheme(this.getTheme(theme, selectedFile))\n        }\n        if (prevProps.files !== this.props.files) {\n            for (const path in this.props.files) {\n                const file = this.props.files[path];\n                if (file.type === 'CODE' && file.contents !== prevProps.files[path]?.contents && path !== selectedFile) {\n                    this._initializeFile(path, file.contents);\n                }\n            }\n        }\n    }\n    componentWillUnmount() {\n        this._disposables.forEach(dis => \n        \n            dis.dispose()\n        )\n    }\n    \n    _initializeFile = (path: string, value: string) => {\n        let model = findModel(path);\n        if (model && !model.isDisposed()) {\n            // If a model exists, we need to update it's value\n            // This is needed because the content for the file might have been modified externally\n            // Use `pushEditOperations` instead of `setValue` or `applyEdits` to preserve undo stack\n            // @ts-ignore\n            model.pushEditOperations([], [\n                {\n                    range: model.getFullModelRange(), \n                    text: value\n                 }\n            ])\n        }\n        else {\n            if (path.endsWith('.ittf')) {\n                model = monaco.editor.createModel(value, 'ittf', monaco.Uri.from({\n                    scheme: 'file', \n                    path\n                 }))\n                ;\n            }\n            else {\n                model = monaco.editor.createModel(value, undefined, monaco.Uri.from({\n                    scheme: 'file', \n                    path\n                 }))\n                ;\n            }\n            model.updateOptions({\n                tabSize: 2, \n                insertSpaces: true\n             })\n        }\n    };\n    \n    _openFile = (path: string, value: string, focus?: boolean) => {\n        console.log('MonacoEditor', '_openFile', path, value, __filename);\n        this._initializeFile(path, value);\n        const model = findModel(path);\n        if (this._editor && model) {\n            this._editor.setModel(model);\n            \n            // Restore the editor state for the file\n            const editorState = editorStates.get(path);\n            if (editorState) {\n                this._editor.restoreViewState(editorState);\n            }\n            if (focus) {\n                this._editor.focus();\n            }\n        }\n    };\n    \n    _handleEditFile = (_event: monaco.editor.IModelContentChangedEvent):  void => {\n        const model = this._editor?.getModel?.();\n        if (model) {\n            const value = model.getValue();\n            console.log('MonacoEditor', '_handleEditFile', value, __filename);\n            if (value !== this.props.files[this.props.selectedFile]?.contents) {\n                this.props.updateFiles(() => \n                \n                    ({\n                        [this.props.selectedFile]: {\n                            type: 'CODE', \n                            contents: value\n                         }\n                     })\n                )\n            }\n        }\n    };\n    _handleResize = debounce(() => \n    \n        this._editor?.layout?.()\n    , 50, {\n        leading: true, \n        trailing: true\n     });\n    _disposables: monaco.IDisposable[] = [];\n    _editor: monaco.editor.IStandaloneCodeEditor | null = null;\n    _node = React.createRef<HTMLDivElement>();\n    \n    _statusbar = React.createRef<HTMLDivElement>();\n    \n    render() {\n        return  (\n            <div\n             className={css(styles.container)}>\n                <style\n                 type=\"text/css\" dangerouslySetInnerHTML={{\n                        __html: overrides\n                     }} />\n                <ResizeDetector\n                 onResize={this._handleResize}>\n                    <div\n                     ref={this._node} className={classnames(css(styles.editor), 'packi-monaco-editor', `theme-${this.props.theme}`)} />\n                </ResizeDetector>\n            </div>\n            )\n        ;\n    }\n}\n\nexport const MonacoEditor = withThemeName(MonacoEditorComp);\n\nexport default withThemeName(MonacoEditorComp);\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex', \n        flex: 1, \n        flexDirection: 'column', \n        height: '100%', \n        width: '100%'\n     }, \n    editor: {\n        height: '100%', \n        width: '100%'\n     }\n });\n","// export * from 'monaco-editor-core';\r\n\r\nexport default {\r\n    // defaultToken: 'invalid',\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@include' },\r\n            { include: '@ittfCommand' },\r\n            { include: '@mix' },\r\n            { include: '@nodeName' },\r\n        ],\r\n        whitespace: [\r\n            [ /[ \\t]+/, 'white'],\r\n            [ /\\$\\$.*$/, 'comment'],\r\n            [ /(\\$\\*)/, { token: 'comment', next: 'comment'} ],\r\n        ],\r\n        comment: [\r\n            [/[^\\$\\*]+/, 'comment'],\r\n            [/\\*\\$/, 'comment', '@pop'],\r\n            [/[\\$\\*]/, 'comment']\r\n        ],                        \r\n        include: [\r\n            [ /(\\$include)/, { token: 'mix', next: 'includeValue'} ]\r\n        ],\r\n        includeValue: [\r\n            [ /.*$/, 'mix-value', '@pop' ]\r\n        ],\r\n        mix: [\r\n        [ \r\n                /([^($\\s]+)(?:\\()/, \r\n                { cases: \r\n                    { \r\n                        '@eos': 'mix',\r\n                        '@default': {token: 'mix', next: 'mixValue'}\r\n                    }\r\n                }                            \r\n            ]\r\n        ],\r\n        ittfCommand: [\r\n            [ /\\$[a-z]+$/, 'ittf-command'],\r\n            [ /\\$[a-z]+/, { token: 'ittf-command', next: 'scriptLine'} ],\r\n            [ /\\$[ ]/, { token: 'interpolation', next: 'scriptLine'} ],\r\n            [ /(\\$global|\\$)$/, { token: 'interpolation', next: 'scriptMultiLine'} ],\r\n        ],                        \r\n        nodeName: [\r\n            [ \r\n                /([^($\\s]+)/, \r\n                { cases: \r\n                    { \r\n                        '@eos': 'node-name',\r\n                        '@default': {token: 'node-name', next: 'nodeValue'}\r\n                    }\r\n                }                            \r\n            ]\r\n        ],\r\n        nodeValue: [\r\n            [ /[^\\$]+$/, { token: 'node-value', next: '@popall' }],\r\n            [ /[^\\$]+/, { token: 'node-value' }],                            \r\n            [ \r\n                /(\\${)([^}]*)(})/,\r\n                {\r\n                    cases: {\r\n                        '@eos': [\r\n                            'interpolation.delimiter',\r\n                            'interpolation',\r\n                            {\r\n                                token: 'interpolation.delimiter',\r\n                                next: '@popall'\r\n                            }\r\n                        ],\r\n                        '@default': [\r\n                            'interpolation.delimiter',\r\n                            'interpolation',\r\n                            'interpolation.delimiter'\r\n                        ]\r\n                    }\r\n                }                                \r\n            ],\r\n            // [ /.*$/, { token: 'node-value', next: '@pop' } ] \r\n            [ /\\$$/, { token: 'node-value', next: '@popall' }],\r\n            [ /\\$/, 'node-value']                            \r\n        ],\r\n        mixValue: [\r\n            [ /\\)/, { token: 'mix', next: '@popall' }],    \r\n            [ /[^\\$|\\)]+$/, { token: 'mix-value', next: '@popall' }],\r\n            [ /[^\\$|\\)]+/, { token: 'mix-value' }],                            \r\n            [ \r\n                /(\\${)([^}]*)(})/,\r\n                {\r\n                    cases: {\r\n                        '@eos': [\r\n                            'interpolation.delimiter',\r\n                            'interpolation',\r\n                            {\r\n                                token: 'interpolation.delimiter',\r\n                                next: '@popall'\r\n                            }\r\n                        ],\r\n                        '@default': [\r\n                            'interpolation.delimiter',\r\n                            'interpolation',\r\n                            'interpolation.delimiter'\r\n                        ]\r\n                    }\r\n                }                                \r\n            ],\r\n            [ /\\$$/, { token: 'mix-value', next: '@popall' }],\r\n            [ /\\$/, 'mix-value']                            \r\n        ],\r\n        scriptLine: [\r\n            [ /.*$/, 'interpolation', '@pop' ]\r\n        ],\r\n        scriptMultiLine: [\r\n            [/[^\\/\\/\\.]+/, 'interpolation'],\r\n            [/\\/\\/\\.$/, 'interpolation', '@pop' ]\r\n        ],\r\n    }\r\n}","export default {\r\n    base: 'vs',\r\n    inherit: false,\r\n    rules: [\r\n        { token: 'node-name', foreground: '0000ff' },\t\r\n        { token: 'node-value', foreground: '000000' },\t\r\n        { token: 'ittf-command', foreground: 'ffa500' },\t\r\n        { token: 'mix', foreground: 'ff0000' },\t\r\n        { token: 'mix-value', foreground: '4f548f' },\t\r\n        { token: 'comment', foreground: 'ababab' },\t\r\n        { token: 'invalid', foreground: 'ff00ff' },\t\r\n        { token: 'interpolation.delimiter', foreground: 'ff0000' },\t\r\n        { token: 'interpolation', foreground: '54db4b' },\t\r\n    ]\r\n}","export default {\r\n    base: 'vs-dark',\r\n    inherit: false,\r\n    rules: [\r\n        { token: 'node-name', foreground: '57e34d' },\t\r\n        { token: 'node-value', foreground: '40d1f5' },\t\r\n        { token: 'ittf-command', foreground: 'ffa500' },\t\r\n        { token: 'mix', foreground: 'ff0000' },\t\r\n        { token: 'mix-value', foreground: 'ffffff' },\t\r\n        { token: 'comment', foreground: 'ababab' },\t\r\n        { token: 'interpolation.delimiter', foreground: 'ff0000' },\t\r\n        { token: 'interpolation', foreground: 'ffff00' },\t\r\n        { token: 'invalid', foreground: 'ffffff' },\r\n    ]\r\n}    \r\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\features\\prettier\\prettierCode.tsx.ittf\n*/\nimport {getFileLanguage} from '../file/index';\nexport default async function prettierCode(path: string, code: string):  Promise<string> {\n    \n        const language = getFileLanguage(path);\n        let parser;\n        let plugins;\n        switch (language) {\n            case 'javascript': {\n                parser = 'babel';\n                plugins = [\n                    await import('prettier/parser-babel')\n                ];\n                break;\n            }\n            case 'typescript': {\n                parser = 'typescript';\n                plugins = [\n                    await import('prettier/parser-typescript')\n                ];\n                break;\n            }\n            case 'markdown': {\n                parser = 'markdown';\n                plugins = await Promise.all([\n                        import('prettier/parser-babel'), \n                        import('prettier/parser-typescript'), \n                        import('prettier/parser-markdown')\n                    ]);\n                ;\n                break;\n            }\n        }\n        if (parser && plugins) {\n            const prettier = await import('prettier/standalone');\n            const {\n                default: config\n             } = await import('./prettier.json') as any;\n            return prettier.format(code, {\n                    parser, \n                    plugins, \n                    ...config\n                 });\n        }\n        return code;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\Editor\\themes\\colors-dark.tsx.ittf\n*/\nimport {c} from '../../ThemeProvider';\nimport type {SyntaxColors, UIColors} from './colors-light';\nexport const syntax: SyntaxColors = {\n    text: '#d9d7ce', \n    variable: '#d9d7ce', \n    invalid: '#ff3333', \n    constant: '#ff9d45', \n    comment: '#5c6773', \n    regexp: '#95e6cb', \n    annotation: '#5ccfe6', \n    tag: '#80d4ff', \n    number: '#ff9d45', \n    string: '#bae67e', \n    property: '#5ccfe6', \n    value: '#bae67e', \n    keyword: '#ffae57', \n    operator: '#778899', \n    predefined: '#ff00ff'\n };\nexport const ui: UIColors = {\n    background: c('background', 'dark'), \n    text: '#d9d7ce', \n    selection: '#aaaaaa', \n    indent: {\n        active: '#393b41', \n        inactive: '#494b51'\n     }\n };\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\Editor\\themes\\colors-light.tsx.ittf\n*/\nimport {c} from '../../ThemeProvider';\nexport const syntax = {\n    text: '#5c6773', \n    variable: '#5c6773', \n    invalid: '#ff3333', \n    constant: '#f08c36', \n    comment: '#abb0b6', \n    regexp: '#4dbf99', \n    annotation: '#41a6d9', \n    tag: '#e7c547', \n    number: '#f08c36', \n    string: '#86b300', \n    property: '#41a6d9', \n    value: '#0451a5', \n    keyword: '#f2590c', \n    operator: '#778899', \n    predefined: '#FF00FF'\n };\nexport const ui = {\n    background: c('background', 'light'), \n    text: '#5c6773', \n    selection: '#cccccc', \n    indent: {\n        active: '#e0e0e0', \n        inactive: '#ecebec'\n     }\n };\nexport type SyntaxColors = typeof syntax;\nexport type UIColors = typeof ui;\n"],"sourceRoot":""}