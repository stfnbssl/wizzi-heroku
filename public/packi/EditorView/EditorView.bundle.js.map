{"version":3,"sources":["webpack://wizzi.editor/./src/components/widgets/splitter/DefaultSplitter.tsx","webpack://wizzi.editor/./src/components/widgets/splitter/Split.tsx","webpack://wizzi.editor/./src/components/widgets/KeybindingsManager.tsx","webpack://wizzi.editor/./src/components/widgets/ShortcutLabel.tsx","webpack://wizzi.editor/./src/components/EditorView/KeyboardShortcuts.tsx","webpack://wizzi.editor/./src/components/widgets/IconButton.tsx","webpack://wizzi.editor/./src/components/widgets/LoadingText.tsx","webpack://wizzi.editor/./src/components/widgets/FooterButton.tsx","webpack://wizzi.editor/./src/components/widgets/MenuButton.tsx","webpack://wizzi.editor/./src/components/widgets/ToggleSwitch.tsx","webpack://wizzi.editor/./src/components/EditorView/EditorFooter.tsx","webpack://wizzi.editor/./src/components/EditorView/ProblemsPanel.tsx","webpack://wizzi.editor/./src/components/widgets/ResizablePane.tsx","webpack://wizzi.editor/./src/components/EditorView/EditorPanels.tsx","webpack://wizzi.editor/./src/assets/WizziIcon.tsx","webpack://wizzi.editor/./src/assets/EditIcon.tsx","webpack://wizzi.editor/./src/assets/BrowserIcon.tsx","webpack://wizzi.editor/./src/components/widgets/Avatar.tsx","webpack://wizzi.editor/./src/components/widgets/ContextMenu.tsx","webpack://wizzi.editor/./src/components/EditorView/UserMenu.tsx","webpack://wizzi.editor/./src/features/form/Form.tsx","webpack://wizzi.editor/./src/features/form/withStatus.tsx","webpack://wizzi.editor/./src/features/form/withValidation.tsx","webpack://wizzi.editor/./src/features/form/EditorForm.tsx","webpack://wizzi.editor/./src/components/widgets/LargeInput.tsx","webpack://wizzi.editor/./src/components/widgets/LargeTextArea.tsx","webpack://wizzi.editor/./src/components/widgets/Modal.tsx","webpack://wizzi.editor/./src/components/widgets/ModalSheet.tsx","webpack://wizzi.editor/./src/components/widgets/ModalDialog.tsx","webpack://wizzi.editor/./src/components/EditorView/ModalProductionDetails.tsx","webpack://wizzi.editor/./src/components/EditorView/EditorToolbar.tsx","webpack://wizzi.editor/./src/components/widgets/Toast.tsx","webpack://wizzi.editor/./src/components/FileList/FileListEntryDropTarget.tsx","webpack://wizzi.editor/./src/components/FileList/FileListEntryBase.tsx","webpack://wizzi.editor/./src/components/FileList/FileListEntryIcon.tsx","webpack://wizzi.editor/./src/components/FileList/FileListEntry.tsx","webpack://wizzi.editor/./src/components/FileList/FileListChildren.tsx","webpack://wizzi.editor/./src/components/FileList/FileListOpenEntry.tsx","webpack://wizzi.editor/./src/components/FileList/FileListPane.tsx","webpack://wizzi.editor/./src/components/FileList/FileListPaneButton.tsx","webpack://wizzi.editor/./src/components/FileList/actions/updateEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/closeEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/createEntryAtPath.tsx","webpack://wizzi.editor/./src/components/FileList/actions/createNewEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/openEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/recursivelyCreateParents.tsx","webpack://wizzi.editor/./src/components/FileList/utils/convertFileStructure.tsx","webpack://wizzi.editor/./src/components/FileList/FileList.tsx","webpack://wizzi.editor/./src/components/FileList/actions/selectEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/expandEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/renameEntry.tsx","webpack://wizzi.editor/./src/components/FileList/actions/pasteEntry.tsx","webpack://wizzi.editor/./src/components/EditorView/NoFileSelected.tsx","webpack://wizzi.editor/./src/components/PageMetadata.tsx","webpack://wizzi.editor/./src/components/widgets/Banner.tsx","webpack://wizzi.editor/./src/assets/DebugIcon.tsx","webpack://wizzi.editor/./src/components/CodeView/SyntaxHighlighter.tsx","webpack://wizzi.editor/./src/components/widgets/WebFrame.tsx","webpack://wizzi.editor/./src/components/EditorView/GeneratedView.tsx","webpack://wizzi.editor/./src/components/EditorView/GenerationErrors.tsx","webpack://wizzi.editor/./src/components/EditorView/EditorView.tsx","webpack://wizzi.editor/./src/assets/checkmark.png","webpack://wizzi.editor/./src/assets/clear.png","webpack://wizzi.editor/./src/assets/cross-light.png","webpack://wizzi.editor/./src/assets/cross-red.png","webpack://wizzi.editor/./src/assets/cross.png","webpack://wizzi.editor/./src/assets/info-icon.png","webpack://wizzi.editor/./src/assets/settings-icon.png"],"names":["getThinLineSize","size","DefaultSplitter","props","dragging","pixelSize","color","hoverColor","dragColor","cssProperties","Math","max","floor","className","style","Split","horizontal","initialPrimarySize","minPrimarySize","minSecondarySize","splitterSize","renderSplitter","resetOnDoubleClick","defaultSplitterColors","hover","drag","onSplitChanged","onMeasuredSizesChanged","contentMeasuredDimensions","setContentMeasuredDimensions","React","height","width","primaryMeasuredDimensions","setPrimaryMeasuredDimensions","splitterMeasuredDimensions","setSplitterMeasuredDimensions","currentContentSize","currentPrimarySize","currentSplitterSize","percent","setPercent","undefined","clientStart","setClientStart","primaryStart","setPrimaryStart","setDragging","primary","splitter","secondary","onMeasurePrimary","contentRect","bounds","onMeasureSplitter","onSplitPointerDown","event","currentTarget","setPointerCapture","pointerId","clientY","clientX","onSplitPointerMove","hasPointerCapture","position","primarySize","newPrimary","min","onSplitPointerUp","releasePointerCapture","onSplitDoubleClick","children","primaryChild","length","secondaryChild","renderSizes","minPrimary","minSecondary","renderSplitterProps","renderSplitVisual","rootClassName","rootStyle","onResize","measureRef","contentRef","ref","primaryRef","tabIndex","onPointerDown","onPointerUp","onPointerMove","onDoubleClick","splitterRef","KeyMap","C","D","F","S","U","V","F2","Delete","Enter","Escape","Shift","Ctrl","Alt","Cmd","Tilde","Backslash","Meta","global","test","navigator","platform","isKeyCombo","e","combo","every","code","ctrlKey","metaKey","altKey","keyCode","bindings","onTrigger","type","hasOwnProperty","binding","preventDefault","document","addEventListener","this","_handleKeydown","removeEventListener","isMac","KeyLabels","boxed","classnames","css","styles","shortcutLabel","boxedShortcut","map","name","findKey","c","join","StyleSheet","fontFamily","fontSize","opacity","boxShadow","display","lineHeight","padding","border","borderBottomWidth","borderRadius","Shortcuts","save","description","update","tree","panels","format","shortcuts","shortcutList","Object","entries","key","shortcutCell","shortcutLabelCell","shortcutDescriptionCell","tableLayout","textAlign","marginRight","title","label","responsive","small","rest","button","disabled","labelNoIcon","phantom","tooltip","minWidth","margin","alignItems","justifyContent","appearance","backgroundColor","outline","whiteSpace","textDecoration","fill","stroke","cursor","pointerEvents","top","left","right","bottom","zIndex","transform","marginLeft","s","onClick","loading","content","borderWidth","borderStyle","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","verticalAlign","animationName","from","to","animationDuration","animationIterationCount","animationTimingFunction","active","icon","backgroundImage","buttonLabel","backgroundSize","backgroundRepeat","backgroundPosition","setActive","root","target","current","contains","panelContainer","value","pane","flexDirection","borderColor","container","switch","transition","inactive","check","flex","fontWeight","checked","onChange","withPreferences","annotations","loggedUser","fileTreeShown","panelsShown","sendCodeOnChangeEnabled","isLocalWebPreview","onToggleTheme","onTogglePanels","onToggleFileTree","onShowShortcuts","theme","autoGenSingleDoc","autoExecJob","loadingItems","filter","a","severity","isLoading","isErrorFatal","some","warningCount","text","message","errors","location","action","prefix","fileName","startLineNumber","startColumn","suffix","stopPropagation","run","split","FooterShell","loadingText","statusText","errorTextFatal","errorText","successText","require","setPreferences","preferences","buttonItem","buttonItemEditorPane","buttonItemShortcut","menuSeparator","overflow","textOverflow","errorBorder","devicesCount","devicePane","devicePaneItem","deviceLabel","deviceIcon","noDevicesMessage","userSelect","borderBottom","onSelectFile","selected","setSelected","source","index","iconStyle","infoIcon","locationStyle","infoColor","errorIcon","errorColor","warningIcon","warningColor","loadingIcon","file","lines","actionIcon","actionText","expanded","item","line","callstack","trim","substring","minHeight","ResizablePane","resizing","initialPosition","initialWidth","initialHeight","_pane","getComputedStyle","setState","pageX","pageY","parseFloat","state","direction","inverted","delta","setAttribute","_handleMouseUp","_handleMouseMove","handle","vertical","horizontalInverted","horizontalNormal","verticalInverted","verticalNormal","onMouseDown","_handleMouseDown","onMouseUp","EditorPanels","prevProps","onShowErrorPanel","panelType","header","tab","buttons","close","_panel","panel","paddingTop","background","textTransform","clear","WizziIcon","xmlns","viewBox","points","d","EditIcon","BrowserIcon","x1","y1","x2","y2","StyledRoot","styled","StyledImage","Avatar","src","strokeWidth","strokeLinecap","strokeLinejoin","ContextMenu","visible","actions","onHide","innerRef","shownActions","menu","window","innerHeight","marginTop","handler","hint","listStyle","animationTimingfunction","marginBottom","console","log","__filename","_menu","_hideMenu","_avatar","_handleDocumentClick","_handleDocumentContextMenu","picture","open","process","href","FormValidationContext","Form","isValid","validate","focus","_key","_inputs","push","it","input","onSubmit","_update","Provider","register","_register","unregister","_unregister","valid","_handleSubmit","withStatus","Comp","withStatusFn","Consumer","displayName","withValidation","EnhancedComponent","initial","error","_root","nextProps","prevState","validation","_validate","_focus","helperText","other","validationOk","stateDefaultValues","fields","ret","keys","k","default","SubmitButton","Fab","ValidatedInput","TextField","EditorForm","values","classes","onDismiss","modal","contentDark","contentLight","Typography","variant","i","field","indexOf","fieldContainer","autoFocus","textField","placeholder","onValidate","select","SelectProps","MenuProps","options","option","MenuItem","flexShrink","subtitle","caption","link","withStyles","createStyles","spacing","withThemeName","focused","_input","normal","onFocus","_handleFocus","onBlur","_handleBlur","borderLeft","borderRight","StyledContent","rendered","createElement","_content","body","appendChild","_container","_handleKeyDown","clearTimeout","_timer","setTimeout","removeChild","ReactDOM","_handleDismiss","PureComponent","StyledThemeProvider","ThemeProvider","StyledClose","StyledModalSheet","data-test-id","StyledTitle","ModalDialog","autoSize","FormButton","Button","LargeInput","ModalProductionDetails","mainIttf","wizziSchema","Error","isWorking","handleChange","_validateName","minRows","large","usePreferences","packiProduction","readOnly","createdAt","saveStatus","isDownloading","isEditModalVisible","onSubmitMetadata","onShowEditModal","onDismissEditModal","onDownloadCode","onPublishAsync","splitViewKind","onChangeSplitViewKind","isWizziJobWaiting","generatedPreviewURL","onExecuteWizziJob","isPublishing","ve_top_bar","ve_top_bar_logo","ve_top_bar_control","ve_top_bar_label","ve_top_bar_field","ve_top_bar_field_editor","ve_top_bar_field_button","ve_top_bar_icons","details","gridTemplateColumns","gridTemplateRows","paddingLeft","justifyItems","TOAST_GROUP_ID","Toast","dismissing","timeout","group","getElementById","id","assign","persistent","_scheduleDismiss","_cancelDismiss","onMouseEnter","onMouseLeave","toast","appearing","FileListEntryDropTarget","path","includes","replace","entry","parent","_getParentPath","_dragTimer","lastDraggedEntry","dragEventIncludes","_isDirectChild","isExpanded","onExpand","data","dataTransfer","getData","JSON","parse","pop","onRename","getUniquePath","_handleDragOver","_handleDragLeave","_handleDrop","restProps","FileListEntry","isHovered","tagName","onOpen","_click","forEach","_hideContextMenu","_more","_showContextMenu","_item","effectAllowed","setData","stringify","draggable","onDragStart","_handleDragStart","onDragEnd","_handleDragEnd","_handleClick","_handleMouseEnter","_handleMouseLeave","onKeyDown","renderItem","highlight","highlightDark","highlightLight","isSelected","highlightActive","Boolean","more","moreVisible","moreInvisible","renderMenuIcon","renderTree","FileListEntryIcon","spinner","isEntryPoint","cx","cy","r","isPackageJson","isImage","isTest","isError","toggleTSExt","_","$1","isRenaming","_handleNameChange","onDelete","isCreating","newPath","usedCharacters","getAdjacentEntries","toLowerCase","HTMLInputElement","_handleToggleRename","_handleInputBlur","onCreateFile","onCreateFolder","onCopy","clipboard","onPaste","onClearClipboard","getParentPath","filepath","_handleCreateFile","_handleCreateFolder","_handleToggleExpand","_handlePaste","virtual","_handleCopy","_handleDuplicate","_handleToggleTSExt","_handleDelete","labelTest","labelError","_handleInputChange","_handleInputFocus","onKeyUp","_handleInputKeyUp","onSelect","child","FileListChildren","asset","_renderItem","_renderTree","_renderMenuIcon","_getActions","RegExp","escapeRegexp","_getImmediateChildren","sort","b","startsWith","localeCompare","en","isInsideFolder","FileListOpenEntry","isFocused","focusedDark","focusedLight","onClose","closeFocused","closeBlurred","onCloseOthers","onCloseAll","FileListPane","collapse","collapseExpanded","collapseCollapsed","fillRule","FileListPaneButton","updateEntry","updates","closeEntry","isOpen","createEntryAtPath","find","createNewEntry","at","openEntry","isFolder","recursivelyCreateParents","expand","next","parentEntry","getFolders","pathSegments","result","pathIdx","slice","fileToEntry","prevEntry","uri","contents","isEntry","findFocusedEntry","AddIcon","x","y","FileListComp","deleted","openFilesPane","projectPane","selectedFile","updateEntries","selectEntry","expandEntry","oldPath","renamedFile","onRenameFile","renamed","changeParentPath","parents","renameEntry","g","deletedEntries","remove","onRemoveFile","_currentDeleteID","previous","dependencies","reduce","acc","err","isESLintConfig","plugins","eslintrc","rules","pickBy","extends","pasteEntry","newEntry","e2","files","prevEntries","fileSystem","foldersInFileSystem","Set","filename","folder","has","add","filesToEntries","updateFiles","prevFocusedEntry","focusedEntry","SidebarShell","openFilesSmall","openFilesLarge","_toggleOpenFilesPane","tabs","_handleEntryOpen","_handleEntryClose","_handleEntryCloseOthers","_handleEntryCloseAll","project","_toggleProjectPane","fillOpacity","_handleEntryRename","_handleEntrySelect","_handleEntryFocus","_handleEntryPaste","_handleEntryExpand","_handleEntryDelete","_handleClearClipboard","list","_restoreEntries","_handleDismissDelete","reverse","maxHeight","paddingBottom","toolbar","toasts","NoFileSelected","PageMetadata","meta","url","PACKI_SERVER_URL","image","property","getPageMetadata","StyledBanner","DebugIcon","el1","querySelector","language","ext2","substr","lastIndexOf","ext","mimeLanguageMap","getLanguage","filePath","showLineNumbers","dark","previewURL","allow","frame","GeneratedView","view","onMTreePreview","onMTreeDebugInfoPreview","containerFull","generatedContent","editor","syntaxHigh","lineNumbers","wizzifiedIttfContent","mTreeIttf","mTreeBuildupScript","browserOuter","generatedSourcePath","endsWith","sidebar","sbItem","Tooltip","_handleGenerated","iconButton","ViewList","_handleMTree","AccountTree","_handleMTreeDebugInfo","_handleBrowser","palette","light","GenerationErrors","stack","errorLines","errorName","EditorViewComp","currentModal","currentBanner","loadedEditor","isMarkdownPreview","shouldPreventRedirectWarning","_allowRedirectWarning","returnValue","duration","_EditorComponent","removePath","renamePath","newState","_handleUnload","autosaveEnabled","_showBanner","userAgent","owner","previewRef","generatedArtifact","wizziError","encodeURIComponent","ContentShell","ProgressIndicator","fn","_toggleFileTree","_togglePanels","_handleShowShortcuts","_handleChangeSplitViewKind","_handleShowTitleDescriptionModal","_handleDismissEditModal","onDownloadAsync","editorAreaOuterWrapper","editorAreaOuter","LayoutShell","_handleRemoveFile","_handleRenameFile","LazyLoad","load","async","MonacoEditorPromise","then","SimpleEditorPromise","Promise","resolve","reject","race","catch","loaded","isMarkdown","mdLoaded","MarkdownPreview","EditorShell","previewToggle","_toggleMarkdownPreview","previewToggleIcon","editorComponentOuter","editorComponent","artifactContent","sourcePath","errorMessage","errorStack","_showErrorPanel","_toggleTheme","_handleHideModal","EditorView","embedModal","maxWidth","preview","transitionDuration","transitionProperty","transitionTimingFunction"],"mappings":"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","file":"EditorView/EditorView.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport { RenderSplitterProps } from './RenderSplitterProps';\r\nimport './defaultSplitter.css';\r\n\r\nconst getThinLineSize = (size: number) => `${size % 2 === 0 ? 2 : 3}px`;\r\nconst getCenteredMargin = (size: number) => `${Math.max(0, Math.floor(size / 2) - 1)}px`;\r\n\r\ntype Props = RenderSplitterProps & {\r\n  color?: string;\r\n  hoverColor?: string;\r\n  dragColor?: string;\r\n};\r\n\r\n/**\r\n * The default splitter which provides a thin line within a larger mouse hit area.\r\n */\r\nexport const DefaultSplitter = (props: Props) => {\r\n  const { dragging, pixelSize, color = 'silver', hoverColor = 'gray', dragColor = 'black' } = props;\r\n\r\n  const cssProperties = {\r\n    '--default-splitter-line-margin': getCenteredMargin(pixelSize),\r\n    '--default-splitter-line-size': getThinLineSize(pixelSize),\r\n    '--default-splitter-line-color': dragging ? dragColor : color,\r\n    '--default-splitter-line-hover-color': dragging ? dragColor : hoverColor,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div className=\"default-splitter\" style={cssProperties}>\r\n      <div className=\"line\" />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { default as Measure, ContentRect } from 'react-measure';\r\nimport { DefaultSplitter } from './DefaultSplitter';\r\nimport { RenderSplitterProps } from './RenderSplitterProps';\r\nimport './split.css';\r\n\r\ntype MeasuredDimensions = {\r\n  height: number;\r\n  width: number;\r\n};\r\n\r\nexport type SplitMeasuredSizes = {\r\n  /**\r\n   * The measured size of the primary pane in pixels.\r\n   */\r\n  primary: number;\r\n  /**\r\n   * The measured size of the splitter in pixels.\r\n   */\r\n  splitter: number;\r\n  /**\r\n   * The measured size of the secondary pane in pixels.\r\n   */\r\n  secondary: number;\r\n};\r\n\r\nexport type SplitProps = {\r\n  /**\r\n   * Add this attribute or set to true to create a top/bottom split.\r\n   * Set to false to create a left|right split.\r\n   */\r\n  horizontal?: boolean;\r\n  /**\r\n   * The initial width/height of the left/top pane.\r\n   * Width is specified as a CSS unit (e.g. %, fr, px).\r\n   * The default is 50%.\r\n   */\r\n  initialPrimarySize?: string;\r\n  /**\r\n   * The preferred minimum width/height of the left/top pane.\r\n   * Specified as a CSS unit (e.g. %, fr, px).\r\n   * The default is 0.\r\n   */\r\n  minPrimarySize?: string;\r\n  /**\r\n   * The preferred minimum width/height of the right/bottom pane.\r\n   * Specified as a CSS unit (e.g. %, fr, px).\r\n   * The default is 0.\r\n   */\r\n  minSecondarySize?: string;\r\n  /**\r\n   * The width of the splitter between the panes.\r\n   * Specified as a CSS unit (e.g. %, fr, px).\r\n   * The default is 7px.\r\n   */\r\n  splitterSize?: string;\r\n  /**\r\n   * Render props for the splitter.\r\n   * @param pixelSize The measured size of the splitter in pixels.\r\n   * @param horizontal True if the splitter is horizontal (i.e. top/bottom); false otherwise.\r\n   */\r\n  renderSplitter?: (props: RenderSplitterProps) => React.ReactNode | undefined;\r\n  /**\r\n   * When true, if the user double clicks the splitter it will reset to its initial position.\r\n   * The default is false.\r\n   */\r\n  resetOnDoubleClick?: boolean;\r\n  /**\r\n   * The colors to use for the default splitter.\r\n   * Only used when renderSplitter is undefined;\r\n   * The defaults are silver, gray, and black\r\n   */\r\n  defaultSplitterColors?: {\r\n    color: string;\r\n    hover: string;\r\n    drag: string;\r\n  };\r\n\r\n  /**\r\n   * Raised when the splitter moves to provide the primary size.\r\n   * When the user has adjusted the splitter, this will be a percentage.\r\n   * Otherwise, this will be the initialPrimarySize.\r\n   */\r\n  onSplitChanged?: (primarySize: string) => void;\r\n\r\n  /**\r\n   * Raised whenever the primary, splitter, or secondary measured sizes change.\r\n   * These values are debounced at 500ms to prevent spamming this event.\r\n   */\r\n  onMeasuredSizesChanged?: (sizes: SplitMeasuredSizes) => void;\r\n};\r\n\r\nexport const Split = (props: React.PropsWithChildren<SplitProps>): JSX.Element => {\r\n  const {\r\n    horizontal = false,\r\n    initialPrimarySize = '50%',\r\n    minPrimarySize = '0px',\r\n    minSecondarySize = '0px',\r\n    splitterSize = '7px',\r\n    renderSplitter,\r\n    resetOnDoubleClick = false,\r\n    defaultSplitterColors = {\r\n      color: 'silver',\r\n      hover: 'gray',\r\n      drag: 'black',\r\n    },\r\n    onSplitChanged,\r\n    onMeasuredSizesChanged,\r\n  } = props;\r\n\r\n  const [contentMeasuredDimensions, setContentMeasuredDimensions] = React.useState<MeasuredDimensions>({\r\n    height: 0,\r\n    width: 0,\r\n  });\r\n  const [primaryMeasuredDimensions, setPrimaryMeasuredDimensions] = React.useState<MeasuredDimensions>({\r\n    height: 0,\r\n    width: 0,\r\n  });\r\n  const [splitterMeasuredDimensions, setSplitterMeasuredDimensions] = React.useState<MeasuredDimensions>({\r\n    height: 0,\r\n    width: 0,\r\n  });\r\n\r\n  const currentContentSize = React.useMemo(\r\n    () => (horizontal ? contentMeasuredDimensions.height : contentMeasuredDimensions.width),\r\n    [horizontal, contentMeasuredDimensions]\r\n  );\r\n  const currentPrimarySize = React.useMemo(\r\n    () => (horizontal ? primaryMeasuredDimensions.height : primaryMeasuredDimensions.width),\r\n    [horizontal, primaryMeasuredDimensions]\r\n  );\r\n  const currentSplitterSize = React.useMemo(\r\n    () => (horizontal ? splitterMeasuredDimensions.height : splitterMeasuredDimensions.width),\r\n    [horizontal, splitterMeasuredDimensions]\r\n  );\r\n\r\n  const [percent, setPercent] = React.useState<number | undefined>(undefined);\r\n\r\n  const [clientStart, setClientStart] = React.useState(0);\r\n  const [primaryStart, setPrimaryStart] = React.useState(0);\r\n  const [dragging, setDragging] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (onSplitChanged) {\r\n      onSplitChanged(percent !== undefined ? `${percent}%` : initialPrimarySize);\r\n    }\r\n  }, [percent, initialPrimarySize]);\r\n\r\n  React.useEffect(() => {\r\n    if (onMeasuredSizesChanged) {\r\n      onMeasuredSizesChanged({\r\n        primary: currentPrimarySize,\r\n        splitter: currentSplitterSize,\r\n        secondary: currentContentSize - (currentPrimarySize + currentSplitterSize),\r\n      });\r\n    }\r\n  }, [horizontal, currentContentSize, currentPrimarySize, currentSplitterSize]);\r\n\r\n  const onMeasureContent = (contentRect: ContentRect) => {\r\n    contentRect.bounds &&\r\n      setContentMeasuredDimensions({ height: contentRect.bounds.height, width: contentRect.bounds.width });\r\n  };\r\n\r\n  const onMeasurePrimary = (contentRect: ContentRect) => {\r\n    contentRect.bounds &&\r\n      setPrimaryMeasuredDimensions({ height: contentRect.bounds.height, width: contentRect.bounds.width });\r\n  };\r\n\r\n  const onMeasureSplitter = (contentRect: ContentRect) => {\r\n    contentRect.bounds &&\r\n      setSplitterMeasuredDimensions({ height: contentRect.bounds.height, width: contentRect.bounds.width });\r\n  };\r\n\r\n  const onSplitPointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\r\n    event.currentTarget.setPointerCapture(event.pointerId);\r\n    setClientStart(horizontal ? event.clientY : event.clientX);\r\n    setPrimaryStart(currentPrimarySize);\r\n    setDragging(true);\r\n  };\r\n\r\n  const onSplitPointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\r\n    if (event.currentTarget.hasPointerCapture(event.pointerId)) {\r\n      const position = horizontal ? event.clientY : event.clientX;\r\n      const primarySize = primaryStart + (position - clientStart);\r\n      const newPrimary = Math.max(0, Math.min(primarySize, currentContentSize));\r\n      const newPercent = (newPrimary / currentContentSize) * 100;\r\n      setPercent(newPercent);\r\n    }\r\n  };\r\n\r\n  const onSplitPointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\r\n    event.currentTarget.releasePointerCapture(event.pointerId);\r\n    setDragging(false);\r\n  };\r\n\r\n  const onSplitDoubleClick = () => {\r\n    resetOnDoubleClick && setPercent(undefined);\r\n  };\r\n\r\n  const children = React.Children.toArray(props.children);\r\n  const primaryChild = children.length > 0 ? children[0] : <div />;\r\n  const secondaryChild = children.length > 1 ? children[1] : <div />;\r\n\r\n  const renderSizes = {\r\n    primary: percent !== undefined ? `${percent}%` : initialPrimarySize,\r\n    minPrimary: minPrimarySize ?? '0px',\r\n    minSecondary: minSecondarySize ?? '0px',\r\n  };\r\n\r\n  const renderSplitterProps = {\r\n    pixelSize: currentSplitterSize,\r\n    horizontal,\r\n    dragging: dragging,\r\n  };\r\n\r\n  const renderSplitVisual =\r\n    renderSplitter ??\r\n    (() => {\r\n      return (\r\n        <DefaultSplitter\r\n          {...renderSplitterProps}\r\n          color={dragging ? defaultSplitterColors.drag : defaultSplitterColors.color}\r\n          hoverColor={dragging ? defaultSplitterColors.drag : defaultSplitterColors.hover}\r\n        />\r\n      );\r\n    });\r\n\r\n  const rootClassName = horizontal ? 'split-container horizontal' : 'split-container vertical';\r\n\r\n  const rootStyle = {\r\n    '--react-split-min-primary': renderSizes.minPrimary,\r\n    '--react-split-min-secondary': renderSizes.minSecondary,\r\n    '--react-split-primary': renderSizes.primary,\r\n    '--react-split-splitter': splitterSize,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <Measure bounds onResize={onMeasureContent}>\r\n      {({ measureRef: contentRef }) => (\r\n        <div className=\"react-split\" ref={contentRef}>\r\n          <div className={rootClassName} style={rootStyle}>\r\n            <div className=\"primary\">\r\n              <Measure bounds onResize={onMeasurePrimary}>\r\n                {({ measureRef: primaryRef }) => (\r\n                  <div className=\"full-content\" ref={primaryRef}>\r\n                    {primaryChild}\r\n                  </div>\r\n                )}\r\n              </Measure>\r\n            </div>\r\n            <div\r\n              className=\"splitter\"\r\n              tabIndex={-1}\r\n              onPointerDown={onSplitPointerDown}\r\n              onPointerUp={onSplitPointerUp}\r\n              onPointerMove={onSplitPointerMove}\r\n              onDoubleClick={onSplitDoubleClick}\r\n            >\r\n              <Measure bounds onResize={onMeasureSplitter}>\r\n                {({ measureRef: splitterRef }) => (\r\n                  <div className=\"full-content\" ref={splitterRef}>\r\n                    {renderSplitVisual(renderSplitterProps)}\r\n                  </div>\r\n                )}\r\n              </Measure>\r\n            </div>\r\n            <div className=\"secondary\">\r\n              <div className=\"full-content\">{secondaryChild}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Measure>\r\n  );\r\n};\r\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\KeybindingsManager.tsx.ittf\n*/\nimport * as React from 'react';\n\nexport type KeybindingsManagerProps<T extends { \n    combo: number[];\n}> = { \n    bindings: { \n        [key: string]: T;\n    };\n    onTrigger: (type: string, binding: T) => void;\n};\n\nconst isMac = 'navigator' in global && /Mac/i.test(navigator.platform);\n\nexport const KeyMap = {\n    C: 67, \n    D: 68, \n    F: 70, \n    S: 83, \n    U: 85, \n    V: 86, \n    F2: 113, \n    Delete: 8, \n    Enter: 13, \n    Escape: 27, \n    Shift: 16, \n    Ctrl: 17, \n    Alt: 18, \n    Cmd: 91, \n    Tilde: 192, \n    Backslash: 220, \n    Meta: isMac ? 91 : 17\n };\n\nexport const isKeyCombo = (e: KeyboardEvent, combo: number[]) => \n\n    combo.every((code) => {\n    \n        switch (code) {\n            case KeyMap.Ctrl: {\n                return e.ctrlKey;\n            }\n            case KeyMap.Meta: {\n                return e.metaKey;\n            }\n            case KeyMap.Alt: {\n                return e.altKey;\n            }\n            default: {\n                return e.keyCode === code;\n            }\n        }\n    }\n    )\n;\n\nexport class KeybindingsManager<T extends { \n    combo: number[];\n}> extends React.PureComponent<KeybindingsManagerProps<T>> {\n    componentDidMount() {\n        document.addEventListener('keydown', this._handleKeydown);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this._handleKeydown);\n    }\n    _handleKeydown = (e: KeyboardEvent) => {\n        const {\n            bindings, \n            onTrigger\n         } = this.props;\n        for (const type in bindings) {\n            if (bindings.hasOwnProperty(type)) {\n                const binding = bindings[type];\n                if (isKeyCombo(e, binding.combo)) {\n                    e.preventDefault();\n                    onTrigger(type, binding);\n                    break;\n                }\n            }\n        }\n    };\n    render() {\n        return null;\n    }\n}\nexport default KeybindingsManager;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ShortcutLabel.tsx.ittf\n*/\nimport {css, StyleSheet} from 'aphrodite';\nimport classnames from 'classnames';\nimport findKey from 'lodash/findKey';\nimport * as React from 'react';\nimport {c} from '../ThemeProvider';\nimport {KeyMap} from './KeybindingsManager';\n\nexport type ShortcutLabelProps = { \n    combo: number[];\n    className?: string;\n    boxed?: boolean;\n};\n\ntype KeyName =  keyof typeof KeyMap;\n\nconst isMac = 'navigator' in global && /Mac/i.test(navigator.platform);\n\nconst KeyLabels: Partial<{[key in KeyName] : string}> = {\n    Cmd: '⌘', \n    Delete: '⌫', \n    Enter: '↩', \n    Shift: '⇧', \n    Ctrl: isMac ? '⌃' : 'Ctrl', \n    Alt: isMac ? '⌥' : 'Alt', \n    Backslash: '\\\\', \n    Tilde: '`'\n };\n\nexport function ShortcutLabel({\n    combo, \n    className, \n    boxed=false\n }: ShortcutLabelProps):  any {\n\n    return  (\n        <kbd\n         className={classnames(css(styles.shortcutLabel), boxed && css(styles.boxedShortcut), className)}>\n            {\n                combo.map((code) => {\n                \n                    \n                    // @ts-ignore\n                    const name = findKey(KeyMap, c =>  \n                        c === code\n                    );\n                    \n                    if (name && KeyLabels[name as KeyName]) {\n                        return KeyLabels[name as KeyName];\n                    }\n                    else {\n                        return name;\n                    }\n                }\n                ).join(isMac ? '' : '+')\n                \n            }\n        </kbd>\n        )\n    ;\n}\n\nexport default ShortcutLabel;\n\nconst styles = StyleSheet.create({\n    shortcutLabel: {\n        color: 'inherit', \n        fontFamily: 'var(--font-monospace)', \n        fontSize: '90%', \n        opacity: 0.5, \n        boxShadow: `none`, \n        display: 'inline-block', \n        lineHeight: 'initial'\n     }, \n    boxedShortcut: {\n        padding: '0.2rem 0.4rem', \n        border: `1px solid ${c(`border`)}`, \n        borderBottomWidth: 2, \n        borderRadius: 3, \n        opacity: 0.66\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\KeyboardShortcuts.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {KeyMap} from '../widgets/KeybindingsManager';\nimport ShortcutLabel from '../widgets/ShortcutLabel';\nexport const Shortcuts = {\n    save: {\n        description: 'Save changes', \n        combo: [\n            KeyMap.Meta, \n            KeyMap.S\n        ]\n     }, \n    update: {\n        type: 'update', \n        description: 'Update code on device', \n        combo: [\n            KeyMap.Meta, \n            KeyMap.U\n        ]\n     }, \n    tree: {\n        description: 'Toggle sidebar', \n        combo: [\n            KeyMap.Meta, \n            KeyMap.Backslash\n        ]\n     }, \n    panels: {\n        description: 'Toggle error and log panels', \n        combo: [\n            KeyMap.Ctrl, \n            KeyMap.Tilde\n        ]\n     }, \n    format: {\n        description: 'Format code with prettier', \n        combo: [\n            KeyMap.Ctrl, \n            KeyMap.Alt, \n            KeyMap.F\n        ]\n     }, \n    shortcuts: {\n        description: 'Show keyboard shortcuts', \n        combo: [\n            KeyMap.Meta, \n            KeyMap.Alt, \n            KeyMap.Shift\n        ]\n     }\n };\nclass KeyboardShortcuts extends React.PureComponent {\n    render() {\n        return  (\n            <table\n             className={css(styles.shortcutList)}>\n                <tbody\n                >\n                    {\n                        Object.entries(Shortcuts).map(([type, binding]) => \n                        \n                             (\n                            <tr\n                             key={type}>\n                                <td\n                                 className={css(styles.shortcutCell, styles.shortcutLabelCell)}>\n                                    <ShortcutLabel\n                                     boxed combo={binding.combo} />\n                                </td>\n                                <td\n                                 className={css(styles.shortcutCell, styles.shortcutDescriptionCell)}>\n                                    {binding.description}\n                                </td>\n                            </tr>\n                            )\n                        \n                        )\n                    }\n                </tbody>\n            </table>\n            )\n        ;\n    }\n}\nexport default KeyboardShortcuts;\nconst styles = StyleSheet.create({\n    shortcutList: {\n        fontSize: '1.2em', \n        tableLayout: 'fixed'\n     }, \n    shortcutCell: {\n        padding: '6px 8px'\n     }, \n    shortcutLabelCell: {\n        textAlign: 'right', \n        marginRight: 8\n     }, \n    shortcutDescriptionCell: {\n        textAlign: 'left'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\IconButton.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {c, s} from '../ThemeProvider';\n\nexport type IconButtonProps = { \n    type?: 'submit' | 'button';\n    disabled?: boolean;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    title: string;\n    label?: string;\n    responsive?: boolean;\n    children?: React.ReactNode;\n    small?: boolean;\n};\n\nexport function IconButton({\n    title, \n    label, \n    responsive, \n    children, \n    small, \n    ...rest\n }: IconButtonProps) {\n\n    return  (\n        <button\n         {...rest} className={css(styles.button, small && styles.small, rest.disabled && styles.disabled)}>\n            {children}\n            {\n                label ?  (\n                    <span\n                     className={css(styles.label, !children && styles.labelNoIcon, responsive && styles.responsive)}>\n                        {label}\n                    </span>\n                    )\n                 : null\n            }\n            <span\n             className={css(styles.phantom)}>\n                <span\n                 className={css(styles.tooltip)}>\n                    {title}\n                </span>\n            </span>\n        </button>\n        )\n    ;\n}\n\nexport default IconButton;\n\nconst styles = StyleSheet.create({\n    button: {\n        position: 'relative', \n        height: 40, \n        minWidth: 40, \n        margin: '0 8px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center', \n        appearance: 'none', \n        backgroundColor: 'transparent', \n        color: 'inherit', \n        padding: 0, \n        outline: 0, \n        border: 0, \n        borderRadius: 2, \n        whiteSpace: 'nowrap', \n        textDecoration: 'none', \n        fill: c('text'), \n        stroke: c('text'), \n        ':active': {\n            opacity: 0.8\n         }, \n        ':hover': {\n            cursor: 'pointer', \n            backgroundColor: c('hover')\n         }\n     }, \n    small: {\n        height: 32, \n        minWidth: 32, \n        margin: 0, \n        padding: '0 8px 0 0', \n        ':hover': {\n            backgroundColor: 'transparent'\n         }\n     }, \n    disabled: {\n        cursor: 'not-allowed', \n        pointerEvents: 'none', \n        opacity: 0.3\n     }, \n    phantom: {\n        position: 'absolute', \n        top: 0, \n        left: 0, \n        right: 0, \n        bottom: 0, \n        opacity: 0, \n        zIndex: 1, \n        ':hover': {\n            opacity: 1, \n            pointerEvents: 'auto'\n         }\n     }, \n    tooltip: {\n        position: 'absolute', \n        top: 'calc(100% + 4px)', \n        left: '50%', \n        transform: 'translateX(-50%)', \n        marginLeft: -2.5, \n        borderRadius: 2, \n        fontSize: 12, \n        padding: '4px 8px', \n        whiteSpace: 'nowrap', \n        pointerEvents: 'none', \n        boxShadow: s('popover'), \n        backgroundColor: c('content', 'dark'), \n        color: c('text', 'dark')\n     }, \n    label: {\n        margin: '0 12px', \n        color: c('text')\n     }, \n    labelNoIcon: {\n        margin: '0 12px 0 0'\n     }, \n    responsive: {\n        '@media (max-width: 960px)': {\n            display: 'none'\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\LoadingText.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\ntype Props = { \n    className?: string;\n    children?: React.ReactNode;\n    onClick?: () => void;\n};\n\nconst rotate = {\n    from: {\n        transform: 'rotate(0deg)'\n     }, \n    to: {\n        transform: 'rotate(360deg)'\n     }\n };\n\nconst LoadingText = ({\n    children, \n    className, \n    onClick\n }: Props) => \n\n     (\n    <div\n     className={classnames(css(styles.loading), className)} onClick={onClick}>\n        {children}\n    </div>\n    )\n\n;\n\nexport default LoadingText;\n\nconst styles = StyleSheet.create({\n    loading: {\n        ':before': {\n            display: 'inline-block', \n            content: '\"\"', \n            borderWidth: 2, \n            borderStyle: 'solid', \n            borderTopColor: 'rgba(255, 255, 255, 0.2)', \n            borderRightColor: 'rgba(255, 255, 255, 0.2)', \n            borderBottomColor: 'rgba(255, 255, 255, 0.2)', \n            borderLeftColor: 'rgba(255, 255, 255, 0.5)', \n            height: 16, \n            width: 16, \n            borderRadius: '50%', \n            marginLeft: '.5em', \n            marginRight: '1em', \n            verticalAlign: -3, \n            animationName: [\n                rotate\n            ], \n            animationDuration: '1s', \n            animationIterationCount: 'infinite', \n            animationTimingFunction: 'linear'\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\FooterButton.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {c} from '../ThemeProvider';\n\ntype FooterButtonProps = { \n    active?: boolean;\n    icon?: string;\n    children?: React.ReactNode;\n    onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n};\n\nexport function FooterButton({\n    active, \n    icon, \n    children, \n    onClick\n }: FooterButtonProps) {\n\n    return  (\n        <button\n         onClick={onClick} style={icon ? {\n                    backgroundImage: `url(${icon})`\n                 } : undefined} className={css(styles.button, children ? styles.buttonLabel : undefined, active && styles.active)}>\n            {children}\n        </button>\n        )\n    ;\n}\n\nexport default FooterButton;\n\nconst styles = StyleSheet.create({\n    button: {\n        position: 'relative', \n        border: 0, \n        outline: 0, \n        margin: 0, \n        height: 30, \n        padding: '0 16px', \n        appearance: 'none', \n        backgroundColor: 'transparent', \n        backgroundSize: 16, \n        backgroundRepeat: 'no-repeat', \n        backgroundPosition: 'center right 8px', \n        ':active': {\n            backgroundColor: c('hover'), \n            color: c('soft')\n         }, \n        ':hover': {\n            backgroundColor: c('hover'), \n            color: c('soft')\n         }\n     }, \n    buttonLabel: {\n        '@media (min-width: 720px)': {\n            padding: '5px 32px 5px 8px'\n         }\n     }, \n    active: {\n        backgroundColor: c('hover'), \n        color: c('soft')\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\MenuButton.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {c, s} from '../ThemeProvider';\nimport FooterButton from './FooterButton';\n\nexport type MenuButtonProps = { \n    icon?: string;\n    label?: React.ReactNode;\n    content: React.ReactNode;\n};\n\nexport function MenuButton({\n    icon, \n    label, \n    content\n }: MenuButtonProps) {\n\n    const [active, setActive] = React.useState<boolean>(false);\n    const root = React.useRef<HTMLDivElement>(null);\n    React.useEffect(() => {\n    \n        const onClick = (e: MouseEvent) => {\n        \n            if (e.target === root.current || root.current?.contains?.(e.target as Node)) {\n                return ;\n            }\n            setActive(false);\n        }\n        ;\n        document.addEventListener('click', onClick);\n        return () => \n            \n                document.removeEventListener('click', onClick)\n        ;\n    }\n    , [])\n    return  (\n        <div\n         ref={root} className={css(styles.panelContainer)}>\n            <FooterButton\n             icon={icon} active={active} onClick={() => \n                \n                    setActive(value => \n                    \n                        !value\n                    \n                    )\n            }>\n                {label}\n            </FooterButton>\n            {\n                active ?  (\n                    <div\n                     className={css(styles.pane)}>\n                        {content}\n                    </div>\n                    )\n                 : null\n            }\n        </div>\n        )\n    ;\n}\n\nexport default MenuButton;\n\nconst styles = StyleSheet.create({\n    panelContainer: {\n        position: 'relative', \n        display: 'flex', \n        alignItems: 'center'\n     }, \n    pane: {\n        display: 'flex', \n        alignItems: 'stretch', \n        justifyContent: 'flex-end', \n        flexDirection: 'column', \n        position: 'absolute', \n        right: 0, \n        bottom: 32, \n        minWidth: 160, \n        padding: '8px 0', \n        borderWidth: 1, \n        borderRadius: 3, \n        borderStyle: 'solid', \n        backgroundColor: c('content'), \n        borderColor: c('border'), \n        boxShadow: s('popover'), \n        color: c('text'), \n        zIndex: -1\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ToggleSwitch.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport {c} from '../ThemeProvider';\n\nexport type ToggleSwitchProps = { \n    checked: boolean;\n    label: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    className?: string;\n};\n\nexport function ToggleSwitch(props: ToggleSwitchProps) {\n\n    return  (\n        <label\n         className={classnames(css(styles.container), props.className)}>\n            <span\n             className={css(styles.label)}>\n                {props.label}\n            </span>\n            <span\n             className={css(styles.switch, props.checked ? styles.active : styles.inactive)} />\n            <input \n                type=\"checkbox\"\n                checked={props.checked}\n                onChange={props.onChange}\n                className={css(styles.check)}\n             />\n        </label>\n        )\n    ;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex', \n        alignItems: 'center', \n        margin: 8, \n        cursor: 'pointer', \n        whiteSpace: 'nowrap'\n     }, \n    switch: {\n        display: 'inline-block', \n        verticalAlign: -4, \n        width: 36, \n        height: 20, \n        borderRadius: 12, \n        border: `1px solid ${c('border')}`, \n        backgroundColor: c('background'), \n        ':before': {\n            content: '\"\"', \n            display: 'inline-block', \n            height: 14, \n            width: 14, \n            borderRadius: 7, \n            margin: 2, \n            transition: '.2s', \n            transform: 'translateX(0)'\n         }\n     }, \n    inactive: {\n        ':before': {\n            transform: 'translateX(0)', \n            backgroundColor: c('soft')\n         }\n     }, \n    active: {\n        ':before': {\n            transform: 'translateX(16px)', \n            backgroundColor: c('primary')\n         }\n     }, \n    check: {\n        display: 'none'\n     }, \n    label: {\n        flex: 1, \n        padding: '0 .5em', \n        fontWeight: 'normal'\n     }\n });\nexport default ToggleSwitch;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\EditorFooter.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {LoggedUser} from '../../features/app';\nimport {Annotation} from '../../features/annotations';\nimport {Shortcuts} from './KeyboardShortcuts';\nimport {PreferencesContextType, PanelType, withPreferences} from '../../features/preferences';\nimport {FooterShell} from '../shell/FooterShell';\nimport {c} from '../ThemeProvider';\nimport FooterButton from '../widgets/FooterButton';\nimport IconButton from '../widgets/IconButton';\nimport LoadingText from '../widgets/LoadingText';\nimport MenuButton from '../widgets/MenuButton';\nimport ShortcutLabel from '../widgets/ShortcutLabel';\nimport ToggleSwitch from '../widgets/ToggleSwitch';\nexport type EditorFooterProps = PreferencesContextType & { \n    annotations: Annotation[];\n    fileTreeShown: boolean;\n    panelsShown: boolean;\n    sendCodeOnChangeEnabled: boolean;\n    loggedUser: LoggedUser;\n    isLocalWebPreview: boolean;\n    onToggleTheme: () => void;\n    onTogglePanels: (panelType?: PanelType) => void;\n    onToggleFileTree: () => void;\n    onShowShortcuts: () => void;\n    theme: string;\n    autoGenSingleDoc: boolean;\n    autoExecJob: boolean;\n};\nfunction EditorFooterComp(props: EditorFooterProps) {\n\n    const {\n        annotations, \n        loggedUser, \n        fileTreeShown, \n        panelsShown, \n        sendCodeOnChangeEnabled, \n        isLocalWebPreview, \n        onToggleTheme, \n        onTogglePanels, \n        onToggleFileTree, \n        onShowShortcuts, \n        theme, \n        autoGenSingleDoc, \n        autoExecJob\n     } = props;\n    const _toggleAutoGenSingleDoc = () => \n    \n        props.setPreferences({\n            autoGenSingleDoc: !props.preferences.autoGenSingleDoc\n         })\n    ;\n    const _toggleAutoExecJob = () => \n    \n        props.setPreferences({\n            autoExecJob: !props.preferences.autoExecJob\n         })\n    ;\n    const loadingItems = annotations.filter(a => \n    \n        a.severity < 0\n    );\n    const isLoading = loadingItems.length >= 1;\n    const isErrorFatal = !isLoading && annotations.some(a => \n    \n        a.severity > 3\n    );\n    const warningCount = annotations.filter(a => \n    \n        a.severity === 2\n    ).length\n    ;\n    let text: any;\n    if (isLoading) {\n        text = isLoading ? `${loadingItems[0].message}${\n            loadingItems.length > 1\n             ? ` (+${loadingItems.length - 1} more)`\n             : ''}\n            ` : '';\n    }\n    else {\n        const errors = annotations.filter(a => \n        \n            a.severity >= 3\n        );\n        if (errors.length) {\n            const {\n                message, \n                location, \n                action\n             } = errors[0];\n            const prefix = location ? `${location.fileName} (${location.startLineNumber}:${location.startColumn}) ` : '';\n            const suffix = action ?  (\n                <span\n                 className={css(styles.action)} onClick={(event) => {\n                    \n                        event.stopPropagation();\n                        action.run();\n                    }\n                }>\n                    {action.title}\n                </span>\n                )\n             : errors.length > 1 ? `(+${errors.length - 1} more)` : '';\n            text =  (\n            <span\n            >\n                {prefix}\n                {message.split('\\n')[0] + ' '}\n                {suffix}\n            </span>\n            )\n            ;\n        }\n    }\n    return  (\n        <FooterShell\n         type={isLoading ? 'loading' : isErrorFatal ? 'error' : null}>\n            <div\n             className={css(styles.left)}>\n                {\n                    isLoading ?  (\n                        <LoadingText\n                         className={css(styles.loadingText)} onClick={() => \n                            \n                                onTogglePanels('errors')\n                        }>\n                            {text}\n                        </LoadingText>\n                        )\n                     :  (\n                        <button\n                         onClick={() => \n                            \n                                onTogglePanels(text ? 'errors' : undefined)\n                        } className={css(styles.statusText, text ? (isErrorFatal ? styles.errorTextFatal : styles.errorText) : styles.successText)}>\n                            {\n                                text\n                                 ?? (`No errors${\n                                warningCount\n                                 ? `, ${warningCount} warning${\n                                    warningCount > 1\n                                     ? 's'\n                                     : ''}\n                                    `\n                                 : ''}\n                                `)\n                            }\n                        </button>\n                        )\n                    \n                }\n            </div>\n            <MenuButton\n             icon={require('../../assets/settings-icon.png')} label={ (\n                <span\n                 className={css(styles.buttonLabel)}>\n                    Wizzi\n                </span>\n                )\n            } content={ (\n                <React.Fragment\n                >\n                    <ToggleSwitch\n                     checked={autoGenSingleDoc} onChange={_toggleAutoGenSingleDoc} label=\"Auto gen single doc\" />\n                    <ToggleSwitch\n                     checked={autoExecJob} onChange={_toggleAutoExecJob} label=\"Auto exec job\" />\n                </React.Fragment>\n                )\n            } />\n            <MenuButton\n             icon={require('../../assets/settings-icon.png')} label={ (\n                <span\n                 className={css(styles.buttonLabel)}>\n                    Editor\n                </span>\n                )\n            } content={ (\n                <React.Fragment\n                >\n                    <div\n                     className={css(styles.buttonItem, styles.buttonItemEditorPane)} onClick={onShowShortcuts}>\n                        <IconButton\n                         small title=\"Show keyboard shortcuts\" label=\"Shortcuts\" />\n                        <ShortcutLabel\n                         combo={Shortcuts.shortcuts.combo} className={css(styles.buttonItemShortcut)} />\n                    </div>\n                    <div\n                     className={css(styles.menuSeparator)} />\n                    <ToggleSwitch\n                     checked={fileTreeShown} onChange={onToggleFileTree} label=\"Files\" />\n                    <ToggleSwitch\n                     checked={panelsShown} onChange={() => \n                        \n                            onTogglePanels()\n                    } label=\"Panel\" />\n                    <ToggleSwitch\n                     checked={theme !== 'light'} onChange={onToggleTheme} label=\"Dark theme\" />\n                </React.Fragment>\n                )\n            } />\n        </FooterShell>\n        )\n    ;\n}\n\nexport const EditorFooter = withPreferences(EditorFooterComp);\nexport default EditorFooter;\n\nconst styles = StyleSheet.create({\n    left: {\n        display: 'flex', \n        alignItems: 'stretch', \n        flex: 1, \n        minWidth: 0, \n        overflow: 'hidden'\n     }, \n    loadingText: {\n        textOverflow: 'ellipsis', \n        whiteSpace: 'nowrap', \n        padding: '.5em', \n        width: '100%', \n        cursor: 'pointer'\n     }, \n    statusText: {\n        border: 0, \n        outline: 0, \n        margin: 0, \n        appearance: 'none', \n        backgroundColor: 'transparent', \n        backgroundSize: 16, \n        backgroundRepeat: 'no-repeat', \n        backgroundPosition: '1em center', \n        display: 'inline-block', \n        textOverflow: 'ellipsis', \n        whiteSpace: 'nowrap', \n        padding: '.25em .5em .25em 3em', \n        minWidth: 200, \n        width: '100%', \n        textAlign: 'left'\n     }, \n    successText: {\n        backgroundImage: `url(${require('../../assets/checkmark.png')})`\n     }, \n    errorText: {\n        backgroundImage: `url(${require('../../assets/cross-red.png')})`, \n        color: c('error')\n     }, \n    errorTextFatal: {\n        backgroundImage: `url(${require('../../assets/cross-light.png')})`\n     }, \n    errorBorder: {\n        borderColor: c('error-text')\n     }, \n    devicesCount: {\n        position: 'absolute', \n        top: 4, \n        right: 6, \n        height: 20, \n        minWidth: 20, \n        borderRadius: '50%', \n        backgroundColor: c('text'), \n        color: c('background'), \n        opacity: 0.5\n     }, \n    devicePane: {\n        padding: '0 16px'\n     }, \n    devicePaneItem: {\n        margin: '0 -16px'\n     }, \n    deviceLabel: {\n        display: 'flex', \n        alignItems: 'center', \n        whiteSpace: 'nowrap', \n        padding: '8px 0'\n     }, \n    deviceIcon: {\n        height: 16, \n        width: 16, \n        marginRight: 8, \n        fill: 'currentColor'\n     }, \n    noDevicesMessage: {\n        whiteSpace: 'nowrap', \n        margin: 8\n     }, \n    buttonLabel: {\n        display: 'none', \n        [`@media (min-width: ${700 + 20}px)`]: {\n                display: 'inline'\n             }\n     }, \n    buttonItem: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n     }, \n    buttonItemShortcut: {\n        userSelect: 'none', \n        cursor: 'pointer', \n        marginLeft: 12\n     }, \n    buttonItemEditorPane: {\n        margin: '0 12px'\n     }, \n    title: {\n        margin: '16px 0 8px'\n     }, \n    action: {\n        textDecoration: 'underline', \n        cursor: 'pointer', \n        fontWeight: 'bold'\n     }, \n    menuSeparator: {\n        margin: '6px 0', \n        borderBottom: `1px solid ${c('border')}`\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\ProblemsPanel.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport trim from 'lodash/trim';\nimport * as React from 'react';\nimport {Annotation} from '../../features/annotations';\nimport {c, s} from '../ThemeProvider';\nexport type ProblemsPanelProps = { \n    annotations: Annotation[];\n    onSelectFile: (path: string) => void;\n};\nexport function ProblemsPanel({\n    annotations, \n    onSelectFile\n }: ProblemsPanelProps) {\n\n    const [selected, setSelected] = React.useState<string | undefined>(undefined);\n    return  (\n        <React.Fragment\n        >\n            {\n                annotations.map(({\n                    message, \n                    location, \n                    source, \n                    severity, \n                    action\n                 }, index) => {\n                \n                    let iconStyle = styles.infoIcon;\n                    let locationStyle = styles.infoColor;\n                    if (severity >= 3) {\n                        iconStyle = styles.errorIcon;\n                        locationStyle = styles.errorColor;\n                    }\n                    else {\n                        if (severity >= 2) {\n                            iconStyle = styles.warningIcon;\n                            locationStyle = styles.warningColor;\n                        }\n                        else {\n                            if (severity < 0) {\n                                iconStyle = styles.loadingIcon;\n                            }\n                        }\n                    }\n                    const file = location?.fileName ?  (\n                        <span\n                         className={css(styles.location, locationStyle)} onClick={() => \n                            \n                                onSelectFile(location.fileName)\n                        }>\n                            {\n                                `${location.fileName} (${location.startLineNumber}:${location.startColumn})`\n                            }\n                        </span>\n                        )\n                     : '';\n                    const icon =  (\n                    <div\n                     className={css(styles.icon, iconStyle)} />\n                    )\n                    ;\n                    const lines = message.split('\\n');\n                    const title = lines[0];\n                    let suffix;\n                    if (action) {\n                        suffix =  (\n                        <button\n                         className={css(styles.action)} onClick={action.run}>\n                            {\n                                action.icon ?  (\n                                    <span\n                                     className={css(styles.actionIcon)}>\n                                        <action.icon\n                                         />\n                                    </span>\n                                    )\n                                 : undefined\n                            }\n                            <span\n                             className={css(styles.actionText)}>\n                                {action.title}\n                            </span>\n                        </button>\n                        )\n                        ;\n                    }\n                    else {\n                        if (source) {\n                            suffix =  (\n                            <span\n                             className={css(styles.source)}>\n                                {\n                                    ` (${source})`\n                                }\n                            </span>\n                            )\n                            ;\n                        }\n                    }\n                    const key = `${location?.fileName ?? ''}.${title}.${source ?? ''}`;\n                    const expanded = annotations.length === 1 || selected === key;\n                    return  (\n                        <div\n                         key={index} className={css(styles.item)} onClick={() => \n                            \n                                setSelected(key)\n                        }>\n                            <div\n                             className={css(styles.line)}>\n                                {icon}\n                                {file}\n                                {title}\n                                {suffix}\n                            </div>\n                            {\n                                expanded && lines.length > 1 ?  (\n                                    <pre\n                                     className={css(styles.callstack)}>\n                                        {trim(message.substring(title.length), '\\r\\n')}\n                                    </pre>\n                                    )\n                                 : undefined\n                            }\n                        </div>\n                        )\n                    ;\n                }\n                )\n            }\n        </React.Fragment>\n        )\n    ;\n}\n\nexport default ProblemsPanel;\n\nconst styles = StyleSheet.create({\n    item: {\n        display: 'flex', \n        flexDirection: 'column', \n        padding: '0 1.5em'\n     }, \n    line: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        border: 0, \n        margin: 0, \n        padding: '1px 0', \n        color: c('text'), \n        minHeight: 30\n     }, \n    icon: {\n        backgroundSize: 16, \n        backgroundRepeat: 'no-repeat', \n        backgroundPosition: 'center center', \n        width: 16, \n        height: 16, \n        marginRight: '0.5em'\n     }, \n    loadingIcon: {\n        borderWidth: 2, \n        borderStyle: 'solid', \n        borderTopColor: c('text'), \n        borderLeftColor: c('text'), \n        borderBottomColor: c('text'), \n        borderRightColor: 'rgba(0, 0, 0, .16)', \n        opacity: 0.5, \n        borderRadius: '50%', \n        verticalAlign: -3, \n        animationName: [\n            {\n                from: {\n                    transform: 'rotate(0deg)'\n                 }, \n                to: {\n                    transform: 'rotate(360deg)'\n                 }\n             }\n        ], \n        animationDuration: '1s', \n        animationIterationCount: 'infinite', \n        animationTimingFunction: 'linear'\n     }, \n    infoIcon: {\n        backgroundImage: `url(${require('../../assets/info-icon.png')})`\n     }, \n    errorIcon: {\n        backgroundImage: `url(${require('../../assets/cross-red.png')})`\n     }, \n    warningIcon: {\n        backgroundImage: `url(${require('../../assets/cross.png')})`\n     }, \n    location: {\n        textDecoration: 'underline', \n        cursor: 'pointer', \n        marginRight: '0.5em'\n     }, \n    infoColor: {\n        opacity: 0.5\n     }, \n    errorColor: {\n        color: c('error')\n     }, \n    warningColor: {\n        color: c('warning')\n     }, \n    source: {\n        color: c('text'), \n        opacity: 0.5, \n        marginLeft: '0.5em'\n     }, \n    action: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        appearance: 'none', \n        outline: 0, \n        margin: '0 0 0 0.5em', \n        backgroundColor: c('content'), \n        color: c('selected'), \n        borderRadius: 3, \n        border: `1px solid ${c('selected')}`, \n        lineHeight: 1, \n        padding: '0 12px', \n        minWidth: 50, \n        minHeight: 30, \n        ':hover': {\n            backgroundColor: c('selected'), \n            color: c('content'), \n            boxShadow: s('small')\n         }\n     }, \n    actionIcon: {\n        marginRight: 4\n     }, \n    actionText: {\n        whiteSpace: 'nowrap', \n        overflow: 'hidden', \n        textOverflow: 'ellipsis'\n     }, \n    callstack: {\n        color: c('error'), \n        fontFamily: 'var(--font-monospace)', \n        margin: '0.5em 0px'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ResizablePane.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\n\ntype Props = { \n    inverted?: boolean;\n    direction: 'horizontal' | 'vertical';\n    children?: React.ReactNode;\n    className?: string;\n};\n\ntype State = { \n    resizing: boolean;\n    initialPosition: { \n        pageX: number;\n        pageY: number;\n    } | null;\n    initialWidth: number;\n    initialHeight: number;\n};\n\nexport default class ResizablePane extends React.PureComponent<Props, State> {\n        state: State = {\n            resizing: false, \n            initialPosition: null, \n            initialWidth: 0, \n            initialHeight: 0\n        }\n        ;\n        componentDidMount() {\n            // @ts-ignore\n            document.addEventListener('mouseup', this._handleMouseUp);\n            // @ts-ignore\n            document.addEventListener('mousemove', this._handleMouseMove);\n        }\n        componentWillUnmount() {\n            // @ts-ignore\n            document.removeEventListener('mouseup', this._handleMouseUp);\n            // @ts-ignore\n            document.removeEventListener('mousemove', this._handleMouseMove);\n        }\n        _handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n            if (!this._pane.current) {\n                return ;\n            }\n            const style = getComputedStyle(this._pane.current);\n            this.setState({\n                resizing: true, \n                initialPosition: {\n                    pageX: e.pageX, \n                    pageY: e.pageY\n                 }, \n                initialWidth: parseFloat(style.width || '0'), \n                initialHeight: parseFloat(style.height || '0')\n             })\n        };\n        _handleMouseUp = (e: React.MouseEvent<HTMLDivElement>) => {\n            if (this.state.resizing) {\n                e.preventDefault();\n                this.setState({\n                    resizing: false, \n                    initialPosition: null, \n                    initialWidth: 0, \n                    initialHeight: 0\n                 })\n            }\n        };\n        _handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n            const {\n                direction, \n                inverted\n             } = this.props;\n            const {\n                resizing, \n                initialPosition, \n                initialWidth, \n                initialHeight\n             } = this.state;\n            if (resizing && initialPosition) {\n                e.preventDefault();\n                let style;\n                if (direction === 'horizontal') {\n                    const delta = e.pageX - initialPosition.pageX;\n                    style = `width: ${initialWidth + ((inverted ? -delta : delta))}px !important;`;\n                }\n                else {\n                    const delta = initialPosition.pageY - e.pageY;\n                    style = `height: ${initialHeight + ((inverted ? -delta : delta))}px !important`;\n                }\n                this._pane.current?.setAttribute?.('style', style);\n            }\n        };\n        _pane = React.createRef<HTMLDivElement>();\n        render() {\n            const {\n                direction, \n                inverted, \n                className, \n                children\n             } = this.props;\n            return  (\n                <div\n                 ref={this._pane} className={`${css(styles.container)} ${className ?? ''}`}>\n                    {children}\n                    <div\n                     className={css(styles.handle, direction === 'horizontal' ? styles.horizontal : styles.vertical, direction === 'horizontal' ? inverted ? styles.horizontalInverted : styles.horizontalNormal : inverted ? styles.verticalInverted : styles.verticalNormal)} onMouseDown={this._handleMouseDown} onMouseUp={this._handleMouseUp} />\n                </div>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    container: {\n        position: 'relative'\n     }, \n    handle: {\n        position: 'absolute', \n        zIndex: 1\n     }, \n    horizontal: {\n        top: 0, \n        bottom: 0, \n        width: 12, \n        cursor: 'col-resize'\n     }, \n    vertical: {\n        left: 0, \n        right: 0, \n        height: 12, \n        cursor: 'row-resize'\n     }, \n    horizontalNormal: {\n        right: -12\n     }, \n    horizontalInverted: {\n        left: -12\n     }, \n    verticalNormal: {\n        top: -12\n     }, \n    verticalInverted: {\n        bottom: -12\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\EditorPanels.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {Annotation} from '../../features/annotations';\nimport type {PanelType} from '../../features/preferences';\nimport ProblemsPanel from './ProblemsPanel';\nimport {c} from '../ThemeProvider';\nimport ResizablePane from '../widgets/ResizablePane';\ntype Props = { \n    annotations: Annotation[];\n    onSelectFile: (path: string) => void;\n    onShowErrorPanel: () => void;\n    onTogglePanels: (panelType?: PanelType) => void;\n    panelType: 'errors' | 'logs';\n};\n\nexport default class EditorPanels extends React.Component<Props> {\n        getSnapshotBeforeUpdate(prevProps: Props) {\n            return null;\n        }\n        componentDidUpdate(prevProps: Props) {\n        }\n        _isScrolled: boolean = false;\n        _panel = React.createRef<HTMLDivElement>();\n        render() {\n            const {\n                annotations, \n                onSelectFile, \n                onShowErrorPanel, \n                onTogglePanels, \n                panelType\n             } = this.props;\n            return  (\n                <ResizablePane\n                 direction=\"vertical\" className={css(styles.container)}>\n                    <div\n                     className={css(styles.panels)}>\n                        <div\n                         className={css(styles.header)}>\n                            <button\n                             onClick={onShowErrorPanel} className={css(styles.tab, panelType !== 'errors' && styles.inactive)}>\n                                Problems\n                            </button>\n                            <div\n                             className={css(styles.buttons)}>\n                                <button\n                                 onClick={() => \n                                    \n                                        onTogglePanels()\n                                } className={css(styles.button, styles.close)} />\n                            </div>\n                        </div>\n                        <div\n                         ref={this._panel} className={css(styles.panel)}>\n                            {\n                                panelType === 'errors' ?  (\n                                    <ProblemsPanel\n                                     annotations={annotations} onSelectFile={onSelectFile} />\n                                    )\n                                 : null\n                            }\n                        </div>\n                    </div>\n                </ResizablePane>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    container: {\n        height: '14em'\n     }, \n    header: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        paddingTop: '.75em'\n     }, \n    tab: {\n        display: 'inline-block', \n        appearance: 'none', \n        background: 'none', \n        border: 'none', \n        margin: 0, \n        padding: '.35em 1.5em', \n        fontSize: '.9em', \n        textTransform: 'uppercase', \n        outline: 'none', \n        opacity: 1\n     }, \n    inactive: {\n        opacity: 0.5\n     }, \n    buttons: {\n        display: 'flex', \n        flex: 1, \n        flexDirection: 'row', \n        justifyContent: 'flex-end', \n        margin: '0 1em'\n     }, \n    button: {\n        height: 24, \n        width: 24, \n        border: 0, \n        outline: 0, \n        margin: '0 .5em', \n        appearance: 'none', \n        backgroundColor: 'transparent', \n        backgroundSize: 16, \n        backgroundRepeat: 'no-repeat', \n        backgroundPosition: 'center'\n     }, \n    close: {\n        backgroundImage: `url(${require('../../assets/cross.png')})`\n     }, \n    clear: {\n        backgroundImage: `url(${require('../../assets/clear.png')})`\n     }, \n    panels: {\n        backgroundColor: c('content'), \n        borderColor: c('border'), \n        borderWidth: '1px 0 0 0', \n        borderStyle: 'solid', \n        height: '100%', \n        minHeight: 0\n     }, \n    panel: {\n        display: 'flex', \n        flexDirection: 'column', \n        minHeight: 0, \n        padding: '.5em 0 .75em 0', \n        overflow: 'auto', \n        height: 'calc(100% - 2.5em)'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\assets\\WizziIcon.tsx.ittf\n*/\nimport * as React from \"react\";\nexport const WizziIcon = ({\n    height=\"24px\", \n    width=\"24px\", \n    theme=\"light\", \n    ...props\n }: React.SVGProps<SVGSVGElement> & { \n    theme?: string;\n}) => {\n\n    const fill = theme == 'light' ? '#ffffff' : '#000000';\n    const stroke = theme == 'light' ? '#000000' : '#ffffff';\n    return  (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            viewBox=\"0 0 660 280\"\n            {...props}\n        >\n            <polyline\n             fill={stroke} stroke={stroke} points=\"10 250 45 10 60 10 75 130 120 210 120 130 175 210 175 110 230 210 230 250\" />\n            <polyline\n             fill={stroke} stroke={stroke} points=\"250 250 260 90 290 90 300 250\" />\n            <polyline\n             fill={stroke} stroke={stroke} points=\"320 250 320 230 420 130 400 110 400 90 450 90 420 230 440 230 440 250\" />\n            <polyline\n             fill={stroke} stroke={stroke} points=\"450 250 450 230 550 130 530 110 530 90 580 90 550 230 570 230 570 250\" />\n            <polyline\n             fill={stroke} stroke={stroke} points=\"590 250 600 90 630 90 640 250\" />\n            <path\n             fill={stroke} stroke={stroke} d=\"M280, 30 C310,50 250,70 280, 84\" />\n            <path\n             fill={stroke} stroke={stroke} d=\"M620, 30 C650,50 590,70 620, 84\" />\n        </svg>\n        )\n    ;\n}\n;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\assets\\EditIcon.tsx.ittf\n*/\nimport * as React from \"react\";\nexport const EditIcon = ({\n    height=\"24px\", \n    width=\"24px\", \n    theme=\"light\", \n    ...props\n }: React.SVGProps<SVGSVGElement> & { \n    theme?: string;\n}) => {\n\n    const fill = theme == 'light' ? '#ffffff' : '#000000';\n    const stroke = theme == 'light' ? '#000000' : '#ffffff';\n    return  (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            viewBox=\"0 0 512 512\"\n            {...props}\n        >\n            <g\n            >\n                <path\n                 fill={stroke} stroke={stroke} d=\"M486.805,34.87c-2.81-10.483-9.533-19.245-18.931-24.671l-8.206-4.738c-9.397-5.426-20.348-6.867-30.831-4.059c-10.484,2.81-19.246,9.533-24.672,18.932L174.185,418.667c-0.832,1.442-1.301,3.041-1.414,4.672c-0.003,0.035-0.016,0.062-0.018,0.098l-4.014,66.894H94.584c-5.983,0-10.835,4.852-10.835,10.835s4.852,10.835,10.835,10.835c0,0,85.393-0.032,85.656-0.093c1.639-0.198,3.243-0.755,4.673-1.7l64.441-42.548c0.035-0.023,0.053-0.056,0.086-0.08c1.322-0.892,2.478-2.071,3.328-3.544L482.746,65.702C488.172,56.303,489.614,45.354,486.805,34.87z M191.058,480.183l2.278-37.95l29.45,17.002L191.058,480.183z M239.418,443.817l-41.049-23.698l177.532-307.493l41.047,23.698L239.418,443.817zM427.784,117.558l-41.047-23.698l17.419-30.172l41.047,23.698L427.784,117.558z M463.978,54.867l-7.94,13.751L414.991,44.92l7.939-13.751c2.533-4.387,6.622-7.524,11.514-8.835c4.896-1.311,10.002-0.638,14.387,1.894l8.206,4.738c4.387,2.532,7.524,6.621,8.835,11.513C467.183,45.372,466.51,50.481,463.978,54.867z\" />\n                <path\n                 fill={stroke} stroke={stroke} d=\"M41.853,490.331h-7.224c-5.983,0-10.835,4.852-10.835,10.835c0,5.983,4.852,10.835,10.835,10.835h7.224c5.983,0,10.835-4.852,10.835-10.835C52.688,495.183,47.836,490.331,41.853,490.331z\" />\n            </g>\n        </svg>\n        )\n    ;\n}\n;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\assets\\BrowserIcon.tsx.ittf\n*/\nimport * as React from \"react\";\nexport const BrowserIcon = ({\n    height=\"24px\", \n    width=\"24px\", \n    theme=\"light\", \n    ...props\n }: React.SVGProps<SVGSVGElement> & { \n    theme?: string;\n}) => {\n\n    const fill = theme == 'light' ? '#ffffff' : '#000000';\n    const stroke = theme == 'light' ? '#000000' : '#ffffff';\n    return  (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            viewBox=\"0 0 1000 1000\"\n            {...props}\n        >\n            <g\n            >\n                <g\n                 transform=\"translate(0.000000,511.000000) scale(0.100000,-0.100000)\">\n                    <path\n                     d=\"M4637.4,4936.3c-1720.2-88.1-3306.1-1110.1-4063.8-2618.9c-218-433.9-345.8-828.2-433.9-1332.6c-52.9-306.2-52.9-1057.3,0-1365.6c174-1004.4,621.1-1856.8,1350.2-2568.3c784.1-762.1,1812.7-1242.3,2920.6-1361.2c259.9-28.6,832.6-30.8,832.6-4.4c0,17.6-74.9,398.7-99.1,500c-8.8,44.1-26.4,46.3-389.9,59.5c-612.3,22-1160.8,158.6-1733.4,436.1l-275.3,132.2l77.1,37.4c105.7,52.9,105.7,116.8,0,400.9c-107.9,288.6-114.5,370-28.7,462.5c44.1,48.5,103.5,77.1,235.7,110.1c231.3,61.7,363.4,134.4,544,306.1c105.7,96.9,171.8,185,226.9,293c118.9,237.9,101.3,326-66.1,326c-279.7,0-579.3,152-892.1,453.7C2714.5-673.8,2575.7-557,2536.1-535c-174,88.1-614.5,57.3-770.9-55.1c-112.3-81.5-328.2-409.7-480.2-724.6L1161.7-1568l-70.5,140.9C948-1140.7,800.4-684.8,738.8-325.8l-13.2,77.1l215.9,105.7C1423.8,95,1851.1,350.4,1954.6,462.8c83.7,90.3,66.1,149.8-92.5,301.8l-143.2,136.6l2.2,306.2c0,167.4,8.8,385.4,17.6,480.2c13.2,165.2,19.8,178.4,96.9,244.5c44,39.6,204.9,123.3,356.8,185c555.1,233.5,654.2,370,539.6,729.1c-48.5,154.2-218,471.4-323.8,612.3c-66.1,85.9-77.1,70.5,215.9,255.5C3130.8,4033.2,3688.1,4238,4307,4335c301.8,46.3,887.6,52.9,1180.6,11l211.4-28.6l37.5-185c81.5-418.5,237.9-786.3,385.4-914.1c44.1-37.4,169.6-125.5,277.5-193.8c110.1-70.5,365.6-257.7,570.5-416.3c202.6-158.6,411.9-317.2,462.5-348c52.9-33,116.7-92.5,143.2-130c127.7-189.4,279.7-676.2,304-982.4c17.6-229.1-22-334.8-226.9-603.5c-209.2-279.7-262.1-361.2-237.9-383.3c33-30.8,2099.1-1257.7,2127.7-1262.1c30.8-8.8,92.5,182.8,160.8,502.2c176.2,810.5,105.7,1702.6-196,2488.9c-497.8,1306.1-1599.1,2343.6-2977.9,2801.7C5932.5,4892.2,5326.8,4969.3,4637.4,4936.3z M8826.7,1971.6c143.2-304,257.7-658.6,319.4-991.2c39.6-215.8,48.5-330.4,46.3-678.4c-2.2-229.1-11-453.8-22-495.6l-19.8-74.9l-50.7,141c-103.5,290.8-259.9,508.8-513.2,718.1c-204.8,169.6-275.3,273.1-354.6,511c-116.7,352.4-116.7,649.8,2.2,795.1c52.9,63.9,422.9,310.6,467,310.6C8710,2207.2,8767.2,2101.5,8826.7,1971.6z\" />\n                    <path\n                     d=\"M4780.5,1039.9l-55.1-41.8l561.7-2797.3c308.4-1539.6,566.1-2799.5,572.7-2799.5c6.6,0,253.3,367.8,548.5,815c295.1,449.3,546.2,812.8,555,810.6c8.8-4.4,251.1-332.6,539.6-733.5c286.3-398.7,557.3-764.3,601.3-810.6c312.8-330.4,843.6-251.1,960.3,145.4c81.5,277.5,61.7,323.8-596.9,1240.1c-308.4,431.7-557.3,788.5-552.9,792.9c4.4,4.4,449.3,92.5,986.8,196c537.4,103.5,986.8,189.4,997.8,193.8c11,4.4-127.8,94.7-308.4,200.4c-180.6,107.9-1284.1,766.5-2453.7,1462.5C5967.7,412.1,4972.2,1004.6,4923.7,1031.1C4837.8,1081.7,4835.6,1081.7,4780.5,1039.9z\" />\n                </g>\n                <line \n                    className=\"st0\"\n                    x1=\"3\"\n                    y1=\"16\"\n                    x2=\"15\"\n                    y2=\"16\"\n                 />\n                <path\n                 className=\"st0\" d=\"M21.8,13c-0.6-5.7-3-10-5.8-10c-3.3,0-6,5.8-6,13s2.7,13,6,13\" />\n                <path\n                 className=\"st0\" d=\"M28.9,17c0-0.3,0.1-0.7,0.1-1c0-7.2-5.8-13-13-13S3,8.8,3,16s5.8,13,13,13c1,0,2-0.1,3-0.4\" />\n                <path\n                 className=\"st0\" d=\"M24.5,17.5c1.9,1.9,1.9,5.1,0,7c-0.5,0.5-1,0.8-1.6,1.1c-1.8,0.7-3.9,0.4-5.4-1.1c-1.9-1.9-1.9-5.1,0-7S22.6,15.6,24.5,17.5z\" />\n                <path\n                 className=\"st0\" d=\"M25.5,23l3.9,3.6c0.8,0.8,0.8,2,0,2.8l0,0c-0.8,0.8-2,0.8-2.8,0l-3.5-3.5\" />\n            </g>\n        </svg>\n        )\n    ;\n}\n;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\Avatar.tsx.ittf\n*/\nimport React, {FunctionComponent} from 'react';\n// see https://mxstbr.blog/2016/11/styled-components-magic-explained/\nimport styled, {keyframes, css} from 'styled-components';\n\nimport {c} from '../ThemeProvider';\n\nexport interface AvatarProps {\n    size: number;\n    source: string | null;\n}\n\ninterface RootStyleProps {\n}\ninterface ImageStyleProps {\n    size: number;\n}\nconst StyledRoot = styled.div<RootStyleProps>`\n    display: -ms-flexbox;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    stroke: ${props => c('text')};\n`\nconst StyledImage = styled.img<ImageStyleProps>`\n    width: ${props => props.size + \"px\"};\n    height: ${props => props.size + \"px\"};\n    -webkit-border-radius: ${props => (props.size / 2) + \"px\"};\n    -khtml-border-radius: ${props => (props.size / 2) + \"px\"};\n    -moz-border-radius: ${props => (props.size / 2) + \"px\"};\n    -o-border-radius: ${props => (props.size / 2) + \"px\"};\n    border-radius: ${props => (props.size / 2) + \"px\"};\n`\nexport const Avatar: FunctionComponent<AvatarProps> = ({\n    size, \n    source\n }) => \n\n     (\n    <StyledRoot\n    >\n        {\n            source ?  (\n                <StyledImage\n                 src={source} size={size} />\n                )\n             :  (\n                <svg \n                    width=\"20\"\n                    height=\"20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path \n                        d=\"M13.125 13.563c2.423-3.635 2.831-10.938-2.623-10.938-5.454 0-5.05 7.303-2.627 10.938-2.423 0-5.25 2.389-5.25 4.812h15.75c.004-2.423-2.827-4.813-5.25-4.813z\"\n                        strokeWidth=\"1.75\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                     />\n                </svg>\n                )\n            \n        }\n    </StyledRoot>\n    )\n\n;\nexport default Avatar;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ContextMenu.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport {c, s} from '../ThemeProvider';\nimport ShortcutLabel from './ShortcutLabel';\n\nexport type Action = { \n    label: string;\n    handler: () => void;\n    disabled?: boolean;\n    combo?: number[];\n};\n\nexport type ContextMenuProps = { \n    innerRef?: React.Ref<HTMLUListElement>;\n    visible: boolean;\n    actions: (Action | undefined)[];\n    position?: { \n        pageX: number;\n        pageY: number;\n    } | null;\n    onHide: () => void;\n    className?: string;\n};\nconst BOTTOM_OFFSET = 35;\nconst MENU_ITEM_HEIGHT = 28;\n\nexport class ContextMenu extends React.PureComponent<ContextMenuProps> {\n    render() {\n        const {\n            visible, \n            position, \n            actions, \n            onHide, \n            className, \n            \n            // @ts-ignore\n            innerRef\n         } = this.props;\n        if (!visible) {\n            return null; \n        }\n        const shownActions = actions.filter(action => \n            \n                action\n            ) as Action[];\n        return  (\n            <ul\n             ref={innerRef} className={classnames(css(styles.menu), className)} style={position ? {\n                        position: 'fixed', \n                        top: Math.min(position.pageY, window.innerHeight - BOTTOM_OFFSET - shownActions.length * MENU_ITEM_HEIGHT), \n                        left: position.pageX, \n                        marginTop: -8\n                     } : {}}>\n                {\n                    shownActions.map(({\n                        label, \n                        handler, \n                        disabled, \n                        combo\n                     }: Action) => \n                    \n                         (\n                        <li\n                         key={label}>\n                            <button\n                             disabled={disabled} className={css(styles.item, disabled && styles.disabled)} onClick={() => {\n                                \n                                    handler();\n                                    onHide();\n                                }\n                            }>\n                                <div\n                                >\n                                    {label}\n                                </div>\n                                {\n                                    combo ?  (\n                                        <ShortcutLabel\n                                         combo={combo} className={css(styles.hint)} />\n                                        )\n                                     : null\n                                }\n                            </button>\n                        </li>\n                        )\n                    \n                    )\n                }\n            </ul>\n            )\n        ;\n    }\n}\nexport default React.forwardRef((props: ContextMenuProps, ref: React.Ref<HTMLUListElement>) => \n    \n         (\n        <ContextMenu\n         {...props} innerRef={ref} />\n        )\n    \n    )\nconst fadeIn = {\n    from: {\n        opacity: 0\n     }, \n    to: {\n        opacity: 1\n     }\n };\nconst styles = StyleSheet.create({\n    menu: {\n        zIndex: 10, \n        listStyle: 'none', \n        padding: 0, \n        borderRadius: 4, \n        borderStyle: 'solid', \n        boxShadow: s('popover'), \n        minWidth: 160, \n        animationName: fadeIn, \n        animationDuration: '0.083s', \n        animationTimingfunction: 'linear', \n        backgroundColor: c('content'), \n        border: `1px solid ${c('border')}`, \n        color: c('text')\n     }, \n    item: {\n        display: 'flex', \n        justifyContent: 'space-between', \n        appearance: 'none', \n        background: 'none', \n        border: 0, \n        outline: 0, \n        width: '100%', \n        padding: '8px 6px', \n        textAlign: 'left', \n        userSelect: 'none', \n        borderRadius: 2, \n        fontSize: 16, \n        color: c('text'), \n        borderBottom: `1px solid ${c('border')}`, \n        marginBottom: '-1px', \n        ':hover': {\n            background: c('hover')\n         }\n     }, \n    disabled: {\n        pointerEvents: 'none', \n        opacity: 0.5\n     }, \n    hint: {\n        marginLeft: 24, \n        lineHeight: '24px'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\UserMenu.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {loggedUser} from '../../features/app';\nimport {c} from '../ThemeProvider';\nimport {Avatar} from '../widgets/Avatar';\nimport ContextMenu from '../widgets/ContextMenu';\nexport type UserMenuProps = { \n    loggedUser: LoggedUser;\n};\ntype State = { \n    visible: boolean;\n};\nexport class UserMenuComp extends React.Component<UserMenuProps, State> {\n    state: State = {\n        visible: false\n    }\n    ;\n    componentDidMount() {\n        document.addEventListener('click', this._handleDocumentClick);\n        document.addEventListener('contextmenu', this._handleDocumentContextMenu);\n        console.log('UserMenu componentDidMount', __filename);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this._handleDocumentClick);\n        document.removeEventListener('contextmenu', this._handleDocumentContextMenu);\n    }\n    _handleDocumentClick = (e: MouseEvent) => {\n        console.log('UserMenu _handleDocumentClick', this.state.visible, __filename);\n        if (this.state.visible) {\n            if (this._menu.current && e.target !== this._menu.current && !this._menu.current.contains(e.target as HTMLElement)) {\n                this._hideMenu();\n            }\n        }\n        else {\n            if (this._avatar.current && (e.target === this._avatar.current || this._avatar.current.contains(e.target as Node))) {\n                this.setState((state) => \n                \n                    ({\n                        visible: !state.visible\n                     })\n                )\n            }\n        }\n    };\n    _handleDocumentContextMenu = () => {\n        if (this.state.visible) {\n            this._hideMenu();\n        }\n    };\n    _hideMenu = () => \n        this.setState({\n            visible: false\n         });\n    _menu = React.createRef<HTMLUListElement>();\n    _avatar = React.createRef<HTMLButtonElement>();\n    render() {\n        const {\n            loggedUser\n         } = this.props;\n        return  (\n            <div\n             className={css(styles.container)}>\n                <button\n                 ref={this._avatar} className={css(styles.button)} title=\"Your profile\">\n                    <Avatar\n                     source={loggedUser?.picture ? loggedUser.picture : null} size={26} />\n                </button>\n                <ContextMenu \n                    ref={this._menu}\n                    visible={this.state.visible}\n                    actions={loggedUser ? [\n                                {\n                                    label: 'Artifacts', \n                                    handler: () => \n                                    \n                                        window.open(`${process.env.SERVER_URL}/productions/artifacts`)\n                                    \n                                 }, \n                                {\n                                    label: 'Packages', \n                                    handler: () => \n                                    \n                                        window.open(`${process.env.SERVER_URL}/productions/packages`)\n                                    \n                                 }, \n                                {\n                                    label: 'Metas', \n                                    handler: () => \n                                    \n                                        window.open(`${process.env.SERVER_URL}/productions/metas`)\n                                    \n                                 }, \n                                {\n                                    label: 'tFolders', \n                                    handler: () => \n                                    \n                                        window.open(`${process.env.SERVER_URL}/productions/tfolders`)\n                                    \n                                 }, \n                                {\n                                    label: 'Settings', \n                                    handler: () => \n                                    \n                                        window.open(`${process.env.SERVER_URL}/settings`)\n                                    \n                                 }\n                            ] : [\n                                {\n                                    label: 'Log in to Wizzi', \n                                    handler: () => \n                                    \n                                        window.location.href = '#'\n                                    \n                                 }\n                            ]}\n                    onHide={this._hideMenu}\n                    className={css(styles.menu)}\n                 />\n            </div>\n            )\n        ;\n    }\n}\nexport const UserMenu = UserMenuComp;\nexport default UserMenu;\nconst styles = StyleSheet.create({\n    container: {\n        marginRight: 16\n     }, \n    menu: {\n        position: 'absolute', \n        margin: '4px 0', \n        right: 16\n     }, \n    button: {\n        appearance: 'none', \n        background: 'transparent', \n        padding: 0, \n        margin: 0, \n        border: 0, \n        outline: 0, \n        height: 40, \n        width: 40, \n        borderRadius: 2, \n        textDecoration: 'none', \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        ':hover': {\n            backgroundColor: c('hover')\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\features\\form\\Form.tsx.ittf\n*/\nimport * as React from 'react';\nimport {Register, Unregister, Update, FormValidation} from './types';\n\nexport type FormProps = { \n    onSubmit: () => void;\n    children: React.ReactNode;\n};\ntype State = { \n    isValid: boolean;\n};\n\nexport const FormValidationContext = React.createContext<FormValidation | undefined>(undefined);\n\nexport default class Form extends React.Component<FormProps, State> {\n        state = {\n            isValid: false\n        }\n        ;\n        componentDidMount() {\n            this._update();\n        }\n        _key = 0;\n        _inputs: Array<{ \n            key: number;\n            validate: () => Error | null;\n            focus: () => void;\n        }> = [];\n        _register: Register = ({\n            validate, \n            focus\n         }) => {\n        \n            const key = this._key++;\n            this._inputs.push({\n                key, \n                validate, \n                focus\n             })\n            return key;\n        }\n        ;\n        _unregister: Unregister = (key: number) => \n        \n            this._inputs = this._inputs.filter(it => \n            \n                it.key !== key\n            )\n        \n        ;\n        _update: Update = () => \n        \n            this.setState({\n                isValid: this._inputs.every(it => \n                \n                    !it.validate()\n                )\n             })\n        ;\n        _handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        \n            e.preventDefault();\n            console.log('features.form._handleSubmit', __filename);\n            for (const input of this._inputs) {\n                console.log('features.form._handleSubmit.input.validate()', input.validate(), __filename);\n                if (input.validate()) {\n                    input.focus();\n                    return ;\n                }\n            }\n            console.log('features.form._handleSubmit.onSubmit()', __filename);\n            this.props.onSubmit();\n        }\n        ;\n        render() {\n            return  (\n                <FormValidationContext.Provider\n                 value={{\n                        register: this._register, \n                        unregister: this._unregister, \n                        update: this._update, \n                        valid: this.state.isValid\n                     }}>\n                    <form\n                     onSubmit={this._handleSubmit}>\n                        {this.props.children}\n                    </form>\n                </FormValidationContext.Provider>\n                )\n            ;\n        }\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\features\\form\\withStatus.tsx.ittf\n*/\nimport * as React from 'react';\nimport {FormValidationContext} from './Form';\nimport {$Subtract} from '../../types';\n\n// The property ( 'disabled' ) is injected in the component\n// enhanced by withStatus ( should be 'withEnabled' ).\n// The 'disabled' status is inferred from the FormValidationContext.Consumer.\ntype InjectedProps = { \n    disabled: boolean | undefined;\n};\n\nexport default function withStatus<P extends InjectedProps>(Comp: React.ComponentType<P>):  React.ComponentType<$Subtract<P, InjectedProps>> {\n    \n        function withStatusFn(props: any) {\n        \n            return  (\n                <FormValidationContext.Consumer\n                >\n                    {\n                        (value: { \n                            valid: boolean;\n                        } | undefined = {\n                            valid: true\n                         }) => \n                        \n                             (\n                            <Comp\n                             disabled={!value.valid} {...props} />\n                            )\n                        \n                        \n                    }\n                </FormValidationContext.Consumer>\n                )\n            ;\n        }\n        withStatusFn.displayName = `withValidation(${Comp.displayName || Comp.name})`;\n        return withStatusFn;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\features\\form\\withValidation.tsx.ittf\n*/\nimport * as React from 'react';\nimport {$Subtract} from '../../types';\nimport {FormValidationContext} from './Form';\nimport {FormValidation} from './types';\ntype ExternalProps = { \n    value: any;\n    validate: (value: any) => Error | null;\n    helperText?: string;\n};\ntype Props = ExternalProps & { \n    validation: FormValidation;\n};\ntype InjectedProps = { \n    error: Error | null;\n};\ntype State = { \n    initial: boolean;\n    error: Error | null;\n    value: any;\n};\nexport default function withValidation<P extends InjectedProps>(Comp: React.ComponentType<P>):  React.ComponentType<$Subtract<P, InjectedProps> & ExternalProps> {\n    \n        class EnhancedComponent extends React.Component<Props, State> {\n            static displayName = `withValidation(${Comp.displayName ?? Comp.name})`;\n            static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n                const initial = prevState.value !== nextProps.value ? false : prevState.initial;\n                return {\n                        initial, \n                        error: initial ? null : nextProps.validate ? nextProps.validate(nextProps.value) : null, \n                        value: nextProps.value\n                     };\n            }\n            state = {\n                initial: true, \n                error: null, \n                value: this.props.value\n            }\n            ;\n            _key: number = 0;\n            _root = React.createRef<any>();\n            componentDidMount() {\n                this._key = this.props.validation.register({\n                    validate: this._validate, \n                    focus: this._focus\n                 })\n                ;\n            }\n            componentDidUpdate(prevProps: Props) {\n                if (prevProps.value !== this.props.value) {\n                    this.props.validation.update();\n                }\n            }\n            componentWillUnmount() {\n                this.props.validation.unregister(this._key);\n            }\n            _validate = () => \n                this.props.validate(this.props.value);\n            _focus = () => {\n                this._root.current?.focus?.();\n                if (this.state.initial) {\n                    this.setState({\n                        initial: false, \n                        error: this.props.validate(this.props.value)\n                     })\n                }\n            };\n            render() {\n                \n                // @ts-ignore\n                const { helperText,  ...other  } = this.props; \n                \n                // @ts-ignore\n                return  ( <Comp \n                        ref={this._root}\n                        error={this.state.error}\n                        \n                        // @ts-ignore\n                        helperText={this.state.error ? this.state.error.message : helperText}\n                        {...other}\n                     />\n                    )\n                ;\n                \n            }\n        }\n        return (props) =>  \n                 (\n                <FormValidationContext.Consumer\n                >\n                    {\n                        (value: any) => {\n                        \n                            return  (\n                                <EnhancedComponent\n                                 validation={value} {...props} />\n                                )\n                            ;\n                        }\n                        \n                    }\n                </FormValidationContext.Consumer>\n                )\n            \n        ;\n        \n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\features\\form\\EditorForm.tsx.ittf\n*/\nimport * as React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport {withStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport classnames from 'classnames';\nimport Form from './Form';\nimport withStatus from './withStatus';\nimport withValidation from './withValidation';\nimport {ThemeName, withThemeName} from '../preferences';\nimport LargeInput from '../../components/widgets/LargeInput';\nimport {c} from '../../components/ThemeProvider';\nimport {FormField} from './types';\n\nfunction validationOk(value: string):  Error | null {\n\n    return null;\n}\n\nexport type EditFormProps = { \n    visible: boolean;\n    title: string;\n    action: string;\n    fields: { \n        [key: string]: FormField;\n    };\n    className?: string;\n    onSubmit: (details: { \n        [key: string]: string;\n    }) => void;\n    onDismiss: () => void;\n};\ntype Props = EditFormProps & { \n    classes: any;\n    theme: ThemeName;\n};\ntype State = { \n    values?: { \n        [key: string]: any;\n    };\n    visible: boolean;\n};\nfunction stateDefaultValues(fields: { \n    [key: string]: FormField;\n}):  { \n    [key: string]: string;\n} {\n\n    const ret: { \n        [key: string]: string;\n    } = {};\n    Object.keys(fields).map(k => \n    \n        ret[k] = fields[k].default\n    )\n    return ret;\n}\nfunction optionsSelected(options: { \n    label: string;\n    value: string;\n}[], value: string):  any {\n\n    const selected = options.find(option => \n    \n        option.value === value\n    );\n    return selected ? selected.value : undefined;\n}\n\n// @ts-ignore\nconst SubmitButton = withStatus(Fab); \n\n// @ts-ignore\nconst ValidatedInput = withValidation(TextField); \nclass EditorForm extends React.Component<Props, State> {\n    static getDerivedStateFromProps(props: Props, state: State) {\n        if (state.visible !== props.visible) {\n            if (props.visible) {\n                return {\n                        visible: props.visible, \n                        values: stateDefaultValues(props.fields)\n                     };\n            }\n            else {\n                return {\n                        visible: props.visible\n                     };\n            }\n        }\n        return null;\n    }\n    state = {\n        visible: this.props.visible, \n        values: stateDefaultValues(this.props.fields)\n    }\n    ;\n    _handleSubmit = () => \n    \n        this.props.onSubmit(this.state.values)\n    ;\n    render() {\n        \n        // console.log('EditForm.state.values', this.state.values);\n        const {\n            classes, \n            visible, \n            title, \n            action, \n            fields, \n            theme, \n            className, \n            onDismiss\n         } = this.props;\n        \n        // console.log('EditForm.state.values', this.state.values);\n        return visible ?  (\n                <div\n                 className={classes.container}>\n                    <div\n                     className={classnames(css(styles.modal, theme === 'dark' ? styles.contentDark : styles.contentLight), className)}>\n                        <div\n                         className={classes.title}>\n                            <Typography\n                             variant=\"h6\">\n                                {title}\n                            </Typography>\n                        </div>\n                        <Form\n                         onSubmit={this._handleSubmit}>\n                            {\n                                Object.keys(fields).map((k, i) => {\n                                \n                                    const field = fields[k];\n                                    const value = this.state.values[k];\n                                    return ((([\n                                            'text', \n                                            'checkbox'\n                                        ].indexOf(field.type)) > -1\n                                        ) ?  (\n                                            <div\n                                             key={i} className={classes.fieldContainer}>\n                                                <ValidatedInput \n                                                    \n                                                    // @ts-ignore\n                                                    autoFocus\n                                                    type={field.type}\n                                                    className={classes.textField}\n                                                    margin=\"normal\"\n                                                    label={field.label}\n                                                    value={value}\n                                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>  \n                                                            this.setState({\n                                                                values: {\n                                                                    ...this.state.values, \n                                                                    [k]: e.target.value\n                                                                 }\n                                                             })\n                                                    }\n                                                    placeholder={field.label}\n                                                    validate={field.onValidate || validationOk}\n                                                 />\n                                            </div>\n                                            )\n                                         : field.type === 'select' ?  (\n                                                <div\n                                                 key={i} className={classes.fieldContainer}>\n                                                    <ValidatedInput \n                                                        \n                                                        // @ts-ignore\n                                                        select\n                                                        className={classes.textField}\n                                                        label={field.label}\n                                                        SelectProps={{ MenuProps: { className: classes.menu  }  }\n                                                        }\n                                                        helperText={field.helperText}\n                                                        margin=\"normal\"\n                                                        value={value}\n                                                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n                                                            \n                                                                // console.log('onChange', k, e.target.value);\n                                                                this.setState({\n                                                                    values: {\n                                                                        ...this.state.values, \n                                                                        [k]: e.target.value\n                                                                     }\n                                                                 })\n                                                        }\n                                                        placeholder={field.label}\n                                                        validate={field.onValidate || validationOk}\n                                                    >\n                                                        {\n                                                            field.options && field.options.map((option) => \n                                                            \n                                                                 (\n                                                                <MenuItem\n                                                                 key={option.value} value={option.value}>\n                                                                    {option.label}\n                                                                </MenuItem>\n                                                                )\n                                                            \n                                                            )\n                                                        }\n                                                    </ValidatedInput>\n                                                </div>\n                                                )\n                                             : null);\n                                }\n                                )\n                            }\n                            <div\n                             className={css(styles.buttons)}>\n                                <div\n                                 className={classes.button}>\n                                    <SubmitButton\n                                    \n                                    // @ts-ignore\n                                     type=\"submit\" color=\"primary\" variant=\"extended\">\n                                        {action}\n                                    </SubmitButton>\n                                </div>\n                                <div\n                                 className={classes.button}>\n                                    <Fab \n                                        \n                                        // @ts-ignore\n                                        type=\"button\"\n                                        color=\"secondary\"\n                                        variant=\"extended\"\n                                        onClick={onDismiss}\n                                    >\n                                        Cancel\n                                    </Fab>\n                                </div>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n                )\n             : null;\n    }\n}\nconst styles = StyleSheet.create({ title: { height: 72,  fontSize: 24,  width: '100%',  lineHeight: '24px',  display: 'flex',  flexShrink: 0,  alignItems: 'center',  justifyContent: 'center',  boxShadow: '0 1px 0 rgba(36, 44, 58, 0.1)'  },  subtitle: { fontSize: 16,  fontWeight: 500,  padding: 0,  lineHeight: '22px',  margin: '16px 0 6px 0'  },  buttons: { margin: '20px 0 0 0',  display: 'flex',  justifyContent: 'space-around'  },  caption: { marginTop: 24,  fontSize: '16px',  lineHeight: '22px',  textAlign: 'center'  },  link: { cursor: 'pointer',  color: c('primary'),  textDecoration: 'underline'  },  modal: { display: 'flex',  flexDirection: 'column',  position: 'relative',  textAlign: 'start',  borderRadius: 4,  boxShadow: '0 1px 4px rgba(36, 44, 58, 0.3)'  },  close: { appearance: 'none',  borderRadius: '1em',  outline: 0,  padding: 0,  position: 'absolute',  right: '-1em',  top: '-1em',  width: '2em',  height: '2em',  background: c('background'),  border: `2px solid ${c('border')}`,  boxShadow: '0 1.5px 3px rgba(0, 0, 0, .16)',  color: 'white',  fontSize: '1em',  fontWeight: 'bold',  textAlign: 'center'  },  contentLight: { backgroundColor: c('content'),  color: c('text')  },  contentDark: { backgroundColor: c('content'),  color: c('text'),  border: `1px solid ${c('border')}`  }  }); \nconst muiStyles = (theme: Theme) => \n\n    createStyles({\n        container: {\n            padding: '20px'\n         }, \n        title: {\n            padding: '10px', \n            boxShadow: '0 1px 0 rgba(36, 44, 58, 0.1)'\n         }, \n        fieldContainer: {\n            padding: '10px'\n         }, \n        button: {\n            padding: '5px'\n         }, \n        textField: {\n            marginLeft: theme.spacing(1), \n            marginRight: theme.spacing(1), \n            width: '100%'\n         }\n     })\n;\n\nexport default withStyles(muiStyles)(withThemeName(EditorForm));\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\LargeInput.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {c} from '../ThemeProvider';\n\nexport type LargeInputProps = { \n    value: string | undefined;\n    disabled?: boolean;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n    name?: string;\n    type?: string;\n    autoFocus?: boolean;\n    error?: Error | null;\n};\n\ntype State = { \n    focused: boolean;\n};\n\nexport class LargeInput extends React.Component<LargeInputProps, State> {\n    state = {\n        focused: true\n    }\n    ;\n    focus() {\n        this._input.current?.focus?.();\n    }\n    _handleFocus = () => \n        this.setState({\n            focused: true\n         });\n    _handleBlur = () => \n        this.setState({\n            focused: false\n         });\n    _input = React.createRef<HTMLInputElement>();\n    render() {\n        return  (\n            <div\n             className={css(styles.container)}>\n                <input \n                    ref={this._input}\n                    autoFocus={this.props.autoFocus}\n                    className={css(styles.input, this.props.error ? styles.error : styles.normal)}\n                    value={this.props.value}\n                    name={this.props.name}\n                    type={this.props.type}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange}\n                    placeholder={this.props.placeholder}\n                    onFocus={this._handleFocus}\n                    onBlur={this._handleBlur}\n                 />\n                {\n                    this.state.focused && this.props.error ?  (\n                        <div\n                         className={css(styles.validation)}>\n                            {this.props.error.message}\n                        </div>\n                        )\n                     : null\n                }\n            </div>\n            )\n        ;\n    }\n}\n\nexport default LargeInput;\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'relative'\n     }, \n    input: {\n        outline: 0, \n        fontSize: 16, \n        borderRadius: 3, \n        padding: '12px 14px 12px 14px', \n        lineHeight: '22px', \n        width: '100%', \n        borderWidth: 1, \n        borderStyle: 'solid', \n        backgroundColor: c('content')\n     }, \n    normal: {\n        borderColor: c('border'), \n        ':focus': {\n            borderColor: c('selected')\n         }\n     }, \n    error: {\n        borderColor: c('error')\n     }, \n    validation: {\n        position: 'absolute', \n        backgroundColor: c('error'), \n        color: c('error-text'), \n        padding: '6px 12px', \n        borderRadius: 3, \n        marginTop: 8, \n        textAlign: 'left', \n        zIndex: 1, \n        ':before': {\n            content: '\"\"', \n            display: 'block', \n            position: 'absolute', \n            bottom: '100%', \n            width: 0, \n            height: 0, \n            borderLeft: '6px solid transparent', \n            borderRight: '6px solid transparent', \n            borderBottom: `6px solid ${c('error')}`\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\LargeTextArea.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport Textarea from 'react-textarea-autosize';\nimport {c} from '../ThemeProvider';\n\nexport type LargeTextAreaProps = { \n    autoFocus?: boolean;\n    value: string | undefined;\n    name?: string;\n    minRows?: number;\n    placeholder?: string;\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n};\n\nexport function LargeTextArea({\n    ...rest\n }: LargeTextAreaProps) {\n\n    return  (\n        <Textarea\n         className={css(styles.input)} {...rest} />\n        )\n    ;\n}\n\nexport default LargeTextArea;\n\nconst styles = StyleSheet.create({\n    input: {\n        outline: 0, \n        fontSize: 16, \n        borderRadius: 3, \n        padding: '12px 14px 12px 14px', \n        lineHeight: '22px', \n        border: `1px solid ${c('border')}`, \n        backgroundColor: c('content'), \n        width: '100%', \n        ':focus': {\n            borderColor: c('selected')\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\Modal.tsx.ittf\n*/\nimport React, {PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\n// see https://mxstbr.blog/2016/11/styled-components-magic-explained/\nimport styled, {keyframes, css} from 'styled-components';\n\nexport interface ModalProps {\n    visible: boolean;\n    onDismiss?: () => void;\n    children?: React.ReactNode;\n}\n\ntype ModalState = { \n    rendered: boolean;\n    initial: boolean;\n};\n\ninterface RootStyleProps {\n    initial: boolean;\n    visible: boolean;\n}\nconst StyledRoot = styled.div<RootStyleProps>`\n    -webkit-font-smoothing: antialiased;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    color: #fff;\n    z-index: 999;\n    transition-property: opacity;\n    transition-duration: 200ms;\n    background-color: ${props => props.initial ? \"rgba(24, 29, 37, 0.8)\" : \"inherit\"};\n    opacity: ${props => props.visible ? \"1\" : \"0\"};\n    pointer-events: ${props => props.visible ? \"auto\" : \"none\"};\n`\nconst StyledContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: -ms-flexbox;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    \n`\n\nexport class Modal extends PureComponent<ModalProps, ModalState> {\n    \n    static getDerivedStateFromProps(props: ModalProps) {\n        return props.visible ? {\n                    rendered: true, \n                    initial: false\n                 } : null;\n    }\n    \n    state = {\n        rendered: this.props.visible, \n        initial: !this.props.visible\n    }\n    ;\n    \n    componentDidMount() {\n        document.body.appendChild(this._container);\n        document.addEventListener('keydown', this._handleKeyDown);\n    }\n    \n    componentDidUpdate(prevProps: ModalProps) {\n        if (this.props.visible !== prevProps.visible) {\n            clearTimeout(this._timer);\n            if (!this.props.visible) {\n                this._timer = setTimeout(() => \n                \n                    this.setState({\n                        rendered: false\n                     })\n                , 300)\n                ;\n            }\n        }\n    }\n    \n    componentWillUnmount() {\n        document.body.removeChild(this._container);\n        document.removeEventListener('keydown', this._handleKeyDown);\n    }\n    \n    _container = document.createElement('div');\n    \n    _content = React.createRef<HTMLDivElement>();\n    \n    _timer: any;\n    \n    _handleDismiss = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (this._content.current && this._content.current !== e.target && this._content.current.contains(e.target as Node)) {\n            return ;\n        }\n        this.props.onDismiss?.();\n    };\n    \n    _handleKeyDown = (e: KeyboardEvent) => {\n        if (e.keyCode === 27 && this.props.visible) {\n            // Esc was pressed\n            e.preventDefault();\n            this.props.onDismiss?.();\n        }\n    };\n    \n    render() {\n        return ReactDOM.createPortal(\n            <StyledRoot\n             initial={this.state.initial} visible={this.props.visible} onClick={this._handleDismiss}>\n                <StyledContent\n                 ref={this._content}>\n                    {\n                        this.state.rendered ? this.props.children : null\n                    }\n                </StyledContent>\n            </StyledRoot>\n            , this._container);\n    }\n}\nexport default Modal;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ModalSheet.tsx.ittf\n*/\nimport React, {FunctionComponent} from 'react';\n// see https://mxstbr.blog/2016/11/styled-components-magic-explained/\nimport styled, {keyframes, css} from 'styled-components';\n\nimport {ThemeProvider, c, s} from '../ThemeProvider';\nimport Modal from './Modal';\n\nexport interface ModalSheetProps {\n    visible: boolean;\n    className?: string;\n    onDismiss?: () => void;\n    children: React.ReactNode;\n}\n\nconst StyledThemeProvider = styled(ThemeProvider)`\n    display: -ms-flexbox;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    position: relative;\n    text-align: center;\n    -webkit-border-radius: 4px;\n    -khtml-border-radius: 4px;\n    -moz-border-radius: 4px;\n    -o-border-radius: 4px;\n    border-radius: 4px;\n    -webkit-box-shadow: ${props => s('popover')};\n    -moz-box-shadow: ${props => s('popover')};\n    -o-box-shadow: ${props => s('popover')};\n    box-shadow: ${props => s('popover')};\n    background-color: ${props => c('content')};\n    color: ${props => c('text')};\n`\nconst StyledClose = styled.button`\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    -webkit-border-radius: 1em;\n    -khtml-border-radius: 1em;\n    -moz-border-radius: 1em;\n    -o-border-radius: 1em;\n    border-radius: 1em;\n    outline: 0;\n    padding: 0;\n    position: absolute;\n    right: -1em;\n    top: -1em;\n    width: 2em;\n    height: 2em;\n    background: ${props => c('text')};\n    border: ${props => \"2px solid \" + c('content')};\n    -webkit-box-shadow: 0 1.5px 3px rgba(0, 0, 0, .16);\n    -moz-box-shadow: 0 1.5px 3px rgba(0, 0, 0, .16);\n    -o-box-shadow: 0 1.5px 3px rgba(0, 0, 0, .16);\n    box-shadow: 0 1.5px 3px rgba(0, 0, 0, .16);\n    color: ${props => c('content')};\n    font-size: 1em;\n    font-weight: bold;\n    text-align: center;\n`\nexport const ModalSheet: FunctionComponent<ModalSheetProps> = ({\n    visible, \n    className, \n    onDismiss, \n    children\n }) => \n\n     (\n    <Modal\n     visible={visible} onDismiss={onDismiss}>\n        <StyledThemeProvider\n         className={className}>\n            {\n                onDismiss ?  (\n                    <StyledClose\n                     onClick={onDismiss} data-test-id=\"modal-close\">\n                        ✕\n                    </StyledClose>\n                    )\n                 : null\n            }\n            {children}\n        </StyledThemeProvider>\n    </Modal>\n    )\n\n;\nexport default ModalSheet;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\ModalDialog.tsx.ittf\n*/\nimport React, {FunctionComponent} from 'react';\n// see https://mxstbr.blog/2016/11/styled-components-magic-explained/\nimport styled, {keyframes, css} from 'styled-components';\n\nimport {ModalSheet} from './ModalSheet';\nimport {c} from '../ThemeProvider';\n\nexport interface ModalDialogProps {\n    visible: boolean;\n    className?: string;\n    onDismiss?: () => void;\n    title?: string;\n    autoSize?: boolean;\n    children: React.ReactNode;\n}\n\ninterface TitleStyleProps {\n    title?: string;\n}\ninterface SheetStyleProps {\n    autoSize?: boolean;\n}\nconst StyledModalSheet = styled(ModalSheet)<SheetStyleProps>`\n    min-width: 360px;\n    min-height: 0;\n    max-width: 420px;\n    max-height: calc(100% - 100px);\n    \n`\nconst StyledTitle = styled.div<TitleStyleProps>`\n    height: 72px;\n    font-size: 24px;\n    width: 100%;\n    line-height: 24px;\n    display: -ms-flexbox;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex-shrink: 0;\n    -ms-flex-negative: 0;\n    flex-shrink: 0;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    border-bottom: ${props => \"1px solid \" + c('border')};\n`\nconst StyledContent = styled.div<TitleStyleProps>`\n    padding: ${props => props.title ? \"16px 24px 24px 24px\" : \"24px\"};\n    overflow: auto;\n`\nexport const ModalDialog: FunctionComponent<ModalDialogProps> = ({\n    visible, \n    className, \n    onDismiss, \n    title, \n    autoSize, \n    children\n }) => \n\n     (\n    <StyledModalSheet \n        autoSize={autoSize}\n        className={className}\n        visible={visible}\n        onDismiss={onDismiss}\n    >\n        {\n            title ?  (\n                <StyledTitle\n                 title={title}>\n                    {title}\n                </StyledTitle>\n                )\n             : null\n        }\n        <StyledContent\n         title={title}>\n            {children}\n        </StyledContent>\n    </StyledModalSheet>\n    )\n\n;\nexport default ModalDialog;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\ModalProductionDetails.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {Form, withStatus, withValidation} from '../../features/form';\nimport {c} from '../ThemeProvider';\nimport {Button} from '../widgets/Button';\nimport LargeInput from '../widgets/LargeInput';\nimport LargeTextArea from '../widgets/LargeTextArea';\nimport {ModalDialog} from '../widgets/ModalDialog';\ntype Props = { \n    visible: boolean;\n    title: string;\n    action: string;\n    onSubmit: (details: { \n        name: string;\n        description: string;\n        mainIttf: string;\n        wizziSchema: string;\n    }) => void;\n    onDismiss: () => void;\n    description: string | undefined;\n    name: string;\n    mainIttf?: string;\n    wizziSchema?: string;\n    isWorking?: boolean;\n};\ntype State = { \n    name: string;\n    description: string;\n    mainIttf: string;\n    wizziSchema: string;\n    visible: boolean;\n};\n\n// @ts-ignore\nconst FormButton = withStatus(Button); \n\n// @ts-ignore\nconst ValidatedInput = withValidation(LargeInput); \nexport default class ModalProductionDetails extends React.Component<Props, State> {\n        static getDerivedStateFromProps(props: Props, state: State) {\n            if (state.visible !== props.visible) {\n                if (props.visible) {\n                    return {\n                            name: props.name || '', \n                            description: props.description ?? '', \n                            mainIttf: props.mainIttf ?? '', \n                            wizziSchema: props.wizziSchema ?? '', \n                            visible: props.visible\n                         };\n                }\n                else {\n                    return {\n                            visible: props.visible\n                         };\n                }\n            }\n            return null;\n        }\n        state = {\n            name: this.props.name || '', \n            description: this.props.description ?? '', \n            mainIttf: this.props.mainIttf ?? '', \n            wizziSchema: this.props.wizziSchema ?? '', \n            visible: this.props.visible\n        }\n        ;\n        _handleSubmit = () => \n            this.props.onSubmit({\n                name: this.state.name, \n                description: this.state.description, \n                mainIttf: this.state.mainIttf, \n                wizziSchema: this.state.wizziSchema\n             });\n        _validateName = (name: string) => \n            name ? /^[a-z_\\-\\.\\/\\d\\s]+$/i.test(name) ? null : new Error('Name can only contain letters, numbers, space, hyphen (-) and underscore (_).') : new Error('Name cannot be empty.');\n        handleChange = (e: React.ChangeEvent<HTMLInputElement>) => \n            this.setState({\n                [e.target.name]: e.target.value\n             });\n        \n        // log 'ModalProductionDetails.state', this.state\n        render() {\n            const {\n                visible, \n                title, \n                onDismiss, \n                isWorking, \n                action\n             } = this.props;\n            return  (\n                <ModalDialog\n                 visible={visible} title={title} onDismiss={onDismiss}>\n                    <Form\n                     onSubmit={this._handleSubmit}>\n                        <h4\n                         className={css(styles.subtitle)}>\n                            Project name\n                        </h4>\n                        <ValidatedInput \n                            name='name'\n                            \n                            // @ts-ignore\n                            autoFocus\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                            placeholder=\"Unnamed Packi\"\n                            validate={this._validateName}\n                         />\n                        <h4\n                         className={css(styles.subtitle)}>\n                            Description\n                        </h4>\n                        <LargeTextArea \n                            name='description'\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                            minRows={4}\n                         />\n                        <h4\n                         className={css(styles.subtitle)}>\n                            Main ittf\n                        </h4>\n                        <LargeInput\n                         name='mainIttf' value={this.state.mainIttf} onChange={this.handleChange} />\n                        <h4\n                         className={css(styles.subtitle)}>\n                            Wizzi schema\n                        </h4>\n                        <LargeInput\n                         name='wizziSchema' value={this.state.wizziSchema} onChange={this.handleChange} />\n                        <div\n                         className={css(styles.buttons)}>\n                            <FormButton \n                                \n                                // @ts-ignore\n                                type=\"submit\"\n                                large\n                                variant=\"primary\"\n                                loading={isWorking}\n                            >\n                                {action}\n                            </FormButton>\n                        </div>\n                    </Form>\n                </ModalDialog>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({ subtitle: { fontSize: 16,  fontWeight: 500,  padding: 0,  lineHeight: '22px',  margin: '16px 0 6px 0'  },  buttons: { margin: '20px 0 0 0'  },  caption: { marginTop: 24,  fontSize: '16px',  lineHeight: '22px',  textAlign: 'center'  },  link: { cursor: 'pointer',  color: c('primary'),  textDecoration: 'underline'  }  }); \n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\EditorToolbar.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {SaveStatus, PackiSaveOptions, PackiProduction} from '../../features/packi';\nimport {usePreferences} from '../../features/preferences';\nimport {WizziIcon} from '../../assets/WizziIcon';\nimport {EditIcon} from '../../assets/EditIcon';\nimport {BrowserIcon} from '../../assets/BrowserIcon';\nimport IconButton from '../widgets/IconButton';\nimport UserMenu from './UserMenu';\nimport {LoggedUser} from '../../features/app';\nimport {Packi} from '../../features/packi';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ModalProductionDetails from './ModalProductionDetails';\nexport type EditorToolbarProps = { \n    name: string;\n    description: string;\n    mainIttf: string;\n    wizziSchema: string;\n    packiProduction: PackiProduction;\n    readOnly: string;\n    createdAt: string | undefined;\n    saveStatus: SaveStatus;\n    isDownloading: boolean;\n    isEditModalVisible: boolean;\n    generatedPreviewURL: string;\n    onSubmitMetadata: (details: { \n        name: string;\n        description: string;\n    }) => void;\n    onShowEditModal: () => void;\n    onDismissEditModal: () => void;\n    onDownloadCode: () => Promise<void>;\n    onPublishAsync: (options?: PackiSaveOptions) => Promise<void>;\n    loggedUser: LoggedUser | undefined;\n    splitViewKind: string;\n    isWizziJobWaiting: boolean;\n    onChangeSplitViewKind: (e: any) => void;\n    onExecuteWizziJob: () => void;\n};\nexport function EditorToolbar(props: EditorToolbarProps) {\n\n    const [preferences] = usePreferences();\n    const {\n        name, \n        description, \n        mainIttf, \n        wizziSchema, \n        packiProduction, \n        readOnly, \n        createdAt, \n        saveStatus, \n        isDownloading, \n        isEditModalVisible, \n        onSubmitMetadata, \n        onShowEditModal, \n        onDismissEditModal, \n        onDownloadCode, \n        onPublishAsync, \n        splitViewKind, \n        onChangeSplitViewKind, \n        loggedUser, \n        isWizziJobWaiting, \n        generatedPreviewURL, \n        onExecuteWizziJob\n     } = props;\n    const {\n        theme\n     } = preferences;\n    const isPublishing = saveStatus === 'publishing';\n    const isPublished = saveStatus === 'published';\n    console.log('EditorToolbar.props', props, mainIttf, wizziSchema, __filename);\n    return  (\n        <div\n         className={css(styles.ve_top_bar)}>\n            <div\n             className={css(styles.ve_top_bar_logo)}>\n                <a\n                 href=\"/\">\n                    <WizziIcon\n                     theme={theme} width=\"150\" height=\"50\" />\n                </a>\n            </div>\n            <div\n             className={css(styles.ve_top_bar_control)}>\n                <div\n                 className={css(styles.ve_top_bar_label)}>\n                    {packiProduction} Production\n                </div>\n                <div\n                 className={css(styles.ve_top_bar_field)}>\n                    <div\n                     className={css(styles.ve_top_bar_field_editor)}>\n                        {name + (readOnly ? ' (generated, readonly)': '')}\n                    </div>\n                    <div\n                     className={css(styles.ve_top_bar_field_button)}>\n                        <IconButton\n                         responsive title=\"Edit production metadata\" onClick={onShowEditModal}>\n                            <EditIcon\n                             theme={theme} width=\"20\" height=\"20\" />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n            <div\n             className={css(styles.ve_top_bar_icons)}>\n                {\n                    packiProduction == 'artifact'\n                     &&  (\n                        <IconButton\n                         responsive title=\"Browse generated\" onClick={() => \n                            \n                                window.open(generatedPreviewURL)\n                        }>\n                            <BrowserIcon\n                             />\n                        </IconButton>\n                        )\n                    \n                }\n                {\n                    packiProduction == 'package'\n                     &&  (\n                        <IconButton\n                         responsive title=\"Generate package\" onClick={onExecuteWizziJob}>\n                            <svg \n                                width=\"20px\"\n                                height=\"18px\"\n                                viewBox=\"0 0 20 18\"\n                                fill=\"none\"\n                            >\n                                <path \n                                    d=\"M13.333 15l5-5-5-5M6.667 5l-5 5 5 5\"\n                                    strokeWidth=\"2\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                 />\n                            </svg>\n                        </IconButton>\n                        )\n                    \n                }\n                <IconButton \n                    responsive\n                    title=\"Download as zip\"\n                    onClick={onDownloadCode}\n                    disabled={isDownloading || isPublishing}\n                >\n                    <svg\n                     width=\"20\" height=\"20\">\n                        <path\n                         d=\"M14.167 10H5.833L10 16.667 14.167 10z\" />\n                        <path\n                         d=\"M2.5 18.333h15M10 10V1.667\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                    </svg>\n                </IconButton>\n                <UserMenu\n                 loggedUser={loggedUser} />\n            </div>\n            <ModalProductionDetails \n                title=\"Edit Production Details\"\n                action=\"Done\"\n                visible={isEditModalVisible}\n                onDismiss={onDismissEditModal}\n                onSubmit={(details) => {\n                    \n                        onSubmitMetadata(details);\n                        onDismissEditModal();\n                    }\n                }\n                description={description}\n                name={name}\n                mainIttf={mainIttf}\n                wizziSchema={wizziSchema}\n             />\n        </div>\n        )\n    ;\n}\nexport default EditorToolbar;\nconst styles = StyleSheet.create({\n    ve_top_bar: {\n        display: \"grid\", \n        gridTemplateColumns: \"1fr 5fr 1fr\", \n        marginBottom: \"20px\", \n        height: \"50px\"\n     }, \n    ve_top_bar_logo: {\n        paddingTop: \"4px\", \n        cursor: \"pointer\"\n     }, \n    ve_top_bar_control: {\n        display: \"grid\", \n        gridTemplateRows: \"0.1fr 1fr\", \n        borderBottom: \"1px solid gray\"\n     }, \n    ve_top_bar_label: {\n        paddingTop: \"2px\", \n        paddingLeft: \"10px\", \n        fontSize: \"12px\", \n        fontWeight: \"900\"\n     }, \n    ve_top_bar_field: {\n        display: \"grid\", \n        gridTemplateColumns: \"5fr 1fr\"\n     }, \n    ve_top_bar_field_editor: {\n        paddingLeft: \"10px\", \n        fontSize: \"24px\"\n     }, \n    ve_top_bar_field_button: {\n        \n     }, \n    ve_top_bar_icons: {\n        paddingTop: \"4px\", \n        display: \"flex\", \n        flexDirection: \"row\", \n        alignItems: \"center\", \n        justifyItems: \"center\"\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\Toast.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider, c, s} from '../ThemeProvider';\n\nexport type ToastProps = { \n    label: React.ReactNode;\n    timeout?: number;\n    persistent?: boolean;\n    actions: { \n        label: string;\n        action?: () => void;\n        primary?: boolean;\n    }[];\n    onDismiss?: () => void;\n};\n\ntype State = { \n    dismissing: boolean;\n};\n\nconst TOAST_GROUP_ID = '__toast_group__container';\n\nexport class Toast extends React.Component<ToastProps, State> {\n    static defaultProps = {\n        timeout: 5000\n    }\n    ;\n    state = {\n        dismissing: false\n    }\n    ;\n    componentDidMount() {\n        let group = document.getElementById(TOAST_GROUP_ID);\n        if (!group) {\n            group = document.createElement('div');\n            group.id = TOAST_GROUP_ID;\n            Object.assign(group.style, {\n                position: 'fixed', \n                bottom: '3em', \n                left: '1em', \n                zIndex: '999'\n             })\n            document.body.appendChild(group);\n        }\n        group.appendChild(this._container);\n        if (this.props.persistent) {\n            this._scheduleDismiss();\n        }\n    }\n    componentWillUnmount() {\n        const group = document.getElementById(TOAST_GROUP_ID);\n        if (group) {\n            group.removeChild(this._container);\n        }\n        this._cancelDismiss();\n    }\n    _container = document.createElement('div');\n    _timer: any;\n    _scheduleDismiss = () => \n        this._timer = setTimeout(this._handleDismiss, this.props.timeout);\n    _cancelDismiss = () => {\n        this.setState({\n            dismissing: false\n         })\n        clearTimeout(this._timer);\n    };\n    _handleDismiss = () => {\n        this.setState({\n            dismissing: true\n         })\n        this._timer = setTimeout(() => \n        \n            this.props.onDismiss?.()\n        , 400)\n        ;\n    };\n    render() {\n        const props = this.props.persistent ? {} : {\n                onMouseEnter: this._cancelDismiss, \n                onMouseLeave: this._scheduleDismiss\n             };\n        return ReactDOM.createPortal(\n            <ThemeProvider\n             {...props} style={styles.toast} className={css(this.state.dismissing ? styles.dismissing : styles.appearing)}>\n                <div\n                 className={css(styles.label)}>\n                    {this.props.label}\n                </div>\n                {\n                    this.props.actions.map((action) => \n                    \n                         (\n                        <button\n                         key={action.label} className={css(styles.button)} onClick={action.action ?? this._handleDismiss}>\n                            {action.label}\n                        </button>\n                        )\n                    \n                    )\n                }\n            </ThemeProvider>\n            , this._container);\n    }\n}\n\nconst fadeIn = {\n    from: {\n        opacity: 0\n     }, \n    to: {\n        opacity: 1\n     }\n };\n\nconst fadeOut = {\n    from: {\n        opacity: 1\n     }, \n    to: {\n        opacity: 0\n     }\n };\n\nexport default Toast;\n\nconst styles = StyleSheet.create({\n    toast: {\n        display: 'flex', \n        margin: '1em', \n        padding: '0 .75em', \n        borderRadius: 3, \n        border: `1px solid ${c('border')}`, \n        boxShadow: s('popover'), \n        minWidth: '27em', \n        whiteSpace: 'nowrap', \n        backgroundColor: c('content'), \n        color: c('text')\n     }, \n    appearing: {\n        animationName: fadeIn, \n        animationDuration: '250ms', \n        opacity: 1\n     }, \n    dismissing: {\n        animationName: fadeOut, \n        animationDuration: '400ms', \n        opacity: 0\n     }, \n    label: {\n        flex: 1, \n        minWidth: 0, \n        overflow: 'hidden', \n        textOverflow: 'ellipsis', \n        padding: '.75em'\n     }, \n    button: {\n        appearance: 'none', \n        background: 'transparent', \n        color: c('primary'), \n        border: '0', \n        textTransform: 'uppercase', \n        fontSize: '.9em', \n        fontWeight: 'bold', \n        padding: '1em', \n        outline: 0, \n        ':hover': {\n            backgroundColor: c('hover')\n         }, \n        ':active': {\n            backgroundColor: c('hover')\n         }\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListEntryDropTarget.tsx.ittf\n*/\nimport * as React from 'react';\nimport {FileSystemEntry, getUniquePath, dragEventIncludes} from '../../features/file';\nimport {withThemeName, ThemeName} from '../../features/preferences';\nimport {lastDraggedEntry} from './FileListEntryBase';\ntype Props = { \n    entry?: FileSystemEntry;\n    rest: FileSystemEntry[];\n    onExpand?: (path: string, expand?: boolean) => void;\n    onRename: (oldPath: string, newPath: string) => void;\n    className?: string;\n    theme: ThemeName;\n    children?: any;\n};\n\nclass FileListEntryDropTarget extends React.PureComponent<Props> {\n    componentDidMount() {\n        const container = this._container.current;\n        if (container) {\n            // We don't use react's event system since we need to stop the events from bubbling up\n            container.addEventListener('dragover', this._handleDragOver);\n            container.addEventListener('dragleave', this._handleDragLeave);\n            container.addEventListener('dragend', this._handleDragLeave);\n            container.addEventListener('drop', this._handleDrop);\n        }\n    }\n    componentWillUnmount() {\n        const container = this._container.current;\n        if (container) {\n            container.removeEventListener('dragover', this._handleDragOver);\n            container.removeEventListener('dragleave', this._handleDragLeave);\n            container.removeEventListener('dragend', this._handleDragLeave);\n            container.removeEventListener('drop', this._handleDrop);\n        }\n    }\n    _getParentPath = (path: string) => \n        (path.includes('/') ? path.replace(/\\/[^/]+$/, '') : null);\n    _isDirectChild = (path: string) => {\n        if (this.props.entry && this.props.entry.item.path === path) {\n            return true;\n        }\n        const parent = this._getParentPath(path);\n        if (this.props.entry && parent) {\n            return this.props.entry.item.path === parent;\n        }\n        return this.props.entry == null && parent == null;\n    };\n    _handleDragLeave = (e: any) => {\n        e.currentTarget.style.backgroundColor = null;\n        clearTimeout(this._dragTimer);\n        this._dragTimer = null;\n    };\n    _handleDragOver = (e: any) => {\n        const entry = lastDraggedEntry;\n        if (!dragEventIncludes(e, 'application/json') || (this.props.entry && this.props.entry.item.type !== 'folder') || !entry) {\n            return ;\n        }\n        if (entry.item.type !== 'file' && entry.item.type !== 'folder') {\n            return ;\n        }\n        e.stopPropagation();\n        if (this._isDirectChild(entry.item.path)) {\n            return ;\n        }\n        e.preventDefault();\n        e.currentTarget.style.backgroundColor = this.props.theme === 'dark' ? 'rgba(255, 255, 255, .1)' : 'rgba(0, 0, 0, .1)';\n        if (this._dragTimer) {\n            return ;\n        }\n        this._dragTimer = setTimeout(() => {\n        \n            if (this.props.entry && !this.props.entry.state.isExpanded && this.props.onExpand) {\n                this.props.onExpand(this.props.entry.item.path);\n            }\n        }\n        , 500)\n        ;\n    };\n    _dragTimer: any;\n    _handleDrop = (e: any) => {\n        e.currentTarget.style.backgroundColor = null;\n        if (!dragEventIncludes(e, 'application/json') || (this.props.entry && this.props.entry.item.type !== 'folder')) {\n            return ;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        try {\n            const data = e.dataTransfer.getData('application/json');\n            const entry = JSON.parse(data);\n            if ((entry.item.type !== 'file' && entry.item.type !== 'folder') || this._isDirectChild(entry.item.path)) {\n                return ;\n            }\n            const name = entry.item.path.split('/').pop();\n            this.props.onRename(entry.item.path, getUniquePath(this.props.rest.map(e => \n            \n                e.item.path\n            ), this.props.entry ? this.props.entry.item.path + '/' + name : name))\n        } \n        catch (e) {\n        } \n    };\n    _container = React.createRef<HTMLDivElement>();\n    render() {\n        \n        // eslint-disable-next-line no-unused-vars\n        const {\n            entry, \n            rest, \n            onExpand, \n            onRename, \n            theme, \n            ...restProps\n         } = this.props;\n        return  (\n            <div\n             {...restProps} ref={this._container} />\n            )\n        ;\n    }\n}\nexport default withThemeName(FileListEntryDropTarget);\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListEntryBase.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport ContextMenu, {Action} from '../widgets/ContextMenu';\nimport {isKeyCombo} from '../widgets/KeybindingsManager';\nimport FileListEntryDropTarget from './FileListEntryDropTarget';\nimport {FileSystemEntry} from '../../features/file';\ntype Props = { \n    entry: FileSystemEntry;\n    rest: FileSystemEntry[];\n    onOpen: (path: string) => void;\n    onFocus: (path: string) => void;\n    onRename: (oldPath: string, newPath: string) => void;\n    onExpand?: (path: string, expand?: boolean) => void;\n    renderMenuIcon: () => React.ReactNode;\n    renderItem: () => React.ReactNode;\n    renderTree?: () => React.ReactNode;\n    actions: (Action | undefined)[];\n    draggable?: boolean;\n    readOnly: boolean;\n    theme: string | undefined;\n};\ntype State = { \n    menu: { \n        pageX: number;\n        pageY: number;\n    } | null;\n    isHovered: boolean;\n};\nexport let lastDraggedEntry: FileSystemEntry | null;\nexport default class FileListEntry extends React.Component<Props, State> {\n        static defaultProps = {\n            draggable: true\n        }\n        ;\n        state = {\n            menu: null, \n            isHovered: false\n        }\n        ;\n        componentDidMount() {\n            document.addEventListener('click', this._handleDocumentClick);\n            document.addEventListener('contextmenu', this._handleDocumentContextMenu);\n        }\n        componentWillUnmount() {\n            document.removeEventListener('click', this._handleDocumentClick);\n            document.removeEventListener('contextmenu', this._handleDocumentContextMenu);\n        }\n        _handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n            if (((event.target as HTMLDivElement).tagName) === 'INPUT') {\n                return ;\n            }\n            this.props.onOpen(this.props.entry.item.path);\n        };\n        _handleMouseEnter = () => \n            this.setState({\n                isHovered: true\n             });\n        _handleMouseLeave = () => \n            this.setState({\n                isHovered: false\n             });\n        _handleMouseDown = () => \n            this._click = true;\n        _handleFocus = () => {\n            if (this._click) {\n                \n                // The focus was triggered by a click event\n                \n                // Ignore it to avoid double handling\n                this._click = false;\n                return ;\n            }\n            this.props.onFocus(this.props.entry.item.path);\n        };\n        _handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n            if (((event.target as HTMLDivElement).tagName) === 'INPUT') {\n                return ;\n            }\n            const bindings = this.props.actions.filter(action => \n            \n                action?.combo ? isKeyCombo(event as any, action.combo) : false\n            );\n            if (bindings.length) {\n                event.preventDefault();\n                bindings.forEach(binding => \n                \n                    binding?.handler?.()\n                )\n            }\n        };\n        _hideContextMenu = () => \n            this.setState({\n                menu: null\n             });\n        _showContextMenu = (e: MouseEvent) => \n            this.setState({\n                menu: {\n                    pageX: e.pageX, \n                    pageY: e.pageY\n                 }\n             });\n        _handleDocumentClick = (e: MouseEvent) => {\n            if (this.state.menu) {\n                if (this._menu.current && e.target !== this._menu.current && !this._menu.current.contains(e.target as HTMLElement)) {\n                    this._hideContextMenu();\n                }\n            }\n            else {\n                if (this._more.current && (e.target === this._more.current || this._more.current.contains(e.target as Node))) {\n                    if (this.state.menu) {\n                        this._hideContextMenu();\n                    }\n                    else {\n                        this._showContextMenu(e);\n                    }\n                }\n            }\n        };\n        _handleDocumentContextMenu = (e: MouseEvent) => {\n            if (e.target === this._item.current || this._item.current?.contains?.(e.target as Node)) {\n                e.preventDefault();\n                this._showContextMenu(e);\n            }\n            else {\n                if (this.state.menu) {\n                    this._hideContextMenu();\n                }\n            }\n        };\n        _handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\n            e.dataTransfer.effectAllowed = 'move';\n            e.dataTransfer.setData('application/json', JSON.stringify(this.props.entry));\n            lastDraggedEntry = this.props.entry;\n        };\n        _handleDragEnd = () => \n            lastDraggedEntry = null;\n        _click: boolean = false;\n        _item = React.createRef<HTMLDivElement>();\n        _more = React.createRef<HTMLButtonElement>();\n        _menu = React.createRef<HTMLUListElement>();\n        render() {\n            const {\n                entry, \n                rest, \n                draggable, \n                readOnly, \n                onRename, \n                onExpand, \n                theme, \n                actions\n             } = this.props;\n            const {\n                menu, \n                isHovered\n             } = this.state;\n            return  (\n                <FileListEntryDropTarget \n                    entry={entry}\n                    rest={rest}\n                    onRename={onRename}\n                    onExpand={onExpand}\n                >\n                    <div \n                        ref={this._item}\n                        draggable={draggable}\n                        onDragStart={this._handleDragStart}\n                        onDragEnd={this._handleDragEnd}\n                        tabIndex={0}\n                        className={css(styles.entry)}\n                        onClick={this._handleClick}\n                        onMouseEnter={this._handleMouseEnter}\n                        onMouseLeave={this._handleMouseLeave}\n                        onMouseDown={this._handleMouseDown}\n                        onFocus={this._handleFocus}\n                        onKeyDown={this._handleKeyDown}\n                    >\n                        {this.props.renderItem()}\n                    </div>\n                    <div\n                     className={css(styles.highlight, theme === 'dark' ? styles.highlightDark : styles.highlightLight, entry.state.isSelected ? styles.highlightActive : null)} />\n                    {\n                        !readOnly\n                         &&  (\n                            <ContextMenu \n                                ref={this._menu}\n                                visible={Boolean(menu)}\n                                position={menu}\n                                actions={actions}\n                                onHide={this._hideContextMenu}\n                             />\n                            )\n                        \n                    }\n                    <button\n                     ref={this._more} tabIndex={-1} className={css(styles.more, isHovered || menu ? styles.moreVisible : styles.moreInvisible)}>\n                        {this.props.renderMenuIcon()}\n                    </button>\n                    {this.props.renderTree?.()}\n                </FileListEntryDropTarget>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    entry: {\n        position: 'relative', \n        display: 'inline-block', \n        outline: 0, \n        padding: '1px 16px', \n        width: '100%', \n        cursor: 'pointer', \n        zIndex: 1, \n        whiteSpace: 'nowrap'\n     }, \n    highlight: {\n        content: '\"\"', \n        display: 'inline-block', \n        height: 30, \n        position: 'absolute', \n        left: 0, \n        right: 0, \n        opacity: 0, \n        zIndex: 1, \n        pointerEvents: 'none'\n     }, \n    highlightLight: {\n        backgroundColor: 'rgba(0, 0, 0, .04)'\n     }, \n    highlightDark: {\n        backgroundColor: 'rgba(255, 255, 255, .04)'\n     }, \n    highlightActive: {\n        opacity: 1\n     }, \n    more: {\n        position: 'absolute', \n        left: -8, \n        border: 0, \n        outline: 0, \n        background: 'none', \n        height: 30, \n        zIndex: 2, \n        padding: '7px 12px', \n        textAlign: 'right', \n        ':hover': {\n            opacity: 1\n         }\n     }, \n    moreInvisible: {\n        opacity: 0\n     }, \n    moreVisible: {\n        opacity: 1\n     }, \n    icon: {\n        fill: 'currentColor', \n        height: 16, \n        width: 16\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListEntryIcon.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {FileSystemEntry, isEntryPoint, isPackageJson, isImage, isTest} from '../../features/file';\nimport {c} from '../ThemeProvider';\ntype Props = { \n    entry: FileSystemEntry;\n};\nexport default function FileListEntryIcon({\n        entry\n     }: Props) {\n    \n        let icon;\n        if (entry.state.isLoading) {\n            return  (\n                <div\n                 className={css(styles.spinner)} />\n                )\n            ;\n        }\n        else {\n            if (isEntryPoint(entry.item.path)) {\n                icon =  (\n                <g\n                >\n                    <path\n                     d=\"M7.46487122,14 C7.80521143,13.4116533 8,12.7285743 8,12 C8,9.790861 6.209139,8 4,8 C3.65470043,8 3.31961992,8.043753 3,8.12601749 L3,2 L13,2 L13,14 L7.46487122,14 Z M9,2 L13,6 L13,2 L9,2 Z M9,6 L9,2 L8,2 L8,7 L13,7 L13,6 L9,6 Z\" />\n                    <circle\n                     cx=\"4\" cy=\"12\" r=\"3\" />\n                </g>\n                )\n                ;\n            }\n            else {\n                if (isPackageJson(entry.item.path)) {\n                    icon =  (\n                    <path\n                     d=\"M2,5.09257608 L7.47329684,8.31213064 L7.47329684,14.7092088 L2,11.5325867 L2,5.09257608 Z M2.49245524,4.22207437 L7.97432798,1 L13.506361,4.2238509 L7.92838937,7.41965108 L2.49245524,4.22207437 Z M14,5.09352708 L14,11.5325867 L8.47329684,14.7128733 L8.47329684,8.25995389 L14,5.09352708 Z\" />\n                    )\n                    ;\n                }\n                else {\n                    if (entry.item.type === 'folder') {\n                        if (entry.state.isExpanded) {\n                            icon =  (\n                            <g\n                            >\n                                <path\n                                 d=\"M7.5,5 L2,5 L2,13 L7.75,13 L14,13 L14,4 L15,4 L15,14 L1,14 L1,4 L6.5,4 L5.5,5 L7.5,5 L7.5,4.5 L7.5,5 Z M14,4 L14,3 L7.5,3 L7.5,3.5 L7.5,3 L7,3.5 L7,2 L15,2 L15,4 L14,4 Z M6.5,4 L5,4 L7,2 L7,3.5 L6.5,4 Z\" />\n                                <polygon\n                                 points=\"0 7 13 7 14 14 1 14\" />\n                            </g>\n                            )\n                            ;\n                        }\n                        else {\n                            icon =  (\n                            <path\n                             d=\"M7.25,4 L7.5,4 L7.5,3 L7,3.5 L7,2 L15,2 L15,4 L7.25,4 Z M6.75,4 L5,4 L7,2 L7,3.5 L6.5,4 L6.75,4 Z M1,4 L15,4 L15,14 L1,14 L1,4 Z M7.5,3 L7.5,4 L14,4 L14,3 L7.5,3 Z\" />\n                            )\n                            ;\n                        }\n                    }\n                    else {\n                        if (isImage(entry.item.path)) {\n                            icon =  (\n                            <g\n                            >\n                                <circle\n                                 cx=\"5\" cy=\"5\" r=\"1\" />\n                                <polygon\n                                 points=\"5.71428571 8.41176471 8 11.2352941 10.8571429 7 14 13 2 13\" />\n                                <path\n                                 d=\"M3,3 L3,13 L13,13 L13,3 L3,3 Z M3,2 L13,2 C13.5522847,2 14,2.44771525 14,3 L14,13 C14,13.5522847 13.5522847,14 13,14 L3,14 C2.44771525,14 2,13.5522847 2,13 L2,3 C2,2.44771525 2.44771525,2 3,2 Z\" />\n                            </g>\n                            )\n                            ;\n                        }\n                        else {\n                            icon =  (\n                            <path\n                             d=\"M3,2 L13,2 L13,14 L3,14 L3,2 Z M9,2 L13,6 L13,2 L9,2 Z M9,6 L9,2 L8,2 L8,7 L13,7 L13,6 L9,6 Z\" />\n                            )\n                            ;\n                        }\n                    }\n                }\n            }\n        }\n        return  (\n            <svg\n             className={css(styles.icon, isTest(entry.item.path) ? styles.test : undefined, entry.state.isError ? styles.error : undefined)} viewBox=\"0 0 16 16\">\n                {icon}\n            </svg>\n            )\n        ;\n    }\nconst spin = {\n    from: {\n        transform: 'rotate(0deg)'\n     }, \n    to: {\n        transform: 'rotate(360deg)'\n     }\n };\nconst styles = StyleSheet.create({\n    icon: {\n        height: 16, \n        width: 16, \n        fill: 'currentColor', \n        verticalAlign: 'middle', \n        opacity: 0.7\n     }, \n    error: {\n        fill: c('error')\n     }, \n    test: {\n        color: c('soft')\n     }, \n    spinner: {\n        display: 'inline-block', \n        verticalAlign: 'middle', \n        borderStyle: 'solid', \n        borderTopColor: 'currentColor', \n        borderLeftColor: 'currentColor', \n        borderBottomColor: 'currentColor', \n        borderRightColor: 'rgba(0, 0, 0, .16)', \n        borderWidth: 1, \n        height: 12, \n        width: 12, \n        borderRadius: '50%', \n        margin: '2px 2px', \n        animationDuration: '1s', \n        animationName: [\n            spin\n        ], \n        animationIterationCount: 'infinite', \n        animationTimingFunction: 'linear'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListEntry.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {FileSystemEntry, isEntryPoint, getParentPath, isTest} from '../../features/file';\nimport {ThemeName} from '../../features/preferences';\nimport {c} from '../ThemeProvider';\nimport {Action} from '../widgets/ContextMenu';\nimport {KeyMap} from '../widgets/KeybindingsManager';\nimport FileListChildren from './FileListChildren';\nimport FileListEntryBase from './FileListEntryBase';\nimport FileListEntryIcon from './FileListEntryIcon';\nexport type FileListEntryProps = { \n    entry: FileSystemEntry;\n    rest: FileSystemEntry[];\n    readOnly: boolean;\n    clipboard: FileSystemEntry[];\n    onOpen: (path: string) => void;\n    onFocus: (path: string) => void;\n    onSelect: (path: string) => void;\n    onDelete: (path: string) => void;\n    onCopy: (path: string) => void;\n    onExpand: (path: string, expand?: boolean) => void;\n    onRename: (oldPath: string, newPath: string) => void;\n    onCreateFile: (path: string | undefined) => void;\n    onCreateFolder: (path: string | undefined) => void;\n    onPaste: (path: string | undefined, entry: FileSystemEntry) => void;\n    onClearClipboard: () => void;\n    getAdjacentEntries: () => FileSystemEntry[];\n    theme: ThemeName;\n};\ntype State = { \n    name: string;\n    error: Error | null;\n    isRenaming: boolean;\n};\nconst toggleTSExt = (name: string) => \n\n    name.replace(/(\\.[^.]+$)/, (_, $1) => \n    \n        ($1 === '.js' ? '.tsx' : '.js')\n    )\n;\nexport class FileListEntry extends React.Component<FileListEntryProps, State> {\n    constructor(props: FileListEntryProps) {\n        super(props);\n        const {\n            entry\n         } = props;\n        this.state = {\n            name: entry.state.isCreating ? entry.item.path.split('/').pop() ?? '' : '', \n            error: null, \n            isRenaming: !entry.item.asset && !!entry.state.isCreating\n         };\n    }\n    state: State;\n    componentDidMount() {\n        if (this.props.entry.state.isCreating) {\n            this.props.onOpen(this.props.entry.item.path);\n        }\n    }\n    _handleToggleExpand = () => \n        this.props.onExpand(this.props.entry.item.path, !this.props.entry.state.isExpanded);\n    _handleToggleRename = () => {\n        if (this.state.isRenaming && !this.state.error) {\n            this._handleNameChange(this.state.name);\n        }\n        this.setState((state, props) => \n        \n            state.isRenaming ? {\n                    isRenaming: false, \n                    name: '', \n                    error: null\n                 } : {\n                    isRenaming: true, \n                    name: props.entry.item.path.split('/').pop() ?? '', \n                    error: null\n                 }\n        )\n    };\n    _handleDelete = () => \n        this.props.onDelete(this.props.entry.item.path);\n    _handleNameChange = (name: string) => {\n        const {\n            entry\n         } = this.props;\n        if (name && (name !== entry.item.path.split('/').pop() || entry.state.isCreating)) {\n            const newPath = entry.item.path.replace(/[^/]+$/, name);\n            this.props.onRename(entry.item.path, newPath);\n        }\n    };\n    _handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const name = e.target.value;\n        this.setState({\n            name, \n            error: this._validateName(name)\n         })\n    };\n    _validateName = (name: string) => {\n        if (name === this.props.entry.item.path.split('/').pop()) {\n            return null;\n        }\n        const invalidCharacters = [\n            '\\0', \n            '\\\\', \n            ':', \n            '*', \n            '?', \n            '\"', \n            '<', \n            '>', \n            '|'\n        ];\n        const usedCharacters = invalidCharacters.filter(c => \n        \n            name.includes(c)\n        );\n        if (usedCharacters.length) {\n            return new Error(`${\n                usedCharacters.length === 1\n                 ? `${usedCharacters[0]} is`\n                 : `${usedCharacters.join(', ')} are`}\n                 not allowed`);\n        }\n        const adjacentEntries = this.props.getAdjacentEntries();\n        if (adjacentEntries.some(e => \n        \n            (e.item.path.split('/').pop() ?? '').toLowerCase() === name.toLowerCase()\n        )) {\n            return new Error(`Another entry already exists with same name`);\n        }\n        if (isEntryPoint(name)) {\n            return new Error(`Cannot name a new file as ${name}`);\n        }\n        return null;\n    };\n    _handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        const input = e.target;\n        if (input instanceof HTMLInputElement) {\n            input.select();\n        }\n    };\n    _handleInputBlur = () => {\n        if (!this.state.error) {\n            this._handleNameChange(this.state.name);\n        }\n        this.setState({\n            isRenaming: false, \n            name: '', \n            error: null\n         })\n    };\n    _handleInputKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        switch (e.keyCode) {\n            case KeyMap.Enter: {\n                this._handleToggleRename();\n                break;\n            }\n            case KeyMap.Escape: {\n                this._handleInputBlur();\n                break;\n            }\n        }\n    };\n    _handleCreateFile = () => \n        this.props.onCreateFile(this.props.entry.item.path);\n    _handleCreateFolder = () => \n        this.props.onCreateFolder(this.props.entry.item.path);\n    _handleCopy = () => \n        this.props.onCopy(this.props.entry.item.path);\n    _handlePaste = () => {\n        const {\n            entry, \n            clipboard, \n            onPaste, \n            onClearClipboard\n         } = this.props;\n        clipboard.forEach(e => \n        \n            onPaste(entry.item.path, e)\n        )\n        onClearClipboard();\n    };\n    _handleDuplicate = () => {\n        const {\n            entry, \n            onPaste\n         } = this.props;\n        const path = entry.item.path.includes('/') ? entry.item.type === 'folder' ? getParentPath(entry.item.path) : entry.item.path : undefined;\n        onPaste(path, entry);\n    };\n    _handleToggleTSExt = () => {\n        const filepath = this.props.entry.item.path;\n        this.props.onRename(filepath, toggleTSExt(filepath));\n    };\n    _getActions = ():  (Action | undefined)[] => \n        [\n            {\n                label: 'New file', \n                handler: this._handleCreateFile\n             }, \n            {\n                label: 'New folder', \n                handler: this._handleCreateFolder\n             }, \n            this.props.entry.item.type === 'folder' ? {\n                    label: this.props.entry.item.type === 'folder' && this.props.entry.state.isExpanded ? 'Collapse' : 'Expand', \n                    handler: this._handleToggleExpand, \n                    combo: [\n                        KeyMap.Enter\n                    ]\n                 } : undefined, \n            this.props.clipboard.length ? {\n                    label: 'Paste', \n                    handler: this._handlePaste, \n                    combo: [\n                        KeyMap.Meta, \n                        KeyMap.V\n                    ]\n                 } : !this.props.entry.item.virtual ? {\n                        label: 'Copy', \n                        handler: this._handleCopy, \n                        combo: [\n                            KeyMap.Meta, \n                            KeyMap.C\n                        ]\n                     } : undefined, \n            !this.props.entry.item.virtual ? {\n                    label: 'Duplicate', \n                    handler: this._handleDuplicate, \n                    combo: [\n                        KeyMap.Meta, \n                        KeyMap.D\n                    ]\n                 } : undefined, \n            isEntryPoint(this.props.entry.item.path) ? {\n                    label: `Rename to ${toggleTSExt(this.props.entry.item.path)}`, \n                    handler: this._handleToggleTSExt\n                 } : undefined, \n            ...((!isEntryPoint(this.props.entry.item.path) && !this.props.entry.item.virtual ? [\n                        {\n                            label: 'Rename', \n                            handler: this._handleToggleRename, \n                            combo: [\n                                KeyMap.F2\n                            ]\n                         }, \n                        {\n                            label: 'Delete', \n                            handler: this._handleDelete, \n                            combo: [\n                                KeyMap.Delete\n                            ]\n                         }\n                    ] : []))\n            \n        ];\n    _renderItem = () => {\n        const {\n            entry\n         } = this.props;\n        const {\n            isRenaming, \n            name\n         } = this.state;\n        const displayName = isRenaming ? '\\u00A0' : entry.item.path.split('/').pop();\n        return  (\n            <div\n            >\n                {\n                    this.state.error ?  (\n                        <div\n                         className={css(styles.error)}>\n                            {this.state.error.message}\n                        </div>\n                        )\n                     : null\n                }\n                <FileListEntryIcon\n                 entry={entry} />\n                <span\n                 className={css(styles.label, isTest(entry.item.path) ? styles.labelTest : undefined, entry.state.isError ? styles.labelError : undefined)}>\n                    {displayName}\n                </span>\n                {\n                    isRenaming ?  (\n                        <input \n                            autoFocus\n                            type=\"text\"\n                            value={name}\n                            onChange={this._handleInputChange}\n                            onFocus={this._handleInputFocus}\n                            onBlur={this._handleInputBlur}\n                            onKeyUp={this._handleInputKeyUp}\n                            className={css(styles.input)}\n                         />\n                        )\n                     : null\n                }\n            </div>\n            )\n        ;\n    };\n    _renderTree = () => {\n        const {\n            entry, \n            rest, \n            clipboard, \n            readOnly, \n            onCreateFile, \n            onCreateFolder, \n            onOpen, \n            onSelect, \n            onFocus, \n            onPaste, \n            onRename, \n            onExpand, \n            onDelete, \n            onCopy, \n            onClearClipboard, \n            theme\n         } = this.props;\n        return entry.item.type === 'folder' && rest.length && entry.state.isExpanded ?  (\n                <div\n                 className={css(styles.child)}>\n                    <FileListChildren \n                        parent={entry.item.path}\n                        entries={rest}\n                        clipboard={clipboard}\n                        readOnly={readOnly}\n                        onCreateFile={onCreateFile}\n                        onCreateFolder={onCreateFolder}\n                        onOpen={onOpen}\n                        onSelect={onSelect}\n                        onFocus={onFocus}\n                        onCopy={onCopy}\n                        onPaste={onPaste}\n                        onRename={onRename}\n                        onExpand={onExpand}\n                        onDelete={onDelete}\n                        onClearClipboard={onClearClipboard}\n                        theme={theme}\n                     />\n                </div>\n                )\n             : null;\n    };\n    _renderMenuIcon = () => \n         (\n        <svg\n         className={css(styles.icon)} viewBox=\"0 0 16 16\">\n            <circle\n             cy=\"3\" cx=\"8\" r=\"1.5\" />\n            <circle\n             cy=\"8\" cx=\"8\" r=\"1.5\" />\n            <circle\n             cy=\"13\" cx=\"8\" r=\"1.5\" />\n        </svg>\n        )\n    ;\n    render() {\n        \n        // Disable drag n drop for the entry file and virtual files\n        \n        // Also disable for files being created because they will have a nested input\n        \n        // Otherwise it'll be impossible to move the cursor in the input by dragging\n        const {\n            entry, \n            rest, \n            onOpen, \n            onFocus, \n            onRename, \n            onExpand, \n            readOnly, \n            theme\n         } = this.props;\n        \n        // Disable drag n drop for the entry file and virtual files\n        \n        // Also disable for files being created because they will have a nested input\n        \n        // Otherwise it'll be impossible to move the cursor in the input by dragging\n        const draggable = !((isEntryPoint(this.props.entry.item.path) || this.props.entry.item.virtual) ?? this.props.entry.state.isCreating);\n        return  (\n            <FileListEntryBase \n                entry={entry}\n                rest={rest}\n                onOpen={onOpen}\n                onFocus={onFocus}\n                onRename={onRename}\n                onExpand={onExpand}\n                renderItem={this._renderItem}\n                renderTree={this._renderTree}\n                renderMenuIcon={this._renderMenuIcon}\n                actions={this._getActions()}\n                draggable={draggable}\n                readOnly={readOnly}\n                theme={theme}\n             />\n            )\n        ;\n    }\n}\n\nexport default FileListEntry;\n\nconst styles = StyleSheet.create({\n    child: {\n        marginLeft: 16\n     }, \n    label: {\n        verticalAlign: -1, \n        margin: '0 6px', \n        userSelect: 'none'\n     }, \n    labelError: {\n        color: c('error')\n     }, \n    labelTest: {\n        color: c('soft')\n     }, \n    input: {\n        position: 'absolute', \n        top: 0, \n        left: 35, \n        height: 28, \n        margin: 1, \n        border: `1px solid ${c('selected')}`, \n        borderRadius: 3, \n        backgroundColor: c('content'), \n        outline: 0, \n        paddingLeft: 2\n     }, \n    error: {\n        backgroundColor: c('error'), \n        color: c('error-text'), \n        padding: '4px 8px', \n        position: 'fixed', \n        marginTop: -32, \n        marginLeft: 20, \n        borderRadius: 3\n     }, \n    icon: {\n        height: 16, \n        width: 16, \n        opacity: 0.7, \n        fill: 'currentColor'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListChildren.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport escapeRegexp from 'escape-string-regexp';\nimport * as React from 'react';\nimport {FileSystemEntry, isInsideFolder} from '../../features/file';\nimport {ThemeName} from '../../features/preferences';\nimport FileListEntry from './FileListEntry';\ntype Props = { \n    parent: string;\n    entries: FileSystemEntry[];\n    readOnly: boolean;\n    clipboard: FileSystemEntry[];\n    onOpen: (path: string) => void;\n    onFocus: (path: string) => void;\n    onSelect: (path: string) => void;\n    onCopy: (path: string) => void;\n    onDelete: (path: string) => void;\n    onExpand: (path: string, expand?: boolean) => void;\n    onCreateFile: (path: string | undefined) => void;\n    onCreateFolder: (path: string | undefined) => void;\n    onRename: (oldPath: string, newPath: string) => void;\n    onPaste: (path: string | undefined, entry: FileSystemEntry) => void;\n    onClearClipboard: () => void;\n    theme: ThemeName;\n    className?: string;\n};\nexport default class FileListChildren extends React.PureComponent<Props> {\n        _getImmediateChildren = () => \n            this.props.entries.filter(e => \n            \n                !e.item.path.replace(new RegExp(`^${escapeRegexp(this.props.parent)}/`), '').includes('/')\n                    // Filter-out non-immediate children\n            \n            );\n        render() {\n            const {\n                entries, \n                readOnly, \n                clipboard, \n                onCreateFile, \n                onCreateFolder, \n                onFocus, \n                onOpen, \n                onSelect, \n                onPaste, \n                onRename, \n                onExpand, \n                onDelete, \n                onCopy, \n                onClearClipboard, \n                className, \n                theme\n             } = this.props;\n            return  (\n                <div\n                 className={`${css(styles.container)} ${className ?? ''}`}>\n                    {\n                        this._getImmediateChildren().sort((a, b) => {\n                        \n                            if (a.item.type === b.item.type) {\n                                if (a.item.path.startsWith('.') && !b.item.path.startsWith('.')) {\n                                    return 1;\n                                }\n                                if (b.item.path.startsWith('.') && !a.item.path.startsWith('.')) {\n                                    return -1;\n                                }\n                                return a.item.path.localeCompare(b.item.path);\n                            }\n                            else {\n                                if (a.item.type === 'folder') {\n                                    return -1;\n                                }\n                                else {\n                                    return 1;\n                                }\n                            }\n                        }\n                        ).map((e) => \n                        \n                             (\n                            <FileListEntry \n                                key={e.item.path}\n                                entry={e}\n                                rest={entries.filter(en => \n                                    \n                                        isInsideFolder(en.item.path, e.item.path)\n                                    )}\n                                readOnly={readOnly}\n                                clipboard={clipboard}\n                                onCreateFile={onCreateFile}\n                                onCreateFolder={onCreateFolder}\n                                onOpen={onOpen}\n                                onSelect={onSelect}\n                                onFocus={onFocus}\n                                onCopy={onCopy}\n                                onPaste={onPaste}\n                                onDelete={onDelete}\n                                onRename={onRename}\n                                onExpand={onExpand}\n                                onClearClipboard={onClearClipboard}\n                                getAdjacentEntries={this._getImmediateChildren}\n                                theme={theme}\n                             />\n                            )\n                        \n                        )\n                        \n                    }\n                </div>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    container: {\n        display: 'inline-block', \n        width: '100%'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListOpenEntry.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {withThemeName, ThemeName} from '../../features/preferences';\nimport {c} from '../ThemeProvider';\nimport ContextMenu from '../widgets/ContextMenu';\nimport FileListEntryIcon from './FileListEntryIcon';\nimport {TextFileEntry, AssetFileEntry} from '../../features/file';\ntype Props = { \n    entry: TextFileEntry | AssetFileEntry;\n    onOpen: () => void;\n    onClose: () => void;\n    onCloseOthers: () => void;\n    onCloseAll: () => void;\n    theme: ThemeName;\n};\ntype State = { \n    isHovered: boolean;\n    menu: { \n        pageX: number;\n        pageY: number;\n    } | undefined | null;\n};\nclass FileListOpenEntry extends React.PureComponent<Props, State> {\n    state: State = {\n        isHovered: false, \n        menu: null\n    }\n    ;\n    componentDidMount() {\n        document.addEventListener('click', this._handleDocumentClick);\n        document.addEventListener('contextmenu', this._handleDocumentContextMenu);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this._handleDocumentClick);\n        document.removeEventListener('contextmenu', this._handleDocumentContextMenu);\n    }\n    _hideContextMenu = () => \n        this.setState({\n            menu: null\n         });\n    _showContextMenu = (e: MouseEvent) => \n        this.setState({\n            menu: {\n                pageX: e.pageX, \n                pageY: e.pageY\n             }\n         });\n    _handleDocumentClick = (e: MouseEvent) => {\n        if (this.state.menu) {\n            if (this._menu.current && e.target !== this._menu.current && !this._menu.current.contains(e.target as Node)) {\n                this._hideContextMenu();\n            }\n        }\n    };\n    _handleDocumentContextMenu = (e: MouseEvent) => {\n        if (e.target === this._item.current || this._item.current?.contains?.(e.target as Node)) {\n            e.preventDefault();\n            this._showContextMenu(e);\n        }\n        else {\n            if (this.state.menu) {\n                this._hideContextMenu();\n            }\n        }\n    };\n    _handleMouseEnter = () => \n        this.setState({\n            isHovered: true\n         });\n    _handleMouseLeave = () => \n        this.setState({\n            isHovered: false\n         });\n    _menu = React.createRef<HTMLUListElement>();\n    _item = React.createRef<HTMLLIElement>();\n    render() {\n        const {\n            entry, \n            theme\n         } = this.props;\n        const displayName = entry.item.path.split('/').pop();\n        return  (\n            <li \n                ref={this._item}\n                tabIndex={-1}\n                className={css(styles.item, entry.state.isFocused\n                     && ((theme === 'dark' ? styles.focusedDark : styles.focusedLight)))}\n                onMouseEnter={this._handleMouseEnter}\n                onMouseLeave={this._handleMouseLeave}\n            >\n                <button\n                 onClick={this.props.onClose} className={css(styles.close, this.state.isHovered ? styles.closeFocused : styles.closeBlurred)}>\n                    ×\n                </button>\n                <div\n                 onClick={this.props.onOpen}>\n                    <FileListEntryIcon\n                     entry={entry} />\n                    <span\n                     className={css(styles.label, entry.state.isError ? styles.labelError : undefined)}>\n                        {displayName}\n                    </span>\n                </div>\n                <ContextMenu \n                    ref={this._menu}\n                    visible={Boolean(this.state.menu)}\n                    position={this.state.menu}\n                    actions={[\n                            {\n                                label: 'Close', \n                                handler: this.props.onClose\n                             }, \n                            {\n                                label: 'Close Others', \n                                handler: this.props.onCloseOthers\n                             }, \n                            {\n                                label: 'Close All', \n                                handler: this.props.onCloseAll\n                             }\n                        ]}\n                    onHide={this._hideContextMenu}\n                 />\n            </li>\n            )\n        ;\n    }\n}\nexport default withThemeName(FileListOpenEntry);\nconst styles = StyleSheet.create({\n    item: {\n        paddingLeft: 24, \n        cursor: 'pointer', \n        outline: 0, \n        whiteSpace: 'nowrap'\n     }, \n    label: {\n        display: 'inline-block', \n        verticalAlign: -1, \n        margin: 6, \n        userSelect: 'none', \n        whiteSpace: 'nowrap'\n     }, \n    labelError: {\n        color: c('error')\n     }, \n    focusedLight: {\n        backgroundColor: 'rgba(0, 0, 0, .04)'\n     }, \n    focusedDark: {\n        backgroundColor: 'rgba(255, 255, 255, .04)'\n     }, \n    close: {\n        padding: '7px 8px', \n        fontSize: '18px', \n        border: 'none', \n        appearance: 'none', \n        position: 'absolute', \n        left: 0, \n        margin: '-3px 0 0 0', \n        background: 'none', \n        outline: 0\n     }, \n    closeFocused: {\n        opacity: 1\n     }, \n    closeBlurred: {\n        opacity: 0\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListPane.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\ntype Props = { \n    title: string;\n    expanded: boolean;\n    onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n    buttons?: React.ReactNode[];\n    children?: React.ReactNode;\n    className?: string;\n};\nexport default function FileListPane({\n        title, \n        expanded, \n        buttons, \n        children, \n        onClick, \n        className\n     }: Props) {\n    \n        return  (\n            <div\n             className={`${className ?? ''} ${css(styles.container)}`}>\n                <div\n                 className={css(styles.header)}>\n                    <div\n                     className={css(styles.left)} onClick={onClick} data-test-id={`file-list-pane-${title.toLowerCase().replace(/[^a-z]/g, '-')}`}>\n                        <svg \n                            className={css(styles.collapse, expanded ? styles.collapseExpanded : styles.collapseCollapsed)}\n                            width=\"12px\"\n                            height=\"12px\"\n                            viewBox=\"0 0 12 12\"\n                        >\n                            <g \n                                stroke=\"none\"\n                                strokeWidth=\"2\"\n                                fill=\"none\"\n                                fillRule=\"evenodd\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                            >\n                                <polyline\n                                 stroke=\"currentColor\" transform=\"translate(6.000000, 6.000000) scale(-1, 1) rotate(180.000000) translate(-6.000000, -6.000000) \" points=\"2 4 6 8 10 4\" />\n                            </g>\n                        </svg>\n                        <h4\n                         className={css(styles.label)}>\n                            {title}\n                        </h4>\n                    </div>\n                    <div\n                     className={css(styles.right)}>\n                        {buttons}\n                    </div>\n                </div>\n                {\n                    expanded ? children : null\n                }\n            </div>\n            )\n        ;\n    }\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex', \n        flexDirection: 'column'\n     }, \n    header: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        padding: '0 4px'\n     }, \n    label: {\n        fontSize: '1em', \n        fontWeight: 500, \n        lineHeight: 1, \n        margin: 0\n     }, \n    collapse: {\n        margin: '1px 6px 1px 2px', \n        opacity: 0.7\n     }, \n    collapseCollapsed: {\n        transform: 'rotate(180deg)'\n     }, \n    collapseExpanded: {\n        transform: 'rotate(0deg)'\n     }, \n    left: {\n        flex: 1, \n        display: 'flex', \n        flexDirection: 'row', \n        padding: '2px 4px', \n        cursor: 'pointer'\n     }, \n    right: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center'\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileListPaneButton.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\ntype Props = { \n    innerRef?: React.Ref<HTMLButtonElement>;\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    children?: React.ReactNode;\n};\nclass FileListPaneButton extends React.PureComponent<Props> {\n    render() {\n        const {\n            innerRef, \n            ...rest\n         } = this.props;\n        return  (\n            <button\n             {...rest} className={css(styles.button)} ref={innerRef}>\n                <svg\n                 className={css(styles.icon)} viewBox=\"0 0 16 16\">\n                    {this.props.children}\n                </svg>\n            </button>\n            )\n        ;\n    }\n}\nexport default React.forwardRef((props: Props, ref: React.Ref<HTMLButtonElement>) => \n    \n         (\n        <FileListPaneButton\n         {...props} innerRef={ref} />\n        )\n    \n    )\nconst styles = StyleSheet.create({\n    button: {\n        appearance: 'none', \n        background: 'transparent', \n        border: 0, \n        margin: 0, \n        outline: 0\n     }, \n    icon: {\n        fill: 'currentColor', \n        height: 16, \n        width: 16, \n        verticalAlign: -3\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\updateEntry.tsx.ittf\n*/\nimport {FileSystemEntry} from '../../../features/file';\nexport default function updateEntry<T extends FileSystemEntry>(entry: T, updates: { \n        item?: Partial<T['item']>;\n        state?: Partial<T['state']>;\n    }):  T {\n    \n        return {\n                ...((entry as any))\n                , \n                item: updates.item ? {\n                        ...entry.item, \n                        ...((updates as any).item)\n                        \n                     } : entry.item, \n                state: updates.state ? {\n                        ...entry.state, \n                        ...((updates as any).state)\n                        \n                     } : entry.state\n             };\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\closeEntry.tsx.ittf\n*/\nimport {FileSystemEntry} from '../../features/file';\nimport updateEntry from './updateEntry';\nexport default function closeEntry(entry: FileSystemEntry) {\n    \n        if (entry.item.type === 'file') {\n            if (entry.state.isSelected || entry.state.isFocused || entry.state.isOpen) {\n                \n                // Unselect and unfocus the file\n                return updateEntry(entry, {\n                        state: {\n                            isOpen: false, \n                            isSelected: false, \n                            isFocused: false\n                         }\n                     });\n            }\n        }\n        else {\n            if (entry.state.isSelected) {\n                \n                // Unselect the folder\n                return updateEntry(entry, {\n                        state: {\n                            isSelected: false\n                         }\n                     });\n            }\n        }\n        return entry;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\createEntryAtPath.tsx.ittf\n*/\nimport {FileSystemEntry, getUniquePath, getParentPath} from '../../../features/file';\nimport updateEntry from './updateEntry';\nexport default function createEntryAtPath(entries: FileSystemEntry[], path: string | undefined, e: FileSystemEntry, suffix?: string):  FileSystemEntry {\n    \n        \n        // Check if an entry exists for the path we want to create the entry at\n        \n        // If the entry is a folder, we create the new entry inside\n        \n        // Otherwise we create it inside the parent\n        const entry = path ? entries.find(e => \n            \n                e.item.path === path\n            ) : null;\n        \n        // If the entry is a folder, we create the new entry inside\n        \n        // Otherwise we create it inside the parent\n        \n        // @ts-ignore\n        const parent = entry ? entry.item.type === 'folder' ? entry.item.path : getParentPath(entry.item.path) : null; \n        \n        // @ts-ignore\n        const name: string = e.item.path.split('/').pop(); \n        \n        // @ts-ignore\n        const item = updateEntry(e, { item: { path: getUniquePath(entries.map(e =>  \n                    e.item.path\n                ), parent ? `${parent}/${name}` : name, suffix)\n             }\n         });\n        \n        \n        // @ts-ignore\n        item.state = { isCreating: true  }; \n        return item;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\createNewEntry.tsx.ittf\n*/\nimport {FileSystemEntry, isInsideFolder} from '../../../features/file';\nimport createEntryAtPath from './createEntryAtPath';\nimport updateEntry from './updateEntry';\nexport default function createNewEntry(entries: FileSystemEntry[], type: 'file' | 'folder', at?: string | undefined) {\n    \n        const e: FileSystemEntry = type === 'file' ? {\n                item: {\n                    path: 'Untitled file.js', \n                    type: 'file', \n                    content: ''\n                 }, \n                state: {\n                    isCreating: true\n                 }\n             } : {\n                item: {\n                    path: 'Untitled folder', \n                    type: 'folder'\n                 }, \n                state: {\n                    isCreating: true\n                 }\n             };\n        let path = at;\n        if (typeof path !== 'string') {\n            \n            // Get the current folder if no path is specified\n            const entry = entries.find(e => \n            \n                e.state.isSelected === true\n            );\n            path = entry ? entry.item.path : undefined;\n        }\n        const entry = createEntryAtPath(entries, path, e);\n        const next = entries.map((e) => {\n        \n            if (e.item.type === 'folder' && isInsideFolder(entry.item.path, e.item.path) && !e.state.isExpanded) {\n                return updateEntry(e, {\n                        state: {\n                            isExpanded: true\n                         }\n                     });\n            }\n            return e;\n        }\n        );\n        return [\n                ...next, \n                entry\n            ];\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\openEntry.tsx.ittf\n*/\nimport {FileSystemEntry} from '../../../features/file';\nimport updateEntry from './updateEntry';\nexport default function openEntry(entries: FileSystemEntry[], path: string, focus: boolean = false):  FileSystemEntry[] {\n    \n        const entry = entries.find(e => \n        \n            e.item.path === path\n        );\n        const isFolder = entry ? entry.item.type === 'folder' : false;\n        return entries.map((e) => {\n            \n                if (e.item.path === path) {\n                    if (e.item.type === 'file') {\n                        if (e.state.isSelected && e.state.isFocused && e.state.isOpen) {\n                            return e;\n                        }\n                        \n                        // Select, open and focus the file\n                        return updateEntry(e, {\n                                state: {\n                                    isSelected: true, \n                                    isFocused: true, \n                                    isOpen: true\n                                 }\n                             });\n                    }\n                    else {\n                        \n                        // Select and toggle the expand for the directory\n                        return updateEntry(e, {\n                                state: {\n                                    isSelected: true, \n                                    isExpanded: focus ? e.state.isExpanded : !e.state.isExpanded\n                                 }\n                             });\n                    }\n                }\n                if (e.item.type === 'file') {\n                    if (e.state.isSelected || e.state.isFocused) {\n                        \n                        // Unselect and unfocus the file\n                        return updateEntry(e, {\n                                state: {\n                                    isSelected: false, \n                                    isFocused: isFolder ? e.state.isFocused : false\n                                 }\n                             });\n                    }\n                }\n                else {\n                    if (e.state.isSelected) {\n                        \n                        // Unselect the folder\n                        return updateEntry(e, {\n                                state: {\n                                    isSelected: false\n                                 }\n                             });\n                    }\n                }\n                return e;\n            }\n            );\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\recursivelyCreateParents.tsx.ittf\n*/\nimport {FileSystemEntry, getParentPath} from '../../../features/file';\nexport default function recursivelyCreateParents(entries: FileSystemEntry[], path: string, expand?: boolean):  FileSystemEntry[] {\n    \n        const next: FileSystemEntry[] = [];\n        let parent = getParentPath(path);\n        while (parent) {\n            const parentEntry = entries.find(e => \n            \n                e.item.path === parent\n            );\n            if (parentEntry) {\n                if (parentEntry.item.type !== 'folder') {\n                    throw new Error('File path must be inside a folder');\n                }\n                break;\n            }\n            else {\n                next.push({\n                    item: {\n                        type: 'folder', \n                        path: parent\n                     }, \n                    state: {\n                        isExpanded: !!expand\n                     }\n                 })\n                parent = getParentPath(parent);\n            }\n        }\n        return next;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\utils\\convertFileStructure.tsx.ittf\n*/\nimport {PackiFiles, PackiFile} from '../../../features/packi/index';\nimport {Annotation} from '../../../features/annotations/index';\nimport {isEntryPoint} from '../../../features/file/index';\nimport {FileSystemEntry, TextFileEntry, AssetFileEntry} from '../types';\nconst getFolders = (path: string):  string[] => {\n\n    \n    // TODO: change this to slice and join\n    const pathSegments = path.split('/');\n    if (pathSegments.length === 0) {\n        return [];\n    }\n    const result = [];\n    for (let pathIdx = 0; pathIdx < pathSegments.length - 1; pathIdx++) {\n        result.push(pathSegments.slice(0, pathIdx + 1).join('/'));\n    }\n    return result;\n}\n;\nfunction fileToEntry(path: string, file: PackiFile, annotations: Annotation[], prevEntry?: FileSystemEntry):  any {\n\n    const isLoading = !!annotations.find(({\n        location, \n        severity\n     }) => \n    \n        location?.fileName === path && severity < 0\n    );\n    const isError = !isLoading && !!annotations.find(({\n        location, \n        severity\n     }) => \n    \n        location?.fileName === path && severity >= 3\n    );\n    if (file.type === 'ASSET') {\n        if (prevEntry && prevEntry.item.type === 'file' && prevEntry.item.asset) {\n            return prevEntry.item.uri === file.contents && prevEntry.state.isError === isError && prevEntry.state.isLoading === isLoading ? prevEntry : {\n                        item: {\n                            ...prevEntry.item, \n                            uri: file.contents as string\n                         }, \n                        state: {\n                            ...prevEntry.state, \n                            isError, \n                            isLoading\n                         }\n                     };\n        }\n        else {\n            return {\n                    item: {\n                        path, \n                        type: 'file', \n                        uri: file.contents as string, \n                        asset: true\n                     }, \n                    state: {\n                        isError, \n                        isLoading\n                     }\n                 };\n        }\n    }\n    else {\n        const isEntry = isEntryPoint(path);\n        if (prevEntry && prevEntry.item.type === 'file' && !prevEntry.item.asset) {\n            return prevEntry.item.content === file.contents && prevEntry.state.isError === isError && prevEntry.state.isLoading === isLoading ? prevEntry : {\n                        item: {\n                            ...prevEntry.item, \n                            content: file.contents\n                         }, \n                        state: {\n                            ...prevEntry.state, \n                            isError, \n                            isLoading\n                         }\n                     };\n        }\n        else {\n            return {\n                    item: {\n                        path, \n                        type: 'file', \n                        content: file.contents, \n                        virtual: path === 'package.json'\n                     }, \n                    state: {\n                        isOpen: isEntry, \n                        isSelected: isEntry, \n                        isFocused: isEntry, \n                        isError, \n                        isLoading\n                     }\n                 };\n        }\n    }\n}\nexport function filesToEntries(files: PackiFiles, annotations: Annotation[], prevEntries: FileSystemEntry[]):  FileSystemEntry[] {\n\n    const fileSystem: FileSystemEntry[] = [];\n    \n    // Add entries from files\n    const foldersInFileSystem = new Set();\n    for (const filename of Object.keys(files).sort()) {\n        for (const folder of getFolders(filename)) {\n            if (!foldersInFileSystem.has(folder)) {\n                fileSystem.push((prevEntries.find(entry => \n                \n                    entry.item.path === folder\n                )) ?? ({\n                    item: {\n                        path: folder, \n                        type: 'folder'\n                     }, \n                    state: {\n                        \n                     }\n                 }))\n                foldersInFileSystem.add(folder);\n            }\n        }\n        const file = files[filename];\n        const prevEntry = prevEntries.find(entry => \n        \n            entry.item.path === filename\n        );\n        fileSystem.push(fileToEntry(filename, file, annotations, prevEntry));\n        // Add entries from files\n        // Restore empty folders that cannot be derived from files\n    }\n    // Restore empty folders that cannot be derived from files\n    prevEntries.forEach((entry) => {\n    \n        if (entry.item.type === 'folder' && !foldersInFileSystem.has(entry.item.path)) {\n            fileSystem.push(entry);\n        }\n    }\n    )\n    return fileSystem;\n}\nexport function findFocusedEntry(entries: FileSystemEntry[]):  TextFileEntry | AssetFileEntry | undefined {\n\n    return entries.find(entry => \n            \n                entry.item.type === 'file' && entry.state.isFocused\n            ) as any;\n}\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\FileList.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport pickBy from 'lodash/pickBy';\nimport * as React from 'react';\nimport eslintrc from '../../features/lint/eslint.json';\nimport {SaveStatus, PackiFiles, PackiFile} from '../../features/packi';\nimport {Annotation} from '../../features/annotations';\nimport {FileSystemEntry, TextFileEntry, AssetFileEntry, isPackageJson, getUniquePath, isInsideFolder, isESLintConfig} from '../../features/file';\nimport {withThemeName, ThemeName} from '../../features/preferences';\nimport {SidebarShell} from '../shell/SidebarShell';\nimport {c} from '../ThemeProvider';\nimport ResizablePane from '../widgets/ResizablePane';\nimport Toast from '../widgets/Toast';\nimport FileListChildren from './FileListChildren';\nimport FileListEntryDropTarget from './FileListEntryDropTarget';\nimport FileListOpenEntry from './FileListOpenEntry';\nimport FileListPane from './FileListPane';\nimport FileListPaneButton from './FileListPaneButton';\nimport closeEntry from './actions/closeEntry';\nimport createNewEntry from './actions/createNewEntry';\nimport expandEntry from './actions/expandEntry';\nimport openEntry from './actions/openEntry';\nimport pasteEntry from './actions/pasteEntry';\nimport recursivelyCreateParents from './actions/recursivelyCreateParents';\nimport renameEntry from './actions/renameEntry';\nimport selectEntry from './actions/selectEntry';\nimport updateEntry from './actions/updateEntry';\nimport {filesToEntries, findFocusedEntry} from './utils/convertFileStructure';\nexport type FileListProps = { \n    visible: boolean;\n    files: PackiFiles;\n    selectedFile: string;\n    readOnly: boolean;\n    updateFiles: (updateFn: (files: PackiFiles) => { \n        [path: string]: PackiFile | null;\n    }) => void;\n    onSelectFile: (path: string) => void;\n    onRemoveFile: (path: string) => void;\n    onRenameFile: (oldPath: string, newPath: string) => void;\n    onDownloadCode: () => Promise<void>;\n    saveStatus: SaveStatus;\n    theme: ThemeName;\n    annotations: Annotation[];\n};\ntype State = { \n    clipboard: FileSystemEntry[];\n    deleted: { \n        id: number;\n        path: string;\n        entries: FileSystemEntry[];\n    }[];\n    openFilesPane: boolean;\n    projectPane: boolean;\n    entries: FileSystemEntry[];\n    selectedFile: string;\n};\nconst AddIcon = () => \n\n     (\n    <g\n     transform=\"translate(7.000000, 7.000000)\">\n        <circle \n            fill={c('success')}\n            cx=\"4.5\"\n            cy=\"4.5\"\n            r=\"4.5\"\n         />\n        <rect \n            fill={c('success-text')}\n            x=\"4\"\n            y=\"2\"\n            width=\"1\"\n            height=\"5\"\n         />\n        <rect \n            fill={c('success-text')}\n            x=\"2\"\n            y=\"4\"\n            width=\"5\"\n            height=\"1\"\n         />\n    </g>\n    )\n\n;\nclass FileListComp extends React.PureComponent<FileListProps, State> {\n    state: State = {\n        clipboard: [], \n        deleted: [], \n        openFilesPane: true, \n        projectPane: true, \n        entries: [], \n        selectedFile: ''\n    }\n    ;\n    static getDerivedStateFromProps(props: FileListProps, state: State) {\n        let entries = filesToEntries(props.files, props.annotations, state.entries);\n        entries = state.selectedFile !== props.selectedFile ? openEntry(entries, props.selectedFile) : entries;\n        return {\n                entries, \n                selectedFile: props.selectedFile\n             };\n    }\n    private updateEntries(entries: FileSystemEntry[]) {\n        const prevEntries = this.state.entries;\n        // Sync changes\n        this.setState({\n            entries\n         })\n        // Sync changes\n        this.props.updateFiles((files) => {\n        \n            \n            // Handle file removal (and rename)\n            const updates: { \n                [path: string]: PackiFile | null;\n            } = {};\n            for (const path in files) {\n                const entry = entries.find(entry => \n                \n                    entry.item.path === path\n                );\n                if (!entry) {\n                    updates[path] = null;\n                }\n                // Handle file removal (and rename)\n                // Handle added/renamed files\n            }\n            // Handle added/renamed files\n            entries.forEach((entry) => {\n            \n                if (entry.item.type === 'file' && !files[entry.item.path] && !isPackageJson(entry.item.path)) {\n                    updates[entry.item.path] = {\n                        type: entry.item.asset ? 'ASSET' : 'CODE', \n                        contents: entry.item.asset ? entry.item.uri : entry.item.content\n                     };\n                }\n            }\n            )\n            return updates;\n        }\n        )\n        \n        // Update focus\n        const prevFocusedEntry = findFocusedEntry(prevEntries);\n        const focusedEntry = findFocusedEntry(entries);\n        if (focusedEntry?.item?.path !== prevFocusedEntry?.item?.path) {\n            this.props.onSelectFile(focusedEntry?.item?.path ?? '');\n        }\n    }\n    _handleEntrySelect = (path: string) => \n        this.updateEntries(selectEntry(this.state.entries, path));\n    _handleEntryOpen = (path: string) => \n        this.updateEntries(openEntry(this.state.entries, path));\n    _handleEntryFocus = (path: string) => \n        this.updateEntries(openEntry(this.state.entries, path, true));\n    _handleEntryExpand = (path: string, expand?: boolean) => \n        this.updateEntries(expandEntry(this.state.entries, path, expand));\n    _handleEntryRename = (oldPath: string, newPath: string) => {\n        if (oldPath === newPath) {\n            return ;\n        }\n        const entry = this.state.entries.find(e => \n        \n            e.item.path === oldPath\n        );\n        if (entry) {\n            if (entry.item.type === 'folder') {\n                this.state.entries.filter(e => \n                \n                    e.item.type === 'file' && e.item.path.startsWith(oldPath)\n                ).forEach(renamedFile => \n                \n                    this.props.onRenameFile(renamedFile.item.path, `${newPath}${renamedFile.item.path.substring(oldPath.length)}`)\n                )\n            }\n            else {\n                this.props.onRenameFile(oldPath, newPath);\n            }\n        }\n        this.updateEntries(renameEntry(this.state.entries, oldPath, newPath));\n    };\n    _restoreEntries = (entries: FileSystemEntry[]) => \n        this.updateEntries([\n            ...this.state.entries, \n            ...(entries.map(e => \n                \n                    updateEntry(e, {\n                        item: {\n                            path: getUniquePath(this.state.entries.map(it => \n                            \n                                it.item.path\n                            ), e.item.path)\n                         }\n                     })\n                ))\n            \n        ]);\n    _handleDismissDelete = (id: number) => \n        this.setState((state) => \n        \n            ({\n                deleted: state.deleted.filter(g => \n                \n                    g.id !== id\n                )\n             })\n        );\n    _handleEntryClose = (path: string) => \n        this.updateEntries(this.state.entries.map((e) => \n        \n            (e.item.path === path ? closeEntry(e) : e)\n        ));\n    _handleEntryCloseOthers = (path: string) => \n        this.updateEntries(this.state.entries.map((e) => \n        \n            (e.item.path !== path ? closeEntry(e) : e)\n        ));\n    _handleEntryCloseAll = () => \n        this.updateEntries(this.state.entries.map(e => \n        \n            closeEntry(e)\n        ));\n    _handleEntryDelete = (path: string) => {\n        const entry = this.state.entries.find(e => \n        \n            e.item.path === path\n        );\n        const deletedEntries: FileSystemEntry[] = [];\n        this.updateEntries(this.state.entries.filter((e) => {\n        \n            const remove = e.item.path === path || isInsideFolder(e.item.path, path);\n            if (remove) {\n                deletedEntries.push(e);\n                if (e.item.type === 'file') {\n                    this.props.onRemoveFile(e.item.path);\n                }\n            }\n            return !remove;\n        }\n        ))\n        this.setState((state) => \n        \n            ({\n                deleted: [\n                    ...state.deleted, \n                    {\n                        id: this._currentDeleteID++, \n                        path: entry ? entry.item.path : 'Item', \n                        entries: deletedEntries\n                     }\n                ]\n             })\n        )\n    };\n    _currentDeleteID: number = 0;\n    _handleEntryImport = (entry: TextFileEntry | AssetFileEntry) => {\n        let entries: FileSystemEntry[];\n        if (isPackageJson(entry.item.path)) {\n            \n            // Merge dependencies from package.json file\n            entries = this.state.entries.map((e) => {\n            \n                if (isPackageJson(e.item.path)) {\n                    try {\n                        \n                        // @ts-ignore\n                        \n                        // @ts-ignore\n                        const previous = JSON.parse(e.item.content); \n                        \n                        // @ts-ignore\n                        const next = JSON.parse(entry.item.content); \n                        return {\n                                    ...e, \n                                    item: {\n                                        ...e.item, \n                                        content: JSON.stringify({\n                                            ...previous, \n                                            dependencies: {\n                                                ...previous.dependencies, \n                                                ...Object.keys(next.dependencies).reduce((acc: { \n                                                    [key: string]: string;\n                                                }, name) => {\n                                                \n                                                    return acc;\n                                                }\n                                                , {})\n                                             }\n                                         }, null, 2)\n                                     }\n                                 } as TextFileEntry;\n                    } \n                    catch (err) {\n                    } \n                }\n                return e;\n            }\n            )\n            ;\n        }\n        else {\n            if (isESLintConfig(entry.item.path)) {\n                try {\n                    \n                    // Cleanup the config file to remove unsupported plugins and rules\n                    const content = JSON.parse((entry as TextFileEntry).item.content);\n                    if (content.plugins) {\n                        content.plugins = content.plugins.filter((name: string) => \n                        \n                            eslintrc.plugins.includes(name)\n                        )\n                        ;\n                        if (!content.plugins.length) {\n                            delete content.plugins\n                        }\n                    }\n                    if (content.rules) {\n                        content.rules = pickBy(content.rules, (_, key) => {\n                        \n                            if (key.includes('/')) {\n                                return eslintrc.plugins.some(name => \n                                    \n                                        key.startsWith(`${name}/`)\n                                    );\n                            }\n                            return key;\n                        }\n                        )\n                        ;\n                    }\n                    if (content.extends) {\n                        if (typeof content.extends === 'string' && !content.extends.startsWith('eslint:')) {\n                            delete content.extends\n                        }\n                        else {\n                            content.extends = content.extends.filter((name: string) => \n                            \n                                name.startsWith('eslint:')\n                            )\n                            ;\n                            if (!content.extends.length) {\n                                delete content.extends\n                            }\n                        }\n                    }\n                    \n                    // Remove existing eslintrc if any\n                    entries = this.state.entries.filter(e => \n                    \n                        !isESLintConfig(e.item.path)\n                    )\n                    ;\n                    entries.push(updateEntry(entry, {\n                        item: {\n                            content: JSON.stringify(content, null, 2)\n                         }\n                     }))\n                } \n                catch (e) {\n                    \n                    // Ignore errors\n                    entries = this.state.entries;\n                } \n            }\n            else {\n                const parents = recursivelyCreateParents(this.state.entries, entry.item.path);\n                entries = [\n                    ...this.state.entries, \n                    ...parents\n                ];\n                entries.push(updateEntry(entry, {\n                    item: {\n                        path: getUniquePath(entries.map(e => \n                        \n                            e.item.path\n                        ), entry.item.path)\n                     }\n                 }))\n            }\n        }\n        this.updateEntries(entries);\n    };\n    _handleEntryPaste = (path: string | undefined, e: FileSystemEntry) => \n        this.updateEntries(pasteEntry(this.state.entries, path, e));\n    _handleCopy = (path: string) => \n        this.setState((state) => \n        \n            ({\n                clipboard: state.entries.filter(e => \n                \n                    e.item.path === path\n                )\n             })\n        );\n    _handleClearClipboard = () => \n        this.setState({\n            clipboard: []\n         });\n    _toggleOpenFilesPane = () => \n        this.setState((state) => \n        \n            ({\n                openFilesPane: !state.openFilesPane\n             })\n        );\n    _toggleProjectPane = () => \n        this.setState((state) => \n        \n            ({\n                projectPane: !state.projectPane\n             })\n        );\n    _handleCreateFile = (path?: string | undefined) => {\n        let entries = createNewEntry(this.state.entries, 'file', path);\n        const newEntry = entries.find(e => \n        \n            !this.state.entries.find(e2 => \n                \n                    e2.item.path === e.item.path\n                )\n        );\n        entries = newEntry ? openEntry(entries, newEntry.item.path, true) : entries;\n        this.updateEntries(entries);\n    };\n    _handleCreateFolder = (path?: string | undefined) => \n        this.updateEntries(createNewEntry(this.state.entries, 'folder', path));\n    render() {\n        return  (\n            <div\n             className={css(styles.container)}>\n                {\n                this.props.visible ?  (\n                    <SidebarShell\n                     className={css(styles.pane)}>\n                        <FileListPane \n                            className={css(this.state.projectPane ? styles.openFilesSmall : styles.openFilesLarge)}\n                            title=\"Open files\"\n                            expanded={this.state.openFilesPane}\n                            onClick={this._toggleOpenFilesPane}\n                        >\n                            <ul\n                             className={css(styles.tabs)} data-test-id=\"file-list-open-files-content\">\n                                {\n                                this.state.entries.filter(e => \n                                \n                                    e.item.type === 'file' && e.state.isOpen\n                                ).map((e: any) => \n                                \n                                     (\n                                    <FileListOpenEntry \n                                        key={e.item.path}\n                                        entry={e}\n                                        onOpen={() => \n                                            \n                                                this._handleEntryOpen(e.item.path)\n                                        }\n                                        onClose={() => \n                                            \n                                                this._handleEntryClose(e.item.path)\n                                        }\n                                        onCloseOthers={() => \n                                            \n                                                this._handleEntryCloseOthers(e.item.path)\n                                        }\n                                        onCloseAll={this._handleEntryCloseAll}\n                                     />\n                                    )\n                                \n                                )\n                                }</ul>\n                        </FileListPane>\n                        <FileListPane \n                            className={css(styles.project)}\n                            title={\"Project\" + (this.props.readOnly ? ' (readonly)': '')}\n                            expanded={this.state.projectPane}\n                            onClick={this._toggleProjectPane}\n                            buttons={!this.props.readOnly ? [\n                                         (\n                                        <FileListPaneButton\n                                         key=\"create-file\" onClick={() => \n                                            \n                                                this._handleCreateFile()\n                                        }>\n                                            <path\n                                             fillOpacity=\"0.7\" d=\"M3,2 L13,2 L13,14 L3,14 L3,2 Z M9,2 L13,6 L13,2 L9,2 Z M9,6 L9,2 L8,2 L8,7 L13,7 L13,6 L9,6 Z\" />\n                                            <AddIcon\n                                             />\n                                        </FileListPaneButton>\n                                        )\n                                        , \n                                         (\n                                        <FileListPaneButton\n                                         key=\"create-folder\" onClick={() => \n                                            \n                                                this._handleCreateFolder()\n                                        }>\n                                            <path\n                                             fillOpacity=\"0.7\" d=\"M7.25,4 L7.5,4 L7.5,3 L7,3.5 L7,2 L15,2 L15,4 L7.25,4 Z M6.75,4 L5,4 L7,2 L7,3.5 L6.5,4 L6.75,4 Z M1,4 L15,4 L15,14 L1,14 L1,4 Z M7.5,3 L7.5,4 L14,4 L14,3 L7.5,3 Z\" />\n                                            <AddIcon\n                                             />\n                                        </FileListPaneButton>\n                                        )\n                                        \n                                    ] : []\n                            }\n                        >\n                            <FileListEntryDropTarget\n                             className={css(styles.files)} rest={this.state.entries} onRename={this._handleEntryRename}>\n                                <div\n                                 className={css(styles.children)} data-test-id=\"file-list-project-content\">\n                                    <FileListChildren \n                                        parent=\"\"\n                                        entries={this.state.entries}\n                                        readOnly={this.props.readOnly}\n                                        clipboard={this.state.clipboard}\n                                        onCreateFile={this._handleCreateFile}\n                                        onCreateFolder={this._handleCreateFolder}\n                                        onOpen={this._handleEntryOpen}\n                                        onSelect={this._handleEntrySelect}\n                                        onFocus={this._handleEntryFocus}\n                                        onPaste={this._handleEntryPaste}\n                                        onRename={this._handleEntryRename}\n                                        onExpand={this._handleEntryExpand}\n                                        onDelete={this._handleEntryDelete}\n                                        onCopy={this._handleCopy}\n                                        onClearClipboard={this._handleClearClipboard}\n                                        theme={this.props.theme}\n                                        className={css(styles.list)}\n                                     />\n                                </div>\n                            </FileListEntryDropTarget>\n                        </FileListPane>\n                        {\n                        this.state.deleted.map((group) => \n                        \n                             (\n                            <Toast \n                                key={group.id}\n                                label={`Deleted ${group.path.split('/').pop()}`}\n                                actions={[\n                                        {\n                                            label: 'Undo', \n                                            action: () => {\n                                            \n                                                this._restoreEntries(group.entries);\n                                                this._handleDismissDelete(group.id);\n                                            }\n                                            \n                                         }, \n                                        {\n                                            label: 'Dismiss'\n                                         }\n                                    ]}\n                                onDismiss={() => \n                                    \n                                        this._handleDismissDelete(group.id)\n                                }\n                             />\n                            )\n                        \n                        ).reverse()\n                        }</SidebarShell>\n                    )\n                 : null}\n            </div>\n            )\n        ;\n    }\n}\n\nexport const FileList = withThemeName(FileListComp);\n\nexport default withThemeName(FileListComp);\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex', \n        flexDirection: 'column', \n        height: '100%'\n     }, \n    list: {\n        padding: '0 12px', \n        height: '100%'\n     }, \n    pane: {\n        flex: 1, \n        display: 'flex', \n        flexDirection: 'column', \n        width: 240, \n        minWidth: 240, \n        height: '100%', \n        zIndex: 10\n     }, \n    project: {\n        flex: 1\n     }, \n    openFilesSmall: {\n        maxHeight: '50%'\n     }, \n    openFilesLarge: {\n        maxHeight: 'calc(100% - 30px)'\n     }, \n    files: {\n        flex: '1 0 0', \n        overflow: 'auto', \n        paddingBottom: 16\n     }, \n    children: {\n        position: 'relative'\n     }, \n    tabs: {\n        margin: 0, \n        listStyle: 'none', \n        padding: '2px 0', \n        overflow: 'auto', \n        ':empty': {\n            display: 'none'\n         }\n     }, \n    toolbar: {\n        padding: 8\n     }, \n    toasts: {\n        position: 'fixed', \n        bottom: '3em', \n        left: '1em', \n        zIndex: 10\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\selectEntry.tsx.ittf\n*/\nimport {FileSystemEntry} from '../../../features/file';\nimport updateEntry from './updateEntry';\nexport default function selectEntry(entries: FileSystemEntry[], path: string):  FileSystemEntry[] {\n    \n        return entries.map(e => \n            \n                e.item.path === path ? updateEntry(e, {\n                        state: {\n                            isSelected: !e.state.isSelected\n                         }\n                     }) : e\n            );\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\expandEntry.tsx.ittf\n*/\nimport {FileSystemEntry} from '../../../features/file';\nimport updateEntry from './updateEntry';\nexport default function expandEntry(entries: FileSystemEntry[], path: string, expand: boolean = true):  FileSystemEntry[] {\n    \n        return entries.map((entry) => {\n            \n                if (entry.item.path === path && entry.item.type === 'folder') {\n                    return updateEntry(entry, {\n                            state: {\n                                isExpanded: expand\n                             }\n                         });\n                }\n                return entry;\n            }\n            );\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\renameEntry.tsx.ittf\n*/\nimport {FileSystemEntry, changeParentPath, isInsideFolder} from '../../../features/file';\nimport recursivelyCreateParents from './recursivelyCreateParents';\nimport updateEntry from './updateEntry';\nexport default function renameEntry(entries: FileSystemEntry[], oldPath: string, newPath: string) {\n    \n        const entry = entries.find(e => \n        \n            e.item.path === oldPath\n        );\n        if (!entry) {\n            return entries;\n        }\n        const renamed = updateEntry(entry, {\n            item: {\n                path: newPath\n             }\n         });\n        delete renamed.state.isCreating\n        const next: FileSystemEntry[] = entries.map((e) => {\n        \n            if (e.item.path === entry.item.path) {\n                return renamed;\n            }\n            if (renamed.item.type === 'folder' && isInsideFolder(e.item.path, entry.item.path)) {\n                return updateEntry(e, {\n                        item: {\n                            path: changeParentPath(e.item.path, entry.item.path, renamed.item.path)\n                         }\n                     });\n            }\n            return e;\n        }\n        );\n        const parents = recursivelyCreateParents(next, renamed.item.path, true);\n        return [\n                ...next, \n                ...parents\n            ];\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\FileList\\actions\\pasteEntry.tsx.ittf\n*/\nimport {FileSystemEntry, isInsideFolder, changeParentPath} from '../../../features/file';\nimport createEntryAtPath from './createEntryAtPath';\nimport updateEntry from './updateEntry';\nexport default function handleEntryPaste(entries: FileSystemEntry[], path: string | undefined, e: FileSystemEntry) {\n    \n        const entry = createEntryAtPath(entries, path, e, '- Copy');\n        if (e.item.type === 'folder') {\n            const children = entries.filter(it => \n            \n                // Get children of the old folder\n                isInsideFolder(it.item.path, e.item.path)\n            ).map(it => \n            \n                // Update the parent folder name to the new one\n                updateEntry(it, {\n                    item: {\n                        path: changeParentPath(it.item.path, e.item.path, entry.item.path)\n                     }\n                 })\n            )\n            ;\n            return [\n                    ...entries, \n                    ...children, \n                    entry\n                ];\n        }\n        else {\n            return [\n                    ...entries, \n                    entry\n                ];\n        }\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\NoFileSelected.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nexport default class NoFileSelected extends React.PureComponent {\n        render() {\n            return  (\n                <div\n                 className={css(styles.container)}>\n                    <h4\n                     className={css(styles.text)}>\n                        Select a file to view and edit\n                    </h4>\n                </div>\n                )\n            ;\n        }\n    }\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1, \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n     }, \n    text: {\n        fontSize: '1.5em', \n        fontWeight: 500, \n        opacity: 0.5\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\PageMetadata.tsx.ittf\n*/\nimport * as React from 'react';\nimport {Helmet} from 'react-helmet-async';\ntype Props = { \n    name: string;\n    description: string;\n    id?: string;\n};\nexport function getPageMetadata(props: Props) {\n\n    const title = `${props.name} - Packi`;\n    const description = props.description;\n    const url = `${process.env.PACKI_SERVER_URL}${\n    props.id\n     ? `/${props.id}`\n     : ''}\n    `;\n    const image = 'https://s3.amazonaws.com/exp-brand-assets/PackiIcon_200.png';\n    const meta = [\n        {\n            name: 'description', \n            content: description\n         }, \n        \n        // Open graph\n        {\n            property: 'og:url', \n            content: url\n         }, \n        {\n            property: 'og:title', \n            content: title\n         }, \n        {\n            property: 'og:description', \n            content: description\n         }, \n        {\n            property: 'og:type', \n            content: 'website'\n         }, \n        {\n            property: 'og:image', \n            content: image\n         }, \n        {\n            property: 'og:image:width', \n            content: '200'\n         }, \n        {\n            property: 'og:image:height', \n            content: '200'\n         }, \n        \n        // Twitter\n        {\n            name: 'twitter:card', \n            content: 'summary'\n         }, \n        {\n            name: 'twitter:site', \n            content: '@expo'\n         }, \n        {\n            name: 'twitter:title', \n            content: title\n         }, \n        {\n            name: 'twitter:description', \n            content: description\n         }, \n        {\n            name: 'twitter:image', \n            content: image\n         }\n    ];\n    return {\n            title, \n            description, \n            url, \n            meta\n         };\n}\nexport default function PageMetadata(props: Props) {\n    \n        const {\n            title, \n            meta\n         } = getPageMetadata(props);\n        return  (\n            <Helmet\n             title={title} meta={meta} />\n            )\n        ;\n    }\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\Banner.tsx.ittf\n*/\nimport React, {PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\n// see https://mxstbr.blog/2016/11/styled-components-magic-explained/\nimport styled, {keyframes, css} from 'styled-components';\nimport {c, s} from '../ThemeProvider';\n\nexport interface BannerProps {\n    visible: boolean;\n    className?: string;\n    type?: 'info' | 'success' | 'error';\n    children?: React.ReactNode;\n}\n\ntype BannerState = { \n    rendered: boolean;\n};\n\ninterface BannerStyleProps {\n    visible: boolean;\n    type?: 'info' | 'success' | 'error';\n}\nconst StyledRoot = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 10px;\n    z-index: 999;\n    text-align: center;\n    pointer-events: none;\n    \n`\nconst StyledBanner = styled.div<BannerStyleProps>`\n    display: inline-block;\n    margin: auto;\n    padding: 1em;\n    max-width: 100%;\n    background-color: ${props => props.type === 'success' ? c('success') : props.type === 'error' ? c('error') : c('primary')};\n    color: ${props => props.type === 'success' ? c('success-text') : props.type === 'error' ? c('error-text') : c('primary-text')};\n    -webkit-border-radius: 0 0 4px 4px;\n    -khtml-border-radius: 0 0 4px 4px;\n    -moz-border-radius: 0 0 4px 4px;\n    -o-border-radius: 0 0 4px 4px;\n    border-radius: 0 0 4px 4px;\n    transition-duration: 200ms;\n    pointer-events: ${props => props.visible ? \"auto\" : \"none\"};\n    -webkit-box-shadow: ${props => s('popover')};\n    -moz-box-shadow: ${props => s('popover')};\n    -o-box-shadow: ${props => s('popover')};\n    box-shadow: ${props => s('popover')};\n    -webkit-transform: ${props => props.visible ? \"translateY(0)\" : \"translateY(-100%)\"};\n    -ms-transition: ${props => props.visible ? \"translateY(0)\" : \"translateY(-100%)\"};\n    transform: ${props => props.visible ? \"translateY(0)\" : \"translateY(-100%)\"};\n`\n\nexport class Banner extends PureComponent<BannerProps, BannerState> {\n    \n    static getDerivedStateFromProps(props: BannerProps) {\n        if (props.visible) {\n            return {\n                    rendered: true\n                 };\n        }\n        return null;\n    }\n    \n    state = {\n        rendered: this.props.visible\n    }\n    ;\n    \n    componentDidUpdate(prevProps: BannerProps) {\n        if (this.props.visible !== prevProps.visible) {\n            clearTimeout(this._timer);\n            if (!this.props.visible) {\n                this._timer = setTimeout(() => \n                \n                    this.setState({\n                        rendered: false\n                     })\n                , 300)\n                ;\n            }\n        }\n    }\n    \n    _timer: any;\n    \n    render() {\n        if (!this.state.rendered) {\n            return null;\n        }\n        return  (\n            <StyledRoot\n            >\n                <StyledBanner\n                 visible={this.props.visible} type={this.props.type} className={this.props.className}>\n                    {this.props.children}\n                </StyledBanner>\n            </StyledRoot>\n            )\n        ;\n    }\n}\nexport default Banner;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\assets\\DebugIcon.tsx.ittf\n*/\nimport * as React from \"react\";\nexport const DebugIcon = ({\n    height=\"24px\", \n    width=\"24px\", \n    theme=\"light\", \n    ...props\n }: React.SVGProps<SVGSVGElement> & { \n    theme?: string;\n}) => {\n\n    const fill = theme == 'light' ? '#ffffff' : '#000000';\n    const stroke = theme == 'light' ? '#000000' : '#ffffff';\n    return  (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            viewBox=\"0 0 30 30\"\n            {...props}\n        >\n            <path\n             d=\"M29,15h-5.1c-0.1-1.2-0.5-2.4-1-3.5c1.9-1.5,3.1-3.7,3.1-6.1V5c0-0.6-0.4-1-1-1s-1,0.4-1,1v0.4c0,1.8-0.8,3.4-2.2,4.5c-0.5-0.7-1.2-1.2-1.9-1.7c0-0.1,0-0.1,0-0.2c0-2.2-1.8-4-4-4s-4,1.8-4,4c0,0.1,0,0.1,0,0.2c-0.7,0.5-1.3,1-1.9,1.7C8.8,8.8,8,7.2,8,5.4V5c0-0.6-0.4-1-1-1S6,4.4,6,5v0.4c0,2.4,1.1,4.7,3.1,6.1c-0.5,1-0.9,2.2-1,3.5H3c-0.6,0-1,0.4-1,1s0.4,1,1,1h5.1c0.1,1.2,0.5,2.4,1,3.5C7.1,21.9,6,24.2,6,26.6V27c0,0.6,0.4,1,1,1s1-0.4,1-1v-0.4c0-1.8,0.8-3.4,2.2-4.5c1.5,1.8,3.5,2.9,5.8,2.9s4.4-1.1,5.8-2.9c1.4,1.1,2.2,2.7,2.2,4.5V27c0,0.6,0.4,1,1,1s1-0.4,1-1v-0.4c0-2.4-1.1-4.7-3.1-6.1c0.5-1,0.9-2.2,1-3.5H29c0.6,0,1-0.4,1-1S29.6,15,29,15z\" />\n        </svg>\n        )\n    ;\n}\n;\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\CodeView\\SyntaxHighlighter.tsx.ittf\n*/\nimport React, {FunctionComponent} from 'react';\nimport './SyntaxHighlighter.css';\nimport { Prism } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nexport type SyntaxHighlighterProps = { \n    filePath: string;\n    code: string;\n    showLineNumbers: boolean;\n};\nexport class SyntaxHighlighter extends React.Component<SyntaxHighlighterProps> {\n    componentDidMount() {\n        const el1 = document.querySelector('.syntax-highlight-container > pre');\n        console.log('SyntaxHighlighter.el1', el1, __filename);\n        if (el1 && el1.style) {\n            el1.style.margin = 0;\n            el1.style.padding = 0;\n            el1.style.height = '100%';\n        }\n    }\n    render() {\n        const language = getLanguage(this.props.filePath);\n        return  (\n            <div\n             className=\"syntax-highlight-container\">\n                <Prism\n                 language={language} showLineNumbers={this.props.showLineNumbers} style={dark}>\n                    {this.props.code}\n                </Prism>\n            </div>\n            )\n        ;\n    }\n}\nexport default SyntaxHighlighter;\nconst mimeLanguageMap = {\n    '.js': 'javascript', \n    '.jsx': 'javascript', \n    '.ts': 'typescript', \n    '.tsx': 'typescript', \n    '.html': 'html', \n    '.css': 'css', \n    '.svg': 'svg', \n    '.json': 'json', \n    '.xml': 'xml'\n };\nfunction getLanguage(path: string) {\n\n    const ext2 = path.substr(path.lastIndexOf('.'));\n    const rest = path.substr(0, path.lastIndexOf('.'));\n    const ext = rest.substr(rest.lastIndexOf('.'));\n    if (ext2 == '.ittf') {\n        const lang = mimeLanguageMap[ext];\n        return lang || 'text';\n    }\n    else {\n        const lang = mimeLanguageMap[ext2];\n        return lang || 'text';\n    }\n}\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\widgets\\WebFrame.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport * as React from 'react';\nimport {c} from '../ThemeProvider';\n\nexport type WebFrameProps = { \n    previewURL: string;\n};\n\nexport function WebFrame({\n    previewURL\n }: Props) {\n\n    return  (\n        <div\n         className={css(styles.container)}>\n            <iframe\n             src={previewURL} allow=\"geolocation; camera; microphone\" className={css(styles.frame)} />\n        </div>\n        )\n    ;\n}\n\nexport default WebFrame;\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'relative', \n        display: 'flex', \n        flex: 1, \n        width: '100%', \n        height: '100%'\n     }, \n    frame: {\n        position: 'relative', \n        width: '100%', \n        height: '100%', \n        border: 0, \n        zIndex: 1, \n        backgroundColor: c('content', 'light')\n     }\n });\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\GeneratedView.tsx.ittf\n*/\nimport * as React from 'react';\nimport {withStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport {BrowserIcon} from '../../assets/BrowserIcon';\nimport {TreeIcon} from '../../assets/TreeIcon';\nimport {DebugIcon} from '../../assets/DebugIcon';\nimport SyntaxHighlighter from '../CodeView/SyntaxHighlighter';\nimport WebFrame from '../widgets/WebFrame';\ntype ViewKindType = 'generated' | 'mtreeIttf' | 'mTreeBuildupScript' | 'browser';\ntype Props = { \n    classes: any;\n    selectedFile: string;\n    generatedContent: string;\n    generatedSourcePath?: string;\n    mTreeBuildupScript?: string;\n    mTreeIttf?: string;\n    wizzifiedIttfContent?: string;\n    generatedPreviewURL?: string;\n    splitViewKind: string;\n    onMTreePreview: () => void;\n    onMTreeDebugInfoPreview: () => void;\n};\ntype State = { \n    view: ViewKindType | null;\n};\nclass GeneratedView extends React.Component<Props, State> {\n    state = {\n        view: 'generated' as ViewKindType\n    }\n    ;\n    _handleGenerated = () => \n    \n        this.setState({\n            view: 'generated'\n         })\n    ;\n    _handleMTree = () => {\n    \n        this.props.onMTreePreview();\n        this.setState({\n            view: 'mtreeIttf'\n         })\n    }\n    ;\n    _handleMTreeDebugInfo = () => {\n    \n        this.props.onMTreeDebugInfoPreview();\n        this.setState({\n            view: 'mTreeBuildupScript'\n         })\n    }\n    ;\n    _handleBrowser = () => \n    \n        this.setState({\n            view: 'browser'\n         })\n    ;\n    render() {\n        const {\n            classes, \n            splitViewKind, \n            selectedFile\n         } = this.props;\n        const {\n            view\n         } = this.state;\n        return  (\n            <div\n             className={splitViewKind === 'right' ? classes.containerFull : classes.container}>\n                {\n                    view === 'generated' && this.props.generatedContent\n                     &&  (\n                        <div\n                         className={classes.editor}>\n                            <SyntaxHighlighter \n                                className={classes.syntaxHigh}\n                                code={this.props.generatedContent}\n                                filePath={selectedFile.substr(0, selectedFile.length - 5)}\n                                lineNumbers={true}\n                             />\n                        </div>\n                        )\n                    \n                }\n                {\n                    view === 'generated' && this.props.wizzifiedIttfContent\n                     &&  (\n                        <div\n                         className={classes.editor}>\n                            <SyntaxHighlighter \n                                className={classes.syntaxHigh}\n                                code={this.props.wizzifiedIttfContent}\n                                filePath={selectedFile}\n                                lineNumbers={true}\n                             />\n                        </div>\n                        )\n                    \n                }\n                {\n                    view === 'mtreeIttf'\n                     &&  (\n                        <div\n                         className={classes.editor}>\n                            <SyntaxHighlighter \n                                className={classes.syntaxHigh}\n                                code={this.props.mTreeIttf || ''}\n                                filePath={'mTree.ittf'}\n                                lineNumbers={true}\n                             />\n                        </div>\n                        )\n                    \n                }\n                {\n                    view === 'mTreeBuildupScript'\n                     &&  (\n                        <div\n                         className={classes.editor}>\n                            <SyntaxHighlighter \n                                className={classes.syntaxHigh}\n                                code={this.props.mTreeBuildupScript || ''}\n                                filePath={'mTreeBuildupScript.js'}\n                                lineNumbers={true}\n                             />\n                        </div>\n                        )\n                    \n                }\n                {\n                    view === 'browser'\n                     &&  (\n                        <div\n                         className={classes.browserOuter}>\n                            {\n                                ((this.props.generatedSourcePath.endsWith('.html.ittf') || this.props.generatedSourcePath.endsWith('.svg.ittf')) ?  (\n                                    <WebFrame\n                                     previewURL={this.props.generatedPreviewURL} />\n                                    )\n                                 :  (\n                                    <h1\n                                    >\n                                        No viewer for document  \n                                        {this.props.generatedSourcePath}\n                                    </h1>\n                                    )\n                                )\n                            }\n                        </div>\n                        )\n                    \n                }\n                <div\n                 className={classes.sidebar}>\n                    <div\n                     className={classes.sbItem}>\n                        <Tooltip\n                         title=\"View generated content\">\n                            <IconButton\n                             onClick={this._handleGenerated} classes={{\n                                    root: classes.iconButton\n                                 }}>\n                                <ViewListIcon\n                                 />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <div\n                     className={classes.sbItem}>\n                        <Tooltip\n                         title=\"View mTree\">\n                            <IconButton\n                             onClick={this._handleMTree} classes={{\n                                    root: classes.iconButton\n                                 }}>\n                                <AccountTreeIcon\n                                 />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <div\n                     className={classes.sbItem}>\n                        <Tooltip\n                         title=\"View mTree build script\">\n                            <IconButton\n                             onClick={this._handleMTreeDebugInfo} classes={{\n                                    root: classes.iconButton\n                                 }}>\n                                <DebugIcon\n                                 />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <div\n                     className={classes.sbItem}>\n                        <Tooltip\n                         title=\"Browse artifact\">\n                            <IconButton\n                             onClick={this._handleBrowser} classes={{\n                                    root: classes.iconButton\n                                 }}>\n                                <BrowserIcon\n                                 />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            </div>\n            )\n        ;\n    }\n}\nconst muiStyles = (theme: Theme) => \n\n    createStyles({\n        container: {\n            display: 'flex', \n            flexDirection: 'row', \n            borderLeft: '1px solid #cccccc', \n            width: '44vw', \n            height: '100%'\n         }, \n        containerFull: {\n            display: 'flex', \n            flexDirection: 'row', \n            borderLeft: '1px solid #cccccc', \n            width: '100%', \n            height: '100%'\n         }, \n        editor: {\n            width: '90%'\n         }, \n        browserOuter: {\n            border: '0.3em solid rgb(122, 102, 82)', \n            borderRadius: '0.5em', \n            width: '90%'\n         }, \n        syntaxHigh: {\n            margin: 0, \n            padding: 0, \n            height: '100%'\n         }, \n        sidebar: {\n            display: 'flex', \n            flexDirection: 'column', \n            justifyContent: 'start', \n            width: '10%', \n            background: theme.palette.primary.light\n         }, \n        sbItem: {\n            display: 'flex', \n            justifyContent: 'center'\n         }, \n        iconButton: {\n            padding: '10px'\n         }\n     })\n;\nexport default withStyles(muiStyles)(GeneratedView);\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\GenerationErrors.tsx.ittf\n*/\nimport * as React from 'react';\nimport {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nexport type GenerationErrorsProps = { \n    classes: any;\n    error?: any;\n};\n\nexport class GenerationErrors extends React.Component<GenerationErrorsProps> {\n    render() {\n        const {\n            classes, \n            error\n         } = this.props;\n        const {\n            name, \n            message, \n            stack, \n            errorLines\n         } = error;\n        return  (\n            <div\n             className={classes.container}>\n                <div\n                 className={classes.errorName}>\n                    {name}\n                </div>\n                <div\n                 className={classes.message}>\n                    {\n                        message\n                         && message.split(',').map((line, i) => \n                        \n                             (\n                            <div\n                             key={i}>\n                                {line}\n                            </div>\n                            )\n                        \n                        )\n                    }\n                </div>\n                <pre\n                 className={classes.lines}>\n                    {errorLines && errorLines.join('\\n')}\n                </pre>\n                <ul\n                >\n                    {\n                        stack\n                         && stack.split('\\n').map((line, i) => \n                        \n                             (\n                            <li\n                             key={i}>\n                                {line}\n                            </li>\n                            )\n                        \n                        )\n                    }\n                </ul>\n            </div>\n            )\n        ;\n    }\n}\n\nconst muiStyles = (theme: Theme) => \n\n    createStyles({\n        container: {\n            display: 'flex', \n            flexDirection: 'column', \n            borderLeft: '1px solid #cccccc', \n            width: '44vw', \n            height: '100%', \n            overflow: 'scroll'\n         }, \n        errorName: {\n            padding: '15px 30px', \n            fontSize: '28px'\n         }, \n        message: {\n            padding: '15px 30px', \n            fontSize: '20px'\n         }, \n        lines: {\n            padding: '15px 30px', \n            fontSize: '18px', \n            fontFamily: 'Courier, mono'\n         }\n     })\n;\n\nexport default withStyles(muiStyles)(GenerationErrors);\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.11\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi.apps\\packages\\wizzi.editor\\.wizzi\\src\\components\\EditorView\\EditorView.tsx.ittf\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport debounce from 'lodash/debounce';\nimport * as React from 'react';\nimport {connect} from 'react-redux';\n// import Split from 'react-split'\nimport {Split} from '../widgets/splitter/Split';\nimport {PackiFiles, PackiProduction} from '../../features/packi';\nimport {GeneratedArtifact} from '../../features/wizzi';\nimport {LoggedUser} from '../../features/app';\nimport {Annotation} from '../../features/annotations';\nimport {isScript, isJson, isTest} from '../../features/file/index';\nimport {EditorProps} from '../Editor/EditorProps';\nimport EditorFooter from './EditorFooter';\nimport EditorPanels from './EditorPanels';\nimport EditorToolbar from './EditorToolbar';\nimport {EditorViewProps as BaseEditorViewProps} from './EditorViewProps';\nimport FileList from '../FileList/FileList';\nimport KeyboardShortcuts, {Shortcuts} from './KeyboardShortcuts';\nimport NoFileSelected from './NoFileSelected';\nimport PageMetadata from '../PageMetadata';\nimport type {PanelType} from '../../features/preferences/index';\nimport {withPreferences, PreferencesContextType} from '../../features/preferences/index';\n// from shell\nimport {ContentShell} from '../shell/ContentShell';\nimport {EditorShell} from '../shell/EditorShell';\nimport {LayoutShell} from '../shell/LayoutShell';\nimport {c, s} from '../ThemeProvider';\n// from widgets\nimport Banner from '../widgets/Banner';\nimport KeybindingsManager from '../widgets/KeybindingsManager';\nimport LazyLoad from '../widgets/LazyLoad';\nimport {ModalDialog} from '../widgets/ModalDialog';\nimport {ProgressIndicator} from '../widgets/ProgressIndicator';\nimport GeneratedView from './GeneratedView';\nimport GenerationErrors from './GenerationErrors';\n\nconst EDITOR_LOAD_FALLBACK_TIMEOUT = 3000;\n\nexport type EditorViewProps = PreferencesContextType & BaseEditorViewProps & { \n    loggedUser?: LoggedUser;\n};\ntype ModalName = 'auth' | 'packi-manager' | 'github-commit' | 'github-create' | 'edit-info' | 'shortcuts' | 'previous-saves' | 'import-repo' | 'import-production';\ntype BannerName = 'reconnect' | 'autosave-disabled' | 'export-unavailable' | 'slow-connection';\ntype SplitViewKind = 'left' | 'right' | 'both';\ntype State = { \n    currentModal: ModalName | null;\n    currentBanner: BannerName | null;\n    loadedEditor: 'monaco' | 'simple' | null;\n    isMarkdownPreview: boolean;\n    shouldPreventRedirectWarning: boolean;\n    isDownloading: boolean;\n    splitViewKind: SplitViewKind;\n};\nconst BANNER_TIMEOUT_SHORT = 1500;\nconst BANNER_TIMEOUT_LONG = 5000;\nclass EditorViewComp extends React.Component<EditorViewProps, State> {\n    state: State = {\n        currentModal: null, \n        currentBanner: null, \n        loadedEditor: null, \n        isMarkdownPreview: true, \n        shouldPreventRedirectWarning: false, \n        isDownloading: false, \n        splitViewKind: 'both' as SplitViewKind\n    }\n    ;\n    \n    static getDerivedStateFromProps(props: EditorViewProps, state: State) {\n        const {\n            selectedFile, \n            files\n         } = props;\n        \n        // When an empty markdown file is opened, switch to edit mode\n        let newState: any = null;\n        if (state.isMarkdownPreview && selectedFile.endsWith('.md') && !files[selectedFile]?.contents) {\n            newState = newState || {};\n            newState.isMarkdownPreview = false;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        window.addEventListener('beforeunload', this._handleUnload);\n    }\n    \n    componentDidUpdate(prevProps: EditorViewProps) {\n        if (prevProps.autosaveEnabled !== this.props.autosaveEnabled && !this.props.autosaveEnabled) {\n            this._showBanner('autosave-disabled', BANNER_TIMEOUT_LONG);\n        }\n    }\n    \n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this._handleUnload);\n    }\n    \n    _handleUnload = (e: any) => {\n        const isUnsaved = this.props.saveStatus === 'edited' || this.props.saveStatus === 'publishing' || this.props.saveStatus === 'saving-draft';\n        if (!isUnsaved || this.state.shouldPreventRedirectWarning) {\n            this._allowRedirectWarning();\n            return ;\n        }\n        const message = 'You have unsaved changes. Are you sure you want to leave this page?';\n        e.returnValue = message;\n        return message;\n    };\n    _showBanner = (name: BannerName, duration: number) => {\n        this.setState({\n            currentBanner: name\n         })\n        setTimeout(() => \n        \n            // @ts-ignore\n            this.setState((state) => \n            \n                (state.currentBanner === name ? {\n                        currentBanner: null\n                     } : state)\n            )\n        , duration)\n    };\n    \n    _handleChangeSplitViewKind = (e: any) => \n    \n        this.setState({\n            splitViewKind: e.target.value as SplitViewKind\n         })\n    ;\n    \n    _handleDismissEditModal = () => \n        this.setState({\n            currentModal: null\n         });\n    _handleShowTitleDescriptionModal = () => \n        this.setState({\n            currentModal: 'edit-info'\n         });\n    _handleShowShortcuts = () => \n        this.setState({\n            currentModal: 'shortcuts'\n         });\n    _handleShowModal = (name: any) => \n        this.setState({\n            currentModal: name\n         });\n    _handleRemoveFile = (path: string) => \n        this._EditorComponent?.removePath?.(path);\n    _handleRenameFile = (oldPath: string, newPath: string) => \n        this._EditorComponent?.renamePath?.(oldPath, newPath);\n    _EditorComponent: any;\n    _showErrorPanel = () => \n        this.props.setPreferences({\n            panelType: 'errors'\n         });\n    _togglePanels = (panelType?: PanelType) => \n        this.props.setPreferences({\n            panelsShown: !this.props.preferences.panelsShown, \n            panelType: panelType && !this.props.preferences.panelsShown ? panelType : this.props.preferences.panelType\n         });\n    _toggleFileTree = () => \n        this.props.setPreferences({\n            fileTreeShown: !this.props.preferences.fileTreeShown\n         });\n    _toggleTheme = () => \n        this.props.setPreferences({\n            theme: this.props.preferences.theme === 'light' ? 'dark' : 'light'\n         });\n    _toggleMarkdownPreview = () => \n        this.setState((state) => \n        \n            ({\n                isMarkdownPreview: !state.isMarkdownPreview\n             })\n        );\n    _preventRedirectWarning = () => \n        this.setState({\n            shouldPreventRedirectWarning: true\n         });\n    _allowRedirectWarning = () => \n        this.setState({\n            shouldPreventRedirectWarning: false\n         });\n    \n    // log 'EditorView.props.loggedUser', loggedUser, this.props.loggedUser\n    render() {\n        const {\n            currentModal, \n            currentBanner, \n            isDownloading\n         } = this.state;\n        const {\n            id, \n            createdAt, \n            saveStatus, \n            files, \n            selectedFile, \n            sendCodeOnChangeEnabled, \n            userAgent, \n            onPublishAsync, \n            preferences, \n            owner, \n            name, \n            description, \n            mainIttf, \n            wizziSchema, \n            packiProduction, \n            previewRef, \n            previewURL, \n            loggedUser, \n            onExecuteWizziJob, \n            generatedArtifact, \n            mTreeBuildupScript, \n            mTreeIttf, \n            isWizziJobWaiting, \n            wizzifiedIttfContent, \n            wizziError, \n            onMTreePreview, \n            onMTreeDebugInfoPreview\n         } = this.props;\n        const annotations = this.props.annotations;\n        const testPreviewURL = `${process.env.API_SERVER_URL}/~/${encodeURIComponent(owner)}/${encodeURIComponent(name)}`;\n        console.log('EditorView.props', this.props, mainIttf, wizziSchema, __filename);\n        return  (\n            <ContentShell\n            >\n                {\n                    this.state.loadedEditor ? null :  (\n                        <ProgressIndicator\n                         />\n                        )\n                    \n                }\n                <PageMetadata\n                 name={name} description={description} id={id} />\n                <KeybindingsManager\n                 bindings={Shortcuts} onTrigger={(type) => {\n                    \n                        const commands: { \n                            [key: string]: (() => void) | null;\n                        } = {\n                            tree: this._toggleFileTree, \n                            panels: this._togglePanels, \n                            shortcuts: this._handleShowShortcuts\n                         };\n                        const fn = commands[type];\n                        if (fn) {\n                            fn();\n                        }\n                    }\n                } />\n                <EditorToolbar \n                    packiProduction={packiProduction}\n                    name={name}\n                    description={description}\n                    wizziSchema={wizziSchema}\n                    mainIttf={mainIttf}\n                    readOnly={this.props.readOnly}\n                    createdAt={createdAt}\n                    saveStatus={saveStatus}\n                    loggedUser={loggedUser}\n                    isEditModalVisible={currentModal === 'edit-info'}\n                    isWizziJobWaiting={isWizziJobWaiting}\n                    onChangeSplitViewKind={this._handleChangeSplitViewKind}\n                    splitViewKind={this.state.splitViewKind}\n                    isDownloading={isDownloading}\n                    generatedPreviewURL={previewURL}\n                    onShowEditModal={this._handleShowTitleDescriptionModal}\n                    onDismissEditModal={this._handleDismissEditModal}\n                    onExecuteWizziJob={onExecuteWizziJob}\n                    onSubmitMetadata={this.props.onSubmitMetadata}\n                    onDownloadCode={this.props.onDownloadAsync}\n                    onPublishAsync={onPublishAsync}\n                 />\n                <div\n                 className={css(styles.editorAreaOuterWrapper)}>\n                    <div\n                     className={css(styles.editorAreaOuter)}>\n                        <LayoutShell\n                        >\n                            <Split\n                             initialPrimarySize=\"30%\">\n                                <FileList \n                                    annotations={annotations}\n                                    visible={preferences.fileTreeShown}\n                                    files={files}\n                                    selectedFile={selectedFile}\n                                    readOnly={this.props.readOnly}\n                                    updateFiles={this.props.updateFiles}\n                                    onSelectFile={this.props.onSelectFile}\n                                    onRemoveFile={this._handleRemoveFile}\n                                    onRenameFile={this._handleRenameFile}\n                                    onDownloadCode={this.props.onDownloadAsync}\n                                    saveStatus={saveStatus}\n                                 />\n                                <Split\n                                 initialPrimarySize=\"60%\">\n                                    <LazyLoad\n                                     load={async ():  Promise<{ \n                                            default: React.ComponentType<EditorProps>;\n                                        }> => {\n                                        \n                                            let timeout: any;\n                                            \n                                            // Fallback to simple editor if monaco editor takes too long to load\n                                            const MonacoEditorPromise = import('../Editor/MonacoEditor').then((editor) => \n                                            \n                                                ({\n                                                    editor, \n                                                    type: 'monaco'\n                                                 })\n                                            )\n                                            ;\n                                            \n                                            // Fallback to simple editor if monaco editor takes too long to load\n                                            const SimpleEditorPromise = new Promise((resolve, reject) => \n                                            \n                                                timeout = setTimeout(() => {\n                                                \n                                                    this._showBanner('slow-connection', BANNER_TIMEOUT_LONG);\n                                                    import('../Editor/SimpleEditor').then(resolve, reject)\n                                                }\n                                                , EDITOR_LOAD_FALLBACK_TIMEOUT)\n                                            \n                                            ).then((editor) => \n                                            \n                                                ({\n                                                    editor, \n                                                    type: 'simple'\n                                                 })\n                                            );\n                                            return Promise.race([\n                                                    MonacoEditorPromise.catch(() => \n                                                    \n                                                        SimpleEditorPromise\n                                                    \n                                                    ), \n                                                    SimpleEditorPromise\n                                                ]).then(({\n                                                    editor, \n                                                    type\n                                                 }: any) => {\n                                                \n                                                    this.setState({\n                                                        loadedEditor: type\n                                                     })\n                                                    clearTimeout(timeout);\n                                                    return editor;\n                                                }\n                                                )\n                                            ;\n                                        }\n                                    }>\n                                        {\n                                            ({\n                                                loaded, \n                                                data: Comp\n                                             }) => {\n                                            \n                                                this._EditorComponent = Comp;\n                                                const file = files[selectedFile];\n                                                if (file) {\n                                                    const {\n                                                        contents\n                                                     } = file;\n                                                    const isMarkdown = selectedFile.endsWith('.md');\n                                                    if (isMarkdown && this.state.isMarkdownPreview) {\n                                                        return  (\n                                                            <React.Fragment\n                                                            >\n                                                                <LazyLoad\n                                                                 load={() => \n                                                                    \n                                                                        import('../Markdown/MarkdownPreview')\n                                                                }>\n                                                                    {\n                                                                        ({\n                                                                            loaded: mdLoaded, \n                                                                            data: MarkdownPreview\n                                                                         }) => {\n                                                                        \n                                                                            if (mdLoaded && MarkdownPreview) {\n                                                                                return  (\n                                                                                    <MarkdownPreview\n                                                                                     source={contents as string} />\n                                                                                    )\n                                                                                ;\n                                                                            }\n                                                                            return  (\n                                                                                <EditorShell\n                                                                                 />\n                                                                                )\n                                                                            ;\n                                                                        }\n                                                                        \n                                                                    }\n                                                                </LazyLoad>\n                                                                <button\n                                                                 className={css(styles.previewToggle)} onClick={this._toggleMarkdownPreview}>\n                                                                    <svg \n                                                                        width=\"12px\"\n                                                                        height=\"12px\"\n                                                                        viewBox=\"0 0 18 18\"\n                                                                        className={css(styles.previewToggleIcon)}\n                                                                    >\n                                                                        <g\n                                                                         transform=\"translate(-147.000000, -99.000000)\">\n                                                                            <g\n                                                                             transform=\"translate(144.000000, 96.000000)\">\n                                                                                <path\n                                                                                 d=\"M3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 L3,17.25 L3,17.25 Z M20.71,7.04 C21.1,6.65 21.1,6.02 20.71,5.63 L18.37,3.29 C17.98,2.9 17.35,2.9 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 L20.71,7.04 Z\" />\n                                                                            </g>\n                                                                        </g>\n                                                                    </svg>\n                                                                </button>\n                                                            </React.Fragment>\n                                                            )\n                                                        ;\n                                                    }\n                                                    if (loaded && Comp) {\n                                                        return  (\n                                                            <div\n                                                             className={css(styles.editorComponentOuter)}>\n                                                                <Comp \n                                                                    className={css(styles.editorComponent)}\n                                                                    selectedFile={selectedFile}\n                                                                    files={files}\n                                                                    autoFocus={!/Untitled file.*\\.(js|tsx?)$/.test(selectedFile)}\n                                                                    annotations={annotations}\n                                                                    readOnly={this.props.readOnly}\n                                                                    updateFiles={this.props.updateFiles}\n                                                                    onSelectFile={this.props.onSelectFile}\n                                                                    lineNumbers=\"undefined\"\n                                                                 />\n                                                                {\n                                                                    isMarkdown ?  (\n                                                                        <button\n                                                                         className={css(styles.previewToggle)} onClick={this._toggleMarkdownPreview}>\n                                                                            <svg \n                                                                                width=\"16px\"\n                                                                                height=\"12px\"\n                                                                                viewBox=\"0 0 22 16\"\n                                                                                className={css(styles.previewToggleIcon)}\n                                                                            >\n                                                                                <g\n                                                                                 transform=\"translate(-145.000000, -1156.000000)\">\n                                                                                    <g\n                                                                                     transform=\"translate(144.000000, 1152.000000)\">\n                                                                                        <path\n                                                                                         d=\"M12,4.5 C7,4.5 2.73,7.61 1,12 C2.73,16.39 7,19.5 12,19.5 C17,19.5 21.27,16.39 23,12 C21.27,7.61 17,4.5 12,4.5 L12,4.5 Z M12,17 C9.24,17 7,14.76 7,12 C7,9.24 9.24,7 12,7 C14.76,7 17,9.24 17,12 C17,14.76 14.76,17 12,17 L12,17 Z M12,9 C10.34,9 9,10.34 9,12 C9,13.66 10.34,15 12,15 C13.66,15 15,13.66 15,12 C15,10.34 13.66,9 12,9 L12,9 Z\" />\n                                                                                    </g>\n                                                                                </g>\n                                                                            </svg>\n                                                                        </button>\n                                                                        )\n                                                                     : null\n                                                                }\n                                                            </div>\n                                                            )\n                                                        ;\n                                                    }\n                                                }\n                                                else {\n                                                    return  (\n                                                        <NoFileSelected\n                                                         />\n                                                        )\n                                                    ;\n                                                }\n                                                return  (\n                                                    <EditorShell\n                                                     />\n                                                    )\n                                                ;\n                                            }\n                                            \n                                        }\n                                    </LazyLoad>\n                                    {\n                                        wizziError ?  (\n                                            <GenerationErrors\n                                             error={wizziError} />\n                                            )\n                                         : (generatedArtifact && generatedArtifact.artifactContent) || wizzifiedIttfContent ?  (\n                                                <GeneratedView \n                                                    selectedFile={this.props.selectedFile}\n                                                    generatedContent={generatedArtifact ? generatedArtifact.artifactContent : undefined}\n                                                    generatedSourcePath={generatedArtifact ? generatedArtifact.sourcePath : undefined}\n                                                    mTreeBuildupScript={mTreeBuildupScript}\n                                                    mTreeIttf={mTreeIttf}\n                                                    wizzifiedIttfContent={wizzifiedIttfContent}\n                                                    generatedPreviewURL={previewURL}\n                                                    splitViewKind={this.state.splitViewKind}\n                                                    onMTreePreview={onMTreePreview}\n                                                    onMTreeDebugInfoPreview={onMTreeDebugInfoPreview}\n                                                 />\n                                                )\n                                             : generatedArtifact && generatedArtifact.errorLines ?  (\n                                                    <GenerationErrors \n                                                        errorName={generatedArtifact.errorName}\n                                                        errorLines={generatedArtifact.errorLines}\n                                                        errorMessage={generatedArtifact.errorMessage}\n                                                        errorStack={generatedArtifact.errorStack}\n                                                     />\n                                                    )\n                                                 : null\n                                    }\n                                </Split>\n                            </Split>\n                        </LayoutShell>\n                        {\n                            preferences.panelsShown ?  (\n                                <EditorPanels \n                                    annotations={annotations}\n                                    onShowErrorPanel={this._showErrorPanel}\n                                    onTogglePanels={this._togglePanels}\n                                    onSelectFile={this.props.onSelectFile}\n                                    panelType={preferences.panelType}\n                                 />\n                                )\n                             : null\n                        }\n                    </div>\n                </div>\n                <EditorFooter \n                    annotations={annotations}\n                    loggedUser={loggedUser}\n                    fileTreeShown={preferences.fileTreeShown}\n                    panelsShown={preferences.panelsShown}\n                    sendCodeOnChangeEnabled={sendCodeOnChangeEnabled}\n                    onToggleTheme={this._toggleTheme}\n                    onTogglePanels={this._togglePanels}\n                    onToggleFileTree={this._toggleFileTree}\n                    onShowShortcuts={this._handleShowShortcuts}\n                    theme={this.props.preferences.theme}\n                    autoGenSingleDoc={preferences.autoGenSingleDoc}\n                    autoExecJob={preferences.autoExecJob}\n                 />\n                <ModalDialog\n                 visible={currentModal === 'shortcuts'} onDismiss={this._handleHideModal}>\n                    <KeyboardShortcuts\n                     />\n                </ModalDialog>\n                <Banner\n                 type=\"info\" visible={currentBanner === 'autosave-disabled'}>\n                    Automatic saving has been disabled in this Packi because you have it open in\n                  another tab.\n                </Banner>\n                <Banner\n                 type=\"info\" visible={currentBanner === 'slow-connection'}>\n                    Slow network detected. Trying to load a basic version of the editor. Some features\n                  such as linting and autocomplete may not work.\n                </Banner>\n                <Banner\n                 type=\"info\" visible={currentBanner === 'export-unavailable'}>\n                    You need to save the Packi first to export the code!\n                </Banner>\n            </ContentShell>\n            )\n        ;\n    }\n}\nexport const EditorView = withPreferences(EditorViewComp);\nexport default EditorView;\nconst styles = StyleSheet.create({\n    editorAreaOuter: {\n        display: 'flex', \n        flex: 1, \n        flexDirection: 'column', \n        minWidth: 0, \n        minHeight: 0\n     }, \n    editorAreaOuterWrapper: {\n        display: 'flex', \n        flex: 1, \n        flexDirection: 'row', \n        minHeight: 0, \n        minWidth: 0\n     }, \n    embedModal: {\n        minWidth: 0, \n        minHeight: 0, \n        maxWidth: 'calc(100% - 48px)', \n        maxHeight: 'calc(100% - 48px)'\n     }, \n    preview: {\n        backgroundColor: c('content'), \n        borderLeft: `1px solid ${c('border')}`\n     }, \n    previewToggle: {\n        appearance: 'none', \n        position: 'absolute', \n        right: 0, \n        bottom: 0, \n        margin: 32, \n        padding: 12, \n        height: 48, \n        width: 48, \n        border: 0, \n        borderRadius: '50%', \n        backgroundColor: c('secondary'), \n        color: c('secondary-text'), \n        outline: 0, \n        transitionDuration: '170ms', \n        transitionProperty: 'box-shadow', \n        transitionTimingFunction: 'linear', \n        ':focus-visible': {\n            outline: 'auto'\n         }, \n        ':hover': {\n            boxShadow: s('small')\n         }\n     }, \n    previewToggleIcon: {\n        fill: 'currentColor', \n        verticalAlign: -1\n     }, \n    editorComponentOuter: {\n        border: '0.3em solid rgb(122, 102, 82)', \n        borderRadius: '0.5em', \n        height: '100%', \n        width: '100%'\n     }, \n    editorComponent: {\n        height: '100%', \n        width: '100%'\n     }\n });\n","export default __webpack_public_path__ + \"assets/c30688b34674907e653a3ed6c4f4b32e.png\";","export default __webpack_public_path__ + \"assets/5164d45d60e8aaa815782671bc55c243.png\";","export default __webpack_public_path__ + \"assets/7ccdedc1554fd42cf97740128c0ab1db.png\";","export default __webpack_public_path__ + \"assets/883481150a50d23d04b3cb88d03713d4.png\";","export default __webpack_public_path__ + \"assets/57a5dfd897cd26233394742647bb768e.png\";","export default __webpack_public_path__ + \"assets/d96019678d8d19c83e5cd22d04b745ad.png\";","export default __webpack_public_path__ + \"assets/51631d4fcbedcb496eff14fedc2f6139.png\";"],"sourceRoot":""}